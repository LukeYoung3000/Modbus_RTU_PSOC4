ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RS485.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RS485_Init,"ax",%progbits
  20              		.align	2
  21              		.global	RS485_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	RS485_Init, %function
  25              	RS485_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\RS485.c"
   1:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/RS485.c **** * File Name: RS485.c
   3:Generated_Source\PSoC4/RS485.c **** * Version 2.50
   4:Generated_Source\PSoC4/RS485.c **** *
   5:Generated_Source\PSoC4/RS485.c **** * Description:
   6:Generated_Source\PSoC4/RS485.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/RS485.c **** *
   8:Generated_Source\PSoC4/RS485.c **** * Note:
   9:Generated_Source\PSoC4/RS485.c **** *
  10:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
  11:Generated_Source\PSoC4/RS485.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/RS485.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/RS485.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/RS485.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/RS485.c **** 
  17:Generated_Source\PSoC4/RS485.c **** #include "RS485.h"
  18:Generated_Source\PSoC4/RS485.c **** #if (RS485_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/RS485.c ****     #include "RS485_IntClock.h"
  20:Generated_Source\PSoC4/RS485.c **** #endif /* End RS485_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/RS485.c **** 
  22:Generated_Source\PSoC4/RS485.c **** 
  23:Generated_Source\PSoC4/RS485.c **** /***************************************
  24:Generated_Source\PSoC4/RS485.c **** * Global data allocation
  25:Generated_Source\PSoC4/RS485.c **** ***************************************/
  26:Generated_Source\PSoC4/RS485.c **** 
  27:Generated_Source\PSoC4/RS485.c **** uint8 RS485_initVar = 0u;
  28:Generated_Source\PSoC4/RS485.c **** 
  29:Generated_Source\PSoC4/RS485.c **** #if (RS485_TX_INTERRUPT_ENABLED && RS485_TX_ENABLED)
  30:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_txBuffer[RS485_TX_BUFFER_SIZE];
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 2


  31:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_txBufferRead = 0u;
  32:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_txBufferWrite = 0u;
  33:Generated_Source\PSoC4/RS485.c **** #endif /* (RS485_TX_INTERRUPT_ENABLED && RS485_TX_ENABLED) */
  34:Generated_Source\PSoC4/RS485.c **** 
  35:Generated_Source\PSoC4/RS485.c **** #if (RS485_RX_INTERRUPT_ENABLED && (RS485_RX_ENABLED || RS485_HD_ENABLED))
  36:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_errorStatus = 0u;
  37:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_rxBuffer[RS485_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/RS485.c ****     volatile uint8 RS485_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/RS485.c ****         volatile uint8 RS485_rxAddressMode = RS485_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/RS485.c ****         volatile uint8 RS485_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/RS485.c **** #endif /* (RS485_RX_INTERRUPT_ENABLED && (RS485_RX_ENABLED || RS485_HD_ENABLED)) */
  47:Generated_Source\PSoC4/RS485.c **** 
  48:Generated_Source\PSoC4/RS485.c **** 
  49:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/RS485.c **** * Function Name: RS485_Start
  51:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
  52:Generated_Source\PSoC4/RS485.c **** *
  53:Generated_Source\PSoC4/RS485.c **** * Summary:
  54:Generated_Source\PSoC4/RS485.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/RS485.c **** *  RS485_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/RS485.c **** *  RS485_Init() function, and then calls the
  57:Generated_Source\PSoC4/RS485.c **** *  RS485_Enable() function.
  58:Generated_Source\PSoC4/RS485.c **** *
  59:Generated_Source\PSoC4/RS485.c **** * Parameters:
  60:Generated_Source\PSoC4/RS485.c **** *  None.
  61:Generated_Source\PSoC4/RS485.c **** *
  62:Generated_Source\PSoC4/RS485.c **** * Return:
  63:Generated_Source\PSoC4/RS485.c **** *  None.
  64:Generated_Source\PSoC4/RS485.c **** *
  65:Generated_Source\PSoC4/RS485.c **** * Global variables:
  66:Generated_Source\PSoC4/RS485.c **** *  The RS485_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/RS485.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/RS485.c **** *  and set to one (1u) the first time RS485_Start() is called. This
  69:Generated_Source\PSoC4/RS485.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/RS485.c **** *  subsequent calls to the RS485_Start() routine.
  71:Generated_Source\PSoC4/RS485.c **** *
  72:Generated_Source\PSoC4/RS485.c **** * Reentrant:
  73:Generated_Source\PSoC4/RS485.c **** *  No.
  74:Generated_Source\PSoC4/RS485.c **** *
  75:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/RS485.c **** void RS485_Start(void) 
  77:Generated_Source\PSoC4/RS485.c **** {
  78:Generated_Source\PSoC4/RS485.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/RS485.c ****     if(RS485_initVar == 0u)
  80:Generated_Source\PSoC4/RS485.c ****     {
  81:Generated_Source\PSoC4/RS485.c ****         RS485_Init();
  82:Generated_Source\PSoC4/RS485.c ****         RS485_initVar = 1u;
  83:Generated_Source\PSoC4/RS485.c ****     }
  84:Generated_Source\PSoC4/RS485.c **** 
  85:Generated_Source\PSoC4/RS485.c ****     RS485_Enable();
  86:Generated_Source\PSoC4/RS485.c **** }
  87:Generated_Source\PSoC4/RS485.c **** 
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 3


  88:Generated_Source\PSoC4/RS485.c **** 
  89:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/RS485.c **** * Function Name: RS485_Init
  91:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
  92:Generated_Source\PSoC4/RS485.c **** *
  93:Generated_Source\PSoC4/RS485.c **** * Summary:
  94:Generated_Source\PSoC4/RS485.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/RS485.c **** *  dialog settings. It is not necessary to call RS485_Init() because
  96:Generated_Source\PSoC4/RS485.c **** *  the RS485_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/RS485.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/RS485.c **** *
  99:Generated_Source\PSoC4/RS485.c **** * Parameters:
 100:Generated_Source\PSoC4/RS485.c **** *  None.
 101:Generated_Source\PSoC4/RS485.c **** *
 102:Generated_Source\PSoC4/RS485.c **** * Return:
 103:Generated_Source\PSoC4/RS485.c **** *  None.
 104:Generated_Source\PSoC4/RS485.c **** *
 105:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/RS485.c **** void RS485_Init(void) 
 107:Generated_Source\PSoC4/RS485.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC4/RS485.c ****     #if(RS485_RX_ENABLED || RS485_HD_ENABLED)
 109:Generated_Source\PSoC4/RS485.c **** 
 110:Generated_Source\PSoC4/RS485.c ****         #if (RS485_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/RS485.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/RS485.c ****             (void) CyIntSetVector(RS485_RX_VECT_NUM, &RS485_RXISR);
 113:Generated_Source\PSoC4/RS485.c ****             CyIntSetPriority(RS485_RX_VECT_NUM, RS485_RX_PRIOR_NUM);
 114:Generated_Source\PSoC4/RS485.c ****             RS485_errorStatus = 0u;
 115:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/RS485.c **** 
 117:Generated_Source\PSoC4/RS485.c ****         #if (RS485_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/RS485.c ****             RS485_SetRxAddressMode(RS485_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/RS485.c ****             RS485_SetRxAddress1(RS485_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/RS485.c ****             RS485_SetRxAddress2(RS485_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/RS485.c ****         #endif /* End RS485_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/RS485.c **** 
 123:Generated_Source\PSoC4/RS485.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/RS485.c ****         RS485_RXBITCTR_PERIOD_REG = RS485_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 7222     		movs	r2, #114
  35 0002 074B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC4/RS485.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/RS485.c ****         RS485_RXSTATUS_MASK_REG  = RS485_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 523A     		subs	r2, r2, #82
  39 0008 064B     		ldr	r3, .L2+4
  40 000a 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC4/RS485.c ****     #endif /* End RS485_RX_ENABLED || RS485_HD_ENABLED*/
 128:Generated_Source\PSoC4/RS485.c **** 
 129:Generated_Source\PSoC4/RS485.c ****     #if(RS485_TX_ENABLED)
 130:Generated_Source\PSoC4/RS485.c ****         #if (RS485_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/RS485.c ****             /* Set TX interrupt vector and priority */
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 4


 132:Generated_Source\PSoC4/RS485.c ****             (void) CyIntSetVector(RS485_TX_VECT_NUM, &RS485_TXISR);
 133:Generated_Source\PSoC4/RS485.c ****             CyIntSetPriority(RS485_TX_VECT_NUM, RS485_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/RS485.c **** 
 136:Generated_Source\PSoC4/RS485.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/RS485.c ****         #if (RS485_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/RS485.c ****             RS485_TXBITCLKGEN_CTR_REG = RS485_BIT_CENTER;
  41              		.loc 1 138 0
  42 000c 1A3A     		subs	r2, r2, #26
  43 000e 064B     		ldr	r3, .L2+8
  44 0010 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/RS485.c ****             RS485_TXBITCLKTX_COMPLETE_REG = ((RS485_NUMBER_OF_DATA_BITS +
  45              		.loc 1 139 0
  46 0012 4132     		adds	r2, r2, #65
  47 0014 054B     		ldr	r3, .L2+12
  48 0016 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC4/RS485.c ****                         RS485_NUMBER_OF_START_BIT) * RS485_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/RS485.c ****         #else
 142:Generated_Source\PSoC4/RS485.c ****             RS485_TXBITCTR_PERIOD_REG = ((RS485_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/RS485.c ****                         RS485_NUMBER_OF_START_BIT) * RS485_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/RS485.c ****         #endif /* End RS485_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/RS485.c **** 
 146:Generated_Source\PSoC4/RS485.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/RS485.c ****         #if (RS485_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/RS485.c ****             RS485_TXSTATUS_MASK_REG = RS485_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/RS485.c ****         #else
 150:Generated_Source\PSoC4/RS485.c ****             RS485_TXSTATUS_MASK_REG = RS485_INIT_TX_INTERRUPTS_MASK;
  49              		.loc 1 150 0
  50 0018 0022     		movs	r2, #0
  51 001a 054B     		ldr	r3, .L2+16
  52 001c 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC4/RS485.c ****         #endif /*End RS485_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/RS485.c **** 
 153:Generated_Source\PSoC4/RS485.c ****     #endif /* End RS485_TX_ENABLED */
 154:Generated_Source\PSoC4/RS485.c **** 
 155:Generated_Source\PSoC4/RS485.c ****     #if(RS485_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/RS485.c ****         RS485_WriteControlRegister( \
 157:Generated_Source\PSoC4/RS485.c ****             (RS485_ReadControlRegister() & (uint8)~RS485_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/RS485.c ****             (uint8)(RS485_PARITY_TYPE << RS485_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/RS485.c ****     #endif /* End RS485_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/RS485.c **** }
  53              		.loc 1 160 0
  54              		@ sp needed
  55 001e 7047     		bx	lr
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 0020 82000F40 		.word	1074724994
  60 0024 83000F40 		.word	1074724995
  61 0028 20000F40 		.word	1074724896
  62 002c 30000F40 		.word	1074724912
  63 0030 81000F40 		.word	1074724993
  64              		.cfi_endproc
  65              	.LFE1:
  66              		.size	RS485_Init, .-RS485_Init
  67              		.section	.text.RS485_Enable,"ax",%progbits
  68              		.align	2
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 5


  69              		.global	RS485_Enable
  70              		.code	16
  71              		.thumb_func
  72              		.type	RS485_Enable, %function
  73              	RS485_Enable:
  74              	.LFB2:
 161:Generated_Source\PSoC4/RS485.c **** 
 162:Generated_Source\PSoC4/RS485.c **** 
 163:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/RS485.c **** * Function Name: RS485_Enable
 165:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
 166:Generated_Source\PSoC4/RS485.c **** *
 167:Generated_Source\PSoC4/RS485.c **** * Summary:
 168:Generated_Source\PSoC4/RS485.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/RS485.c **** *  to call RS485_Enable() because the RS485_Start() API
 170:Generated_Source\PSoC4/RS485.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/RS485.c **** *  operation.
 172:Generated_Source\PSoC4/RS485.c **** 
 173:Generated_Source\PSoC4/RS485.c **** * Parameters:
 174:Generated_Source\PSoC4/RS485.c **** *  None.
 175:Generated_Source\PSoC4/RS485.c **** *
 176:Generated_Source\PSoC4/RS485.c **** * Return:
 177:Generated_Source\PSoC4/RS485.c **** *  None.
 178:Generated_Source\PSoC4/RS485.c **** *
 179:Generated_Source\PSoC4/RS485.c **** * Global Variables:
 180:Generated_Source\PSoC4/RS485.c **** *  RS485_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/RS485.c **** *
 182:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/RS485.c **** void RS485_Enable(void) 
 184:Generated_Source\PSoC4/RS485.c **** {
  75              		.loc 1 184 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 185:Generated_Source\PSoC4/RS485.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/RS485.c ****     enableInterrupts = CyEnterCriticalSection();
  83              		.loc 1 186 0
  84 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  85              	.LVL0:
  86 0006 0400     		movs	r4, r0
  87              	.LVL1:
 187:Generated_Source\PSoC4/RS485.c **** 
 188:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_ENABLED || RS485_HD_ENABLED)
 189:Generated_Source\PSoC4/RS485.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/RS485.c ****         RS485_RXBITCTR_CONTROL_REG |= RS485_CNTR_ENABLE;
  88              		.loc 1 190 0
  89 0008 0B4A     		ldr	r2, .L5
  90 000a 1178     		ldrb	r1, [r2]
  91 000c 2023     		movs	r3, #32
  92 000e 0B43     		orrs	r3, r1
  93 0010 DBB2     		uxtb	r3, r3
  94 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/RS485.c **** 
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 6


 192:Generated_Source\PSoC4/RS485.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/RS485.c ****         RS485_RXSTATUS_ACTL_REG  |= RS485_INT_ENABLE;
  95              		.loc 1 193 0
  96 0014 0949     		ldr	r1, .L5+4
  97 0016 0A78     		ldrb	r2, [r1]
  98 0018 1023     		movs	r3, #16
  99 001a 1A43     		orrs	r2, r3
 100 001c D2B2     		uxtb	r2, r2
 101 001e 0A70     		strb	r2, [r1]
 194:Generated_Source\PSoC4/RS485.c **** 
 195:Generated_Source\PSoC4/RS485.c ****         #if (RS485_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/RS485.c ****             RS485_EnableRxInt();
 197:Generated_Source\PSoC4/RS485.c **** 
 198:Generated_Source\PSoC4/RS485.c ****             #if (RS485_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/RS485.c ****                 RS485_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/RS485.c ****             #endif /* (RS485_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_ENABLED || RS485_HD_ENABLED) */
 203:Generated_Source\PSoC4/RS485.c **** 
 204:Generated_Source\PSoC4/RS485.c ****     #if(RS485_TX_ENABLED)
 205:Generated_Source\PSoC4/RS485.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/RS485.c ****         #if(!RS485_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/RS485.c ****             RS485_TXBITCTR_CONTROL_REG |= RS485_CNTR_ENABLE;
 208:Generated_Source\PSoC4/RS485.c ****         #endif /* End RS485_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/RS485.c **** 
 210:Generated_Source\PSoC4/RS485.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/RS485.c ****         RS485_TXSTATUS_ACTL_REG |= RS485_INT_ENABLE;
 102              		.loc 1 211 0
 103 0020 074A     		ldr	r2, .L5+8
 104 0022 1178     		ldrb	r1, [r2]
 105 0024 0B43     		orrs	r3, r1
 106 0026 DBB2     		uxtb	r3, r3
 107 0028 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC4/RS485.c ****         #if (RS485_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/RS485.c ****             RS485_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/RS485.c ****             RS485_EnableTxInt();
 215:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/RS485.c ****      #endif /* (RS485_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/RS485.c **** 
 218:Generated_Source\PSoC4/RS485.c ****     #if (RS485_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/RS485.c ****         RS485_IntClock_Start();  /* Enable the clock */
 108              		.loc 1 219 0
 109 002a FFF7FEFF 		bl	RS485_IntClock_Start
 110              	.LVL2:
 220:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/RS485.c **** 
 222:Generated_Source\PSoC4/RS485.c ****     CyExitCriticalSection(enableInterrupts);
 111              		.loc 1 222 0
 112 002e 2000     		movs	r0, r4
 113 0030 FFF7FEFF 		bl	CyExitCriticalSection
 114              	.LVL3:
 223:Generated_Source\PSoC4/RS485.c **** }
 115              		.loc 1 223 0
 116              		@ sp needed
 117              	.LVL4:
 118 0034 10BD     		pop	{r4, pc}
 119              	.L6:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 7


 120 0036 C046     		.align	2
 121              	.L5:
 122 0038 92000F40 		.word	1074725010
 123 003c 93000F40 		.word	1074725011
 124 0040 91000F40 		.word	1074725009
 125              		.cfi_endproc
 126              	.LFE2:
 127              		.size	RS485_Enable, .-RS485_Enable
 128              		.section	.text.RS485_Start,"ax",%progbits
 129              		.align	2
 130              		.global	RS485_Start
 131              		.code	16
 132              		.thumb_func
 133              		.type	RS485_Start, %function
 134              	RS485_Start:
 135              	.LFB0:
  77:Generated_Source\PSoC4/RS485.c ****     /* If not initialized then initialize all required hardware and software */
 136              		.loc 1 77 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 10B5     		push	{r4, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 4, -8
 143              		.cfi_offset 14, -4
  79:Generated_Source\PSoC4/RS485.c ****     {
 144              		.loc 1 79 0
 145 0002 064B     		ldr	r3, .L9
 146 0004 1B78     		ldrb	r3, [r3]
 147 0006 002B     		cmp	r3, #0
 148 0008 04D1     		bne	.L8
  81:Generated_Source\PSoC4/RS485.c ****         RS485_initVar = 1u;
 149              		.loc 1 81 0
 150 000a FFF7FEFF 		bl	RS485_Init
 151              	.LVL5:
  82:Generated_Source\PSoC4/RS485.c ****     }
 152              		.loc 1 82 0
 153 000e 0122     		movs	r2, #1
 154 0010 024B     		ldr	r3, .L9
 155 0012 1A70     		strb	r2, [r3]
 156              	.L8:
  85:Generated_Source\PSoC4/RS485.c **** }
 157              		.loc 1 85 0
 158 0014 FFF7FEFF 		bl	RS485_Enable
 159              	.LVL6:
  86:Generated_Source\PSoC4/RS485.c **** 
 160              		.loc 1 86 0
 161              		@ sp needed
 162 0018 10BD     		pop	{r4, pc}
 163              	.L10:
 164 001a C046     		.align	2
 165              	.L9:
 166 001c 00000000 		.word	.LANCHOR0
 167              		.cfi_endproc
 168              	.LFE0:
 169              		.size	RS485_Start, .-RS485_Start
 170              		.section	.text.RS485_Stop,"ax",%progbits
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 8


 171              		.align	2
 172              		.global	RS485_Stop
 173              		.code	16
 174              		.thumb_func
 175              		.type	RS485_Stop, %function
 176              	RS485_Stop:
 177              	.LFB3:
 224:Generated_Source\PSoC4/RS485.c **** 
 225:Generated_Source\PSoC4/RS485.c **** 
 226:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/RS485.c **** * Function Name: RS485_Stop
 228:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
 229:Generated_Source\PSoC4/RS485.c **** *
 230:Generated_Source\PSoC4/RS485.c **** * Summary:
 231:Generated_Source\PSoC4/RS485.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/RS485.c **** *
 233:Generated_Source\PSoC4/RS485.c **** * Parameters:
 234:Generated_Source\PSoC4/RS485.c **** *  None.
 235:Generated_Source\PSoC4/RS485.c **** *
 236:Generated_Source\PSoC4/RS485.c **** * Return:
 237:Generated_Source\PSoC4/RS485.c **** *  None.
 238:Generated_Source\PSoC4/RS485.c **** *
 239:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/RS485.c **** void RS485_Stop(void) 
 241:Generated_Source\PSoC4/RS485.c **** {
 178              		.loc 1 241 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/RS485.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/RS485.c ****     enableInterrupts = CyEnterCriticalSection();
 186              		.loc 1 243 0
 187 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 188              	.LVL7:
 189 0006 0400     		movs	r4, r0
 190              	.LVL8:
 244:Generated_Source\PSoC4/RS485.c **** 
 245:Generated_Source\PSoC4/RS485.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_ENABLED || RS485_HD_ENABLED)
 247:Generated_Source\PSoC4/RS485.c ****         RS485_RXBITCTR_CONTROL_REG &= (uint8) ~RS485_CNTR_ENABLE;
 191              		.loc 1 247 0
 192 0008 094A     		ldr	r2, .L12
 193 000a 1378     		ldrb	r3, [r2]
 194 000c 2021     		movs	r1, #32
 195 000e 8B43     		bics	r3, r1
 196 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_ENABLED || RS485_HD_ENABLED) */
 249:Generated_Source\PSoC4/RS485.c **** 
 250:Generated_Source\PSoC4/RS485.c ****     #if (RS485_TX_ENABLED)
 251:Generated_Source\PSoC4/RS485.c ****         #if(!RS485_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/RS485.c ****             RS485_TXBITCTR_CONTROL_REG &= (uint8) ~RS485_CNTR_ENABLE;
 253:Generated_Source\PSoC4/RS485.c ****         #endif /* (!RS485_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_TX_ENABLED) */
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 9


 255:Generated_Source\PSoC4/RS485.c **** 
 256:Generated_Source\PSoC4/RS485.c ****     #if (RS485_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/RS485.c ****         RS485_IntClock_Stop();   /* Disable the clock */
 197              		.loc 1 257 0
 198 0012 FFF7FEFF 		bl	RS485_IntClock_Stop
 199              	.LVL9:
 258:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/RS485.c **** 
 260:Generated_Source\PSoC4/RS485.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_ENABLED || RS485_HD_ENABLED)
 262:Generated_Source\PSoC4/RS485.c ****         RS485_RXSTATUS_ACTL_REG  &= (uint8) ~RS485_INT_ENABLE;
 200              		.loc 1 262 0
 201 0016 074A     		ldr	r2, .L12+4
 202 0018 1378     		ldrb	r3, [r2]
 203 001a 1021     		movs	r1, #16
 204 001c 8B43     		bics	r3, r1
 205 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC4/RS485.c **** 
 264:Generated_Source\PSoC4/RS485.c ****         #if (RS485_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/RS485.c ****             RS485_DisableRxInt();
 266:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_ENABLED || RS485_HD_ENABLED) */
 268:Generated_Source\PSoC4/RS485.c **** 
 269:Generated_Source\PSoC4/RS485.c ****     #if (RS485_TX_ENABLED)
 270:Generated_Source\PSoC4/RS485.c ****         RS485_TXSTATUS_ACTL_REG &= (uint8) ~RS485_INT_ENABLE;
 206              		.loc 1 270 0
 207 0020 054A     		ldr	r2, .L12+8
 208 0022 1378     		ldrb	r3, [r2]
 209 0024 8B43     		bics	r3, r1
 210 0026 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC4/RS485.c **** 
 272:Generated_Source\PSoC4/RS485.c ****         #if (RS485_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/RS485.c ****             RS485_DisableTxInt();
 274:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_TX_ENABLED) */
 276:Generated_Source\PSoC4/RS485.c **** 
 277:Generated_Source\PSoC4/RS485.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 277 0
 212 0028 2000     		movs	r0, r4
 213 002a FFF7FEFF 		bl	CyExitCriticalSection
 214              	.LVL10:
 278:Generated_Source\PSoC4/RS485.c **** }
 215              		.loc 1 278 0
 216              		@ sp needed
 217              	.LVL11:
 218 002e 10BD     		pop	{r4, pc}
 219              	.L13:
 220              		.align	2
 221              	.L12:
 222 0030 92000F40 		.word	1074725010
 223 0034 93000F40 		.word	1074725011
 224 0038 91000F40 		.word	1074725009
 225              		.cfi_endproc
 226              	.LFE3:
 227              		.size	RS485_Stop, .-RS485_Stop
 228              		.section	.text.RS485_ReadControlRegister,"ax",%progbits
 229              		.align	2
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 10


 230              		.global	RS485_ReadControlRegister
 231              		.code	16
 232              		.thumb_func
 233              		.type	RS485_ReadControlRegister, %function
 234              	RS485_ReadControlRegister:
 235              	.LFB4:
 279:Generated_Source\PSoC4/RS485.c **** 
 280:Generated_Source\PSoC4/RS485.c **** 
 281:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/RS485.c **** * Function Name: RS485_ReadControlRegister
 283:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
 284:Generated_Source\PSoC4/RS485.c **** *
 285:Generated_Source\PSoC4/RS485.c **** * Summary:
 286:Generated_Source\PSoC4/RS485.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/RS485.c **** *
 288:Generated_Source\PSoC4/RS485.c **** * Parameters:
 289:Generated_Source\PSoC4/RS485.c **** *  None.
 290:Generated_Source\PSoC4/RS485.c **** *
 291:Generated_Source\PSoC4/RS485.c **** * Return:
 292:Generated_Source\PSoC4/RS485.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/RS485.c **** *
 294:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/RS485.c **** uint8 RS485_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/RS485.c **** {
 236              		.loc 1 296 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 297:Generated_Source\PSoC4/RS485.c ****     #if (RS485_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/RS485.c ****         return(0u);
 299:Generated_Source\PSoC4/RS485.c ****     #else
 300:Generated_Source\PSoC4/RS485.c ****         return(RS485_CONTROL_REG);
 301:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/RS485.c **** }
 241              		.loc 1 302 0
 242 0000 0020     		movs	r0, #0
 243              		@ sp needed
 244 0002 7047     		bx	lr
 245              		.cfi_endproc
 246              	.LFE4:
 247              		.size	RS485_ReadControlRegister, .-RS485_ReadControlRegister
 248              		.section	.text.RS485_WriteControlRegister,"ax",%progbits
 249              		.align	2
 250              		.global	RS485_WriteControlRegister
 251              		.code	16
 252              		.thumb_func
 253              		.type	RS485_WriteControlRegister, %function
 254              	RS485_WriteControlRegister:
 255              	.LFB5:
 303:Generated_Source\PSoC4/RS485.c **** 
 304:Generated_Source\PSoC4/RS485.c **** 
 305:Generated_Source\PSoC4/RS485.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/RS485.c **** * Function Name: RS485_WriteControlRegister
 307:Generated_Source\PSoC4/RS485.c **** ********************************************************************************
 308:Generated_Source\PSoC4/RS485.c **** *
 309:Generated_Source\PSoC4/RS485.c **** * Summary:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 11


 310:Generated_Source\PSoC4/RS485.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/RS485.c **** *
 312:Generated_Source\PSoC4/RS485.c **** * Parameters:
 313:Generated_Source\PSoC4/RS485.c **** *  control:  control register value
 314:Generated_Source\PSoC4/RS485.c **** *
 315:Generated_Source\PSoC4/RS485.c **** * Return:
 316:Generated_Source\PSoC4/RS485.c **** *  None.
 317:Generated_Source\PSoC4/RS485.c **** *
 318:Generated_Source\PSoC4/RS485.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/RS485.c **** void  RS485_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/RS485.c **** {
 256              		.loc 1 320 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL12:
 321:Generated_Source\PSoC4/RS485.c ****     #if (RS485_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/RS485.c ****         if(0u != control)
 323:Generated_Source\PSoC4/RS485.c ****         {
 324:Generated_Source\PSoC4/RS485.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/RS485.c ****         }
 326:Generated_Source\PSoC4/RS485.c ****     #else
 327:Generated_Source\PSoC4/RS485.c ****        RS485_CONTROL_REG = control;
 328:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/RS485.c **** }
 262              		.loc 1 329 0
 263              		@ sp needed
 264 0000 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE5:
 267              		.size	RS485_WriteControlRegister, .-RS485_WriteControlRegister
 268 0002 C046     		.section	.text.RS485_SetRxInterruptMode,"ax",%progbits
 269              		.align	2
 270              		.global	RS485_SetRxInterruptMode
 271              		.code	16
 272              		.thumb_func
 273              		.type	RS485_SetRxInterruptMode, %function
 274              	RS485_SetRxInterruptMode:
 275              	.LFB6:
 330:Generated_Source\PSoC4/RS485.c **** 
 331:Generated_Source\PSoC4/RS485.c **** 
 332:Generated_Source\PSoC4/RS485.c **** #if(RS485_RX_ENABLED || RS485_HD_ENABLED)
 333:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SetRxInterruptMode
 335:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/RS485.c ****     *
 337:Generated_Source\PSoC4/RS485.c ****     * Summary:
 338:Generated_Source\PSoC4/RS485.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/RS485.c ****     *
 340:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 341:Generated_Source\PSoC4/RS485.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/RS485.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/RS485.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_STOP_ERROR       Interrupt on stop error.
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 12


 347:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/RS485.c ****     *      RS485_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/RS485.c ****     *
 352:Generated_Source\PSoC4/RS485.c ****     * Return:
 353:Generated_Source\PSoC4/RS485.c ****     *  None.
 354:Generated_Source\PSoC4/RS485.c ****     *
 355:Generated_Source\PSoC4/RS485.c ****     * Theory:
 356:Generated_Source\PSoC4/RS485.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/RS485.c ****     *
 358:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/RS485.c ****     void RS485_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/RS485.c ****     {
 276              		.loc 1 360 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL13:
 361:Generated_Source\PSoC4/RS485.c ****         RS485_RXSTATUS_MASK_REG  = intSrc;
 282              		.loc 1 361 0
 283 0000 014B     		ldr	r3, .L17
 284 0002 1870     		strb	r0, [r3]
 362:Generated_Source\PSoC4/RS485.c ****     }
 285              		.loc 1 362 0
 286              		@ sp needed
 287 0004 7047     		bx	lr
 288              	.L18:
 289 0006 C046     		.align	2
 290              	.L17:
 291 0008 83000F40 		.word	1074724995
 292              		.cfi_endproc
 293              	.LFE6:
 294              		.size	RS485_SetRxInterruptMode, .-RS485_SetRxInterruptMode
 295              		.section	.text.RS485_ReadRxData,"ax",%progbits
 296              		.align	2
 297              		.global	RS485_ReadRxData
 298              		.code	16
 299              		.thumb_func
 300              		.type	RS485_ReadRxData, %function
 301              	RS485_ReadRxData:
 302              	.LFB7:
 363:Generated_Source\PSoC4/RS485.c **** 
 364:Generated_Source\PSoC4/RS485.c **** 
 365:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_ReadRxData
 367:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/RS485.c ****     *
 369:Generated_Source\PSoC4/RS485.c ****     * Summary:
 370:Generated_Source\PSoC4/RS485.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/RS485.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/RS485.c ****     *
 373:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 374:Generated_Source\PSoC4/RS485.c ****     *  None.
 375:Generated_Source\PSoC4/RS485.c ****     *
 376:Generated_Source\PSoC4/RS485.c ****     * Return:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 13


 377:Generated_Source\PSoC4/RS485.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/RS485.c ****     *
 379:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 380:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/RS485.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/RS485.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/RS485.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/RS485.c ****     *
 388:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
 389:Generated_Source\PSoC4/RS485.c ****     *  No.
 390:Generated_Source\PSoC4/RS485.c ****     *
 391:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_ReadRxData(void) 
 393:Generated_Source\PSoC4/RS485.c ****     {
 303              		.loc 1 393 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 394:Generated_Source\PSoC4/RS485.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/RS485.c **** 
 396:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/RS485.c **** 
 398:Generated_Source\PSoC4/RS485.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/RS485.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/RS485.c **** 
 401:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/RS485.c ****         RS485_DisableRxInt();
 403:Generated_Source\PSoC4/RS485.c **** 
 404:Generated_Source\PSoC4/RS485.c ****         locRxBufferRead  = RS485_rxBufferRead;
 405:Generated_Source\PSoC4/RS485.c ****         locRxBufferWrite = RS485_rxBufferWrite;
 406:Generated_Source\PSoC4/RS485.c **** 
 407:Generated_Source\PSoC4/RS485.c ****         if( (RS485_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC4/RS485.c ****         {
 409:Generated_Source\PSoC4/RS485.c ****             rxData = RS485_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC4/RS485.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC4/RS485.c **** 
 412:Generated_Source\PSoC4/RS485.c ****             if(locRxBufferRead >= RS485_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC4/RS485.c ****             {
 414:Generated_Source\PSoC4/RS485.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC4/RS485.c ****             }
 416:Generated_Source\PSoC4/RS485.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/RS485.c ****             RS485_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC4/RS485.c **** 
 419:Generated_Source\PSoC4/RS485.c ****             if(RS485_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC4/RS485.c ****             {
 421:Generated_Source\PSoC4/RS485.c ****                 RS485_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC4/RS485.c ****                 #if ((RS485_RX_INTERRUPT_ENABLED) && (RS485_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/RS485.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/RS485.c ****                     #if( RS485_HD_ENABLED )
 425:Generated_Source\PSoC4/RS485.c ****                         if((RS485_CONTROL_REG & RS485_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/RS485.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/RS485.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/RS485.c ****                             *  mask will be returned in LoadRxConfig() API.
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 14


 429:Generated_Source\PSoC4/RS485.c ****                             */
 430:Generated_Source\PSoC4/RS485.c ****                             RS485_RXSTATUS_MASK_REG  |= RS485_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/RS485.c ****                         }
 432:Generated_Source\PSoC4/RS485.c ****                     #else
 433:Generated_Source\PSoC4/RS485.c ****                         RS485_RXSTATUS_MASK_REG  |= RS485_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/RS485.c ****                     #endif /* end RS485_HD_ENABLED */
 435:Generated_Source\PSoC4/RS485.c ****                 #endif /* ((RS485_RX_INTERRUPT_ENABLED) && (RS485_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/RS485.c ****             }
 437:Generated_Source\PSoC4/RS485.c ****         }
 438:Generated_Source\PSoC4/RS485.c ****         else
 439:Generated_Source\PSoC4/RS485.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/RS485.c ****             rxData = RS485_RXDATA_REG;
 441:Generated_Source\PSoC4/RS485.c ****         }
 442:Generated_Source\PSoC4/RS485.c **** 
 443:Generated_Source\PSoC4/RS485.c ****         RS485_EnableRxInt();
 444:Generated_Source\PSoC4/RS485.c **** 
 445:Generated_Source\PSoC4/RS485.c ****     #else
 446:Generated_Source\PSoC4/RS485.c **** 
 447:Generated_Source\PSoC4/RS485.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/RS485.c ****         rxData = RS485_RXDATA_REG;
 308              		.loc 1 448 0
 309 0000 014B     		ldr	r3, .L20
 310 0002 1878     		ldrb	r0, [r3]
 311 0004 C0B2     		uxtb	r0, r0
 312              	.LVL14:
 449:Generated_Source\PSoC4/RS485.c **** 
 450:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/RS485.c **** 
 452:Generated_Source\PSoC4/RS485.c ****         return(rxData);
 453:Generated_Source\PSoC4/RS485.c ****     }
 313              		.loc 1 453 0
 314              		@ sp needed
 315 0006 7047     		bx	lr
 316              	.L21:
 317              		.align	2
 318              	.L20:
 319 0008 42000F40 		.word	1074724930
 320              		.cfi_endproc
 321              	.LFE7:
 322              		.size	RS485_ReadRxData, .-RS485_ReadRxData
 323              		.section	.text.RS485_ReadRxStatus,"ax",%progbits
 324              		.align	2
 325              		.global	RS485_ReadRxStatus
 326              		.code	16
 327              		.thumb_func
 328              		.type	RS485_ReadRxStatus, %function
 329              	RS485_ReadRxStatus:
 330              	.LFB8:
 454:Generated_Source\PSoC4/RS485.c **** 
 455:Generated_Source\PSoC4/RS485.c **** 
 456:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_ReadRxStatus
 458:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/RS485.c ****     *
 460:Generated_Source\PSoC4/RS485.c ****     * Summary:
 461:Generated_Source\PSoC4/RS485.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/RS485.c ****     *  buffer overflow status.
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 15


 463:Generated_Source\PSoC4/RS485.c ****     *
 464:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 465:Generated_Source\PSoC4/RS485.c ****     *  None.
 466:Generated_Source\PSoC4/RS485.c ****     *
 467:Generated_Source\PSoC4/RS485.c ****     * Return:
 468:Generated_Source\PSoC4/RS485.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/RS485.c ****     *
 470:Generated_Source\PSoC4/RS485.c ****     * Side Effect:
 471:Generated_Source\PSoC4/RS485.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/RS485.c ****     *  RS485_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/RS485.c ****     *  RS485_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/RS485.c ****     *  register read.
 475:Generated_Source\PSoC4/RS485.c ****     *
 476:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 477:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/RS485.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/RS485.c ****     *   RS485_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/RS485.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/RS485.c ****     *   RS485_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/RS485.c ****     *   bits.
 483:Generated_Source\PSoC4/RS485.c ****     *
 484:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/RS485.c ****     {
 331              		.loc 1 486 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 487:Generated_Source\PSoC4/RS485.c ****         uint8 status;
 488:Generated_Source\PSoC4/RS485.c **** 
 489:Generated_Source\PSoC4/RS485.c ****         status = RS485_RXSTATUS_REG & RS485_RX_HW_MASK;
 336              		.loc 1 489 0
 337 0000 024B     		ldr	r3, .L23
 338 0002 1878     		ldrb	r0, [r3]
 339 0004 7F23     		movs	r3, #127
 340 0006 1840     		ands	r0, r3
 341              	.LVL15:
 490:Generated_Source\PSoC4/RS485.c **** 
 491:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/RS485.c ****         if(RS485_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC4/RS485.c ****         {
 494:Generated_Source\PSoC4/RS485.c ****             status |= RS485_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC4/RS485.c ****             RS485_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC4/RS485.c ****         }
 497:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/RS485.c **** 
 499:Generated_Source\PSoC4/RS485.c ****         return(status);
 500:Generated_Source\PSoC4/RS485.c ****     }
 342              		.loc 1 500 0
 343              		@ sp needed
 344 0008 7047     		bx	lr
 345              	.L24:
 346 000a C046     		.align	2
 347              	.L23:
 348 000c 63000F40 		.word	1074724963
 349              		.cfi_endproc
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 16


 350              	.LFE8:
 351              		.size	RS485_ReadRxStatus, .-RS485_ReadRxStatus
 352              		.section	.text.RS485_GetChar,"ax",%progbits
 353              		.align	2
 354              		.global	RS485_GetChar
 355              		.code	16
 356              		.thumb_func
 357              		.type	RS485_GetChar, %function
 358              	RS485_GetChar:
 359              	.LFB9:
 501:Generated_Source\PSoC4/RS485.c **** 
 502:Generated_Source\PSoC4/RS485.c **** 
 503:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_GetChar
 505:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/RS485.c ****     *
 507:Generated_Source\PSoC4/RS485.c ****     * Summary:
 508:Generated_Source\PSoC4/RS485.c ****     *  Returns the last received byte of data. RS485_GetChar() is
 509:Generated_Source\PSoC4/RS485.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/RS485.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/RS485.c ****     *
 512:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 513:Generated_Source\PSoC4/RS485.c ****     *  None.
 514:Generated_Source\PSoC4/RS485.c ****     *
 515:Generated_Source\PSoC4/RS485.c ****     * Return:
 516:Generated_Source\PSoC4/RS485.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/RS485.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/RS485.c ****     *
 519:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 520:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/RS485.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/RS485.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/RS485.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/RS485.c ****     *
 528:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
 529:Generated_Source\PSoC4/RS485.c ****     *  No.
 530:Generated_Source\PSoC4/RS485.c ****     *
 531:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_GetChar(void) 
 533:Generated_Source\PSoC4/RS485.c ****     {
 360              		.loc 1 533 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365              	.LVL16:
 534:Generated_Source\PSoC4/RS485.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC4/RS485.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/RS485.c **** 
 537:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/RS485.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/RS485.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/RS485.c **** 
 541:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 17


 542:Generated_Source\PSoC4/RS485.c ****         RS485_DisableRxInt();
 543:Generated_Source\PSoC4/RS485.c **** 
 544:Generated_Source\PSoC4/RS485.c ****         locRxBufferRead  = RS485_rxBufferRead;
 545:Generated_Source\PSoC4/RS485.c ****         locRxBufferWrite = RS485_rxBufferWrite;
 546:Generated_Source\PSoC4/RS485.c **** 
 547:Generated_Source\PSoC4/RS485.c ****         if( (RS485_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC4/RS485.c ****         {
 549:Generated_Source\PSoC4/RS485.c ****             rxData = RS485_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC4/RS485.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC4/RS485.c ****             if(locRxBufferRead >= RS485_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC4/RS485.c ****             {
 553:Generated_Source\PSoC4/RS485.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC4/RS485.c ****             }
 555:Generated_Source\PSoC4/RS485.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/RS485.c ****             RS485_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC4/RS485.c **** 
 558:Generated_Source\PSoC4/RS485.c ****             if(RS485_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC4/RS485.c ****             {
 560:Generated_Source\PSoC4/RS485.c ****                 RS485_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC4/RS485.c ****                 #if( (RS485_RX_INTERRUPT_ENABLED) && (RS485_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/RS485.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/RS485.c ****                     #if( RS485_HD_ENABLED )
 564:Generated_Source\PSoC4/RS485.c ****                         if((RS485_CONTROL_REG & RS485_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/RS485.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/RS485.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/RS485.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/RS485.c ****                             */
 569:Generated_Source\PSoC4/RS485.c ****                             RS485_RXSTATUS_MASK_REG |= RS485_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/RS485.c ****                         }
 571:Generated_Source\PSoC4/RS485.c ****                     #else
 572:Generated_Source\PSoC4/RS485.c ****                         RS485_RXSTATUS_MASK_REG |= RS485_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/RS485.c ****                     #endif /* end RS485_HD_ENABLED */
 574:Generated_Source\PSoC4/RS485.c ****                 #endif /* RS485_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/RS485.c ****             }
 576:Generated_Source\PSoC4/RS485.c **** 
 577:Generated_Source\PSoC4/RS485.c ****         }
 578:Generated_Source\PSoC4/RS485.c ****         else
 579:Generated_Source\PSoC4/RS485.c ****         {   rxStatus = RS485_RXSTATUS_REG;
 580:Generated_Source\PSoC4/RS485.c ****             if((rxStatus & RS485_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC4/RS485.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/RS485.c ****                 rxData = RS485_RXDATA_REG;
 583:Generated_Source\PSoC4/RS485.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/RS485.c ****                 if((rxStatus & (RS485_RX_STS_BREAK | RS485_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC4/RS485.c ****                                 RS485_RX_STS_STOP_ERROR | RS485_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/RS485.c ****                 {
 587:Generated_Source\PSoC4/RS485.c ****                     rxData = 0u;
 588:Generated_Source\PSoC4/RS485.c ****                 }
 589:Generated_Source\PSoC4/RS485.c ****             }
 590:Generated_Source\PSoC4/RS485.c ****         }
 591:Generated_Source\PSoC4/RS485.c **** 
 592:Generated_Source\PSoC4/RS485.c ****         RS485_EnableRxInt();
 593:Generated_Source\PSoC4/RS485.c **** 
 594:Generated_Source\PSoC4/RS485.c ****     #else
 595:Generated_Source\PSoC4/RS485.c **** 
 596:Generated_Source\PSoC4/RS485.c ****         rxStatus =RS485_RXSTATUS_REG;
 366              		.loc 1 596 0
 367 0000 074B     		ldr	r3, .L29
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 18


 368 0002 1B78     		ldrb	r3, [r3]
 369 0004 DBB2     		uxtb	r3, r3
 370              	.LVL17:
 597:Generated_Source\PSoC4/RS485.c ****         if((rxStatus & RS485_RX_STS_FIFO_NOTEMPTY) != 0u)
 371              		.loc 1 597 0
 372 0006 9A06     		lsls	r2, r3, #26
 373 0008 06D5     		bpl	.L27
 598:Generated_Source\PSoC4/RS485.c ****         {
 599:Generated_Source\PSoC4/RS485.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/RS485.c ****             rxData = RS485_RXDATA_REG;
 374              		.loc 1 600 0
 375 000a 064A     		ldr	r2, .L29+4
 376 000c 1078     		ldrb	r0, [r2]
 377 000e C0B2     		uxtb	r0, r0
 378              	.LVL18:
 601:Generated_Source\PSoC4/RS485.c **** 
 602:Generated_Source\PSoC4/RS485.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/RS485.c ****             if((rxStatus & (RS485_RX_STS_BREAK | RS485_RX_STS_PAR_ERROR |
 379              		.loc 1 603 0
 380 0010 1E22     		movs	r2, #30
 381 0012 1A42     		tst	r2, r3
 382 0014 02D1     		bne	.L28
 383 0016 02E0     		b	.L26
 384              	.LVL19:
 385              	.L27:
 534:Generated_Source\PSoC4/RS485.c ****         uint8 rxStatus;
 386              		.loc 1 534 0
 387 0018 0020     		movs	r0, #0
 388 001a 00E0     		b	.L26
 389              	.LVL20:
 390              	.L28:
 604:Generated_Source\PSoC4/RS485.c ****                             RS485_RX_STS_STOP_ERROR | RS485_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/RS485.c ****             {
 606:Generated_Source\PSoC4/RS485.c ****                 rxData = 0u;
 391              		.loc 1 606 0
 392 001c 0020     		movs	r0, #0
 393              	.LVL21:
 394              	.L26:
 607:Generated_Source\PSoC4/RS485.c ****             }
 608:Generated_Source\PSoC4/RS485.c ****         }
 609:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/RS485.c **** 
 611:Generated_Source\PSoC4/RS485.c ****         return(rxData);
 612:Generated_Source\PSoC4/RS485.c ****     }
 395              		.loc 1 612 0
 396              		@ sp needed
 397 001e 7047     		bx	lr
 398              	.L30:
 399              		.align	2
 400              	.L29:
 401 0020 63000F40 		.word	1074724963
 402 0024 42000F40 		.word	1074724930
 403              		.cfi_endproc
 404              	.LFE9:
 405              		.size	RS485_GetChar, .-RS485_GetChar
 406              		.section	.text.RS485_GetByte,"ax",%progbits
 407              		.align	2
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 19


 408              		.global	RS485_GetByte
 409              		.code	16
 410              		.thumb_func
 411              		.type	RS485_GetByte, %function
 412              	RS485_GetByte:
 413              	.LFB10:
 613:Generated_Source\PSoC4/RS485.c **** 
 614:Generated_Source\PSoC4/RS485.c **** 
 615:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_GetByte
 617:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/RS485.c ****     *
 619:Generated_Source\PSoC4/RS485.c ****     * Summary:
 620:Generated_Source\PSoC4/RS485.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/RS485.c ****     *  condition.
 622:Generated_Source\PSoC4/RS485.c ****     *
 623:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 624:Generated_Source\PSoC4/RS485.c ****     *  None.
 625:Generated_Source\PSoC4/RS485.c ****     *
 626:Generated_Source\PSoC4/RS485.c ****     * Return:
 627:Generated_Source\PSoC4/RS485.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/RS485.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/RS485.c ****     *
 630:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
 631:Generated_Source\PSoC4/RS485.c ****     *  No.
 632:Generated_Source\PSoC4/RS485.c ****     *
 633:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/RS485.c ****     uint16 RS485_GetByte(void) 
 635:Generated_Source\PSoC4/RS485.c ****     {
 414              		.loc 1 635 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418 0000 10B5     		push	{r4, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 636:Generated_Source\PSoC4/RS485.c ****         
 637:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/RS485.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/RS485.c ****         RS485_DisableRxInt();
 641:Generated_Source\PSoC4/RS485.c ****         locErrorStatus = (uint16)RS485_errorStatus;
 642:Generated_Source\PSoC4/RS485.c ****         RS485_errorStatus = 0u;
 643:Generated_Source\PSoC4/RS485.c ****         RS485_EnableRxInt();
 644:Generated_Source\PSoC4/RS485.c ****         return ( (uint16)(locErrorStatus << 8u) | RS485_ReadRxData() );
 645:Generated_Source\PSoC4/RS485.c ****     #else
 646:Generated_Source\PSoC4/RS485.c ****         return ( ((uint16)RS485_ReadRxStatus() << 8u) | RS485_ReadRxData() );
 422              		.loc 1 646 0
 423 0002 FFF7FEFF 		bl	RS485_ReadRxStatus
 424              	.LVL22:
 425 0006 0402     		lsls	r4, r0, #8
 426 0008 FFF7FEFF 		bl	RS485_ReadRxData
 427              	.LVL23:
 428 000c 2043     		orrs	r0, r4
 429 000e 80B2     		uxth	r0, r0
 647:Generated_Source\PSoC4/RS485.c ****     #endif /* RS485_RX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 20


 648:Generated_Source\PSoC4/RS485.c ****         
 649:Generated_Source\PSoC4/RS485.c ****     }
 430              		.loc 1 649 0
 431              		@ sp needed
 432 0010 10BD     		pop	{r4, pc}
 433              		.cfi_endproc
 434              	.LFE10:
 435              		.size	RS485_GetByte, .-RS485_GetByte
 436 0012 C046     		.section	.text.RS485_GetRxBufferSize,"ax",%progbits
 437              		.align	2
 438              		.global	RS485_GetRxBufferSize
 439              		.code	16
 440              		.thumb_func
 441              		.type	RS485_GetRxBufferSize, %function
 442              	RS485_GetRxBufferSize:
 443              	.LFB11:
 650:Generated_Source\PSoC4/RS485.c **** 
 651:Generated_Source\PSoC4/RS485.c **** 
 652:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_GetRxBufferSize
 654:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/RS485.c ****     *
 656:Generated_Source\PSoC4/RS485.c ****     * Summary:
 657:Generated_Source\PSoC4/RS485.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/RS485.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/RS485.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/RS485.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/RS485.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/RS485.c ****     *    account.
 663:Generated_Source\PSoC4/RS485.c ****     *
 664:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 665:Generated_Source\PSoC4/RS485.c ****     *  None.
 666:Generated_Source\PSoC4/RS485.c ****     *
 667:Generated_Source\PSoC4/RS485.c ****     * Return:
 668:Generated_Source\PSoC4/RS485.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC4/RS485.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/RS485.c ****     *
 671:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 672:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/RS485.c ****     *
 676:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
 677:Generated_Source\PSoC4/RS485.c ****     *  No.
 678:Generated_Source\PSoC4/RS485.c ****     *
 679:Generated_Source\PSoC4/RS485.c ****     * Theory:
 680:Generated_Source\PSoC4/RS485.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/RS485.c ****     *
 682:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/RS485.c ****                                                             
 685:Generated_Source\PSoC4/RS485.c ****     {
 444              		.loc 1 685 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 21


 686:Generated_Source\PSoC4/RS485.c ****         uint8 size;
 687:Generated_Source\PSoC4/RS485.c **** 
 688:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/RS485.c **** 
 690:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/RS485.c ****         RS485_DisableRxInt();
 692:Generated_Source\PSoC4/RS485.c **** 
 693:Generated_Source\PSoC4/RS485.c ****         if(RS485_rxBufferRead == RS485_rxBufferWrite)
 694:Generated_Source\PSoC4/RS485.c ****         {
 695:Generated_Source\PSoC4/RS485.c ****             if(RS485_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC4/RS485.c ****             {
 697:Generated_Source\PSoC4/RS485.c ****                 size = RS485_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC4/RS485.c ****             }
 699:Generated_Source\PSoC4/RS485.c ****             else
 700:Generated_Source\PSoC4/RS485.c ****             {
 701:Generated_Source\PSoC4/RS485.c ****                 size = 0u;
 702:Generated_Source\PSoC4/RS485.c ****             }
 703:Generated_Source\PSoC4/RS485.c ****         }
 704:Generated_Source\PSoC4/RS485.c ****         else if(RS485_rxBufferRead < RS485_rxBufferWrite)
 705:Generated_Source\PSoC4/RS485.c ****         {
 706:Generated_Source\PSoC4/RS485.c ****             size = (RS485_rxBufferWrite - RS485_rxBufferRead);
 707:Generated_Source\PSoC4/RS485.c ****         }
 708:Generated_Source\PSoC4/RS485.c ****         else
 709:Generated_Source\PSoC4/RS485.c ****         {
 710:Generated_Source\PSoC4/RS485.c ****             size = (RS485_RX_BUFFER_SIZE - RS485_rxBufferRead) + RS485_rxBufferWrite;
 711:Generated_Source\PSoC4/RS485.c ****         }
 712:Generated_Source\PSoC4/RS485.c **** 
 713:Generated_Source\PSoC4/RS485.c ****         RS485_EnableRxInt();
 714:Generated_Source\PSoC4/RS485.c **** 
 715:Generated_Source\PSoC4/RS485.c ****     #else
 716:Generated_Source\PSoC4/RS485.c **** 
 717:Generated_Source\PSoC4/RS485.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/RS485.c ****         size = ((RS485_RXSTATUS_REG & RS485_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 449              		.loc 1 718 0
 450 0000 034B     		ldr	r3, .L35
 451 0002 1B78     		ldrb	r3, [r3]
 452 0004 9B06     		lsls	r3, r3, #26
 453 0006 01D5     		bpl	.L34
 454 0008 0120     		movs	r0, #1
 455 000a 00E0     		b	.L33
 456              	.L34:
 457 000c 0020     		movs	r0, #0
 458              	.L33:
 459              	.LVL24:
 719:Generated_Source\PSoC4/RS485.c **** 
 720:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/RS485.c **** 
 722:Generated_Source\PSoC4/RS485.c ****         return(size);
 723:Generated_Source\PSoC4/RS485.c ****     }
 460              		.loc 1 723 0 discriminator 4
 461              		@ sp needed
 462 000e 7047     		bx	lr
 463              	.L36:
 464              		.align	2
 465              	.L35:
 466 0010 63000F40 		.word	1074724963
 467              		.cfi_endproc
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 22


 468              	.LFE11:
 469              		.size	RS485_GetRxBufferSize, .-RS485_GetRxBufferSize
 470              		.section	.text.RS485_ClearRxBuffer,"ax",%progbits
 471              		.align	2
 472              		.global	RS485_ClearRxBuffer
 473              		.code	16
 474              		.thumb_func
 475              		.type	RS485_ClearRxBuffer, %function
 476              	RS485_ClearRxBuffer:
 477              	.LFB12:
 724:Generated_Source\PSoC4/RS485.c **** 
 725:Generated_Source\PSoC4/RS485.c **** 
 726:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_ClearRxBuffer
 728:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/RS485.c ****     *
 730:Generated_Source\PSoC4/RS485.c ****     * Summary:
 731:Generated_Source\PSoC4/RS485.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/RS485.c ****     *
 733:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 734:Generated_Source\PSoC4/RS485.c ****     *  None.
 735:Generated_Source\PSoC4/RS485.c ****     *
 736:Generated_Source\PSoC4/RS485.c ****     * Return:
 737:Generated_Source\PSoC4/RS485.c ****     *  None.
 738:Generated_Source\PSoC4/RS485.c ****     *
 739:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 740:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/RS485.c ****     *
 745:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
 746:Generated_Source\PSoC4/RS485.c ****     *  No.
 747:Generated_Source\PSoC4/RS485.c ****     *
 748:Generated_Source\PSoC4/RS485.c ****     * Theory:
 749:Generated_Source\PSoC4/RS485.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/RS485.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/RS485.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/RS485.c ****     *
 753:Generated_Source\PSoC4/RS485.c ****     * Side Effects:
 754:Generated_Source\PSoC4/RS485.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/RS485.c ****     *
 756:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/RS485.c ****     void RS485_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/RS485.c ****     {
 478              		.loc 1 758 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 759:Generated_Source\PSoC4/RS485.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/RS485.c **** 
 761:Generated_Source\PSoC4/RS485.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/RS485.c ****         enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 23


 486              		.loc 1 762 0
 487 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 488              	.LVL25:
 763:Generated_Source\PSoC4/RS485.c ****         RS485_RXDATA_AUX_CTL_REG |= (uint8)  RS485_RX_FIFO_CLR;
 489              		.loc 1 763 0
 490 0006 064A     		ldr	r2, .L38
 491 0008 1178     		ldrb	r1, [r2]
 492 000a 0123     		movs	r3, #1
 493 000c 0B43     		orrs	r3, r1
 494 000e DBB2     		uxtb	r3, r3
 495 0010 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC4/RS485.c ****         RS485_RXDATA_AUX_CTL_REG &= (uint8) ~RS485_RX_FIFO_CLR;
 496              		.loc 1 764 0
 497 0012 1378     		ldrb	r3, [r2]
 498 0014 0121     		movs	r1, #1
 499 0016 8B43     		bics	r3, r1
 500 0018 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC4/RS485.c ****         CyExitCriticalSection(enableInterrupts);
 501              		.loc 1 765 0
 502 001a FFF7FEFF 		bl	CyExitCriticalSection
 503              	.LVL26:
 766:Generated_Source\PSoC4/RS485.c **** 
 767:Generated_Source\PSoC4/RS485.c ****     #if (RS485_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/RS485.c **** 
 769:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/RS485.c ****         RS485_DisableRxInt();
 771:Generated_Source\PSoC4/RS485.c **** 
 772:Generated_Source\PSoC4/RS485.c ****         RS485_rxBufferRead = 0u;
 773:Generated_Source\PSoC4/RS485.c ****         RS485_rxBufferWrite = 0u;
 774:Generated_Source\PSoC4/RS485.c ****         RS485_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC4/RS485.c ****         RS485_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC4/RS485.c **** 
 777:Generated_Source\PSoC4/RS485.c ****         RS485_EnableRxInt();
 778:Generated_Source\PSoC4/RS485.c **** 
 779:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/RS485.c **** 
 781:Generated_Source\PSoC4/RS485.c ****     }
 504              		.loc 1 781 0
 505              		@ sp needed
 506 001e 10BD     		pop	{r4, pc}
 507              	.L39:
 508              		.align	2
 509              	.L38:
 510 0020 92000F40 		.word	1074725010
 511              		.cfi_endproc
 512              	.LFE12:
 513              		.size	RS485_ClearRxBuffer, .-RS485_ClearRxBuffer
 514              		.section	.text.RS485_SetRxAddressMode,"ax",%progbits
 515              		.align	2
 516              		.global	RS485_SetRxAddressMode
 517              		.code	16
 518              		.thumb_func
 519              		.type	RS485_SetRxAddressMode, %function
 520              	RS485_SetRxAddressMode:
 521              	.LFB13:
 782:Generated_Source\PSoC4/RS485.c **** 
 783:Generated_Source\PSoC4/RS485.c **** 
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 24


 784:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SetRxAddressMode
 786:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/RS485.c ****     *
 788:Generated_Source\PSoC4/RS485.c ****     * Summary:
 789:Generated_Source\PSoC4/RS485.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/RS485.c ****     *  UART.
 791:Generated_Source\PSoC4/RS485.c ****     *
 792:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 793:Generated_Source\PSoC4/RS485.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/RS485.c ****     *  RS485__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/RS485.c ****     *                                               detection
 796:Generated_Source\PSoC4/RS485.c ****     *  RS485__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/RS485.c ****     *                                               address detection
 798:Generated_Source\PSoC4/RS485.c ****     *  RS485__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/RS485.c ****     *                                               detection
 800:Generated_Source\PSoC4/RS485.c ****     *  RS485__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/RS485.c ****     *                                               address detection
 802:Generated_Source\PSoC4/RS485.c ****     *  RS485__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/RS485.c ****     *
 804:Generated_Source\PSoC4/RS485.c ****     * Return:
 805:Generated_Source\PSoC4/RS485.c ****     *  None.
 806:Generated_Source\PSoC4/RS485.c ****     *
 807:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 808:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/RS485.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/RS485.c ****     *  RS485_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/RS485.c ****     *
 812:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/RS485.c ****     void RS485_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/RS485.c ****                                                         
 815:Generated_Source\PSoC4/RS485.c ****     {
 522              		.loc 1 815 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              	.LVL27:
 816:Generated_Source\PSoC4/RS485.c ****         #if(RS485_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/RS485.c ****             #if(RS485_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/RS485.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/RS485.c ****                 {
 820:Generated_Source\PSoC4/RS485.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/RS485.c ****                 }
 822:Generated_Source\PSoC4/RS485.c ****             #else /* RS485_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/RS485.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/RS485.c ****                 tmpCtrl = RS485_CONTROL_REG & (uint8)~RS485_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/RS485.c ****                 tmpCtrl |= (uint8)(addressMode << RS485_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/RS485.c ****                 RS485_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/RS485.c **** 
 828:Generated_Source\PSoC4/RS485.c ****                 #if(RS485_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/RS485.c ****                    (RS485_RXBUFFERSIZE > RS485_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/RS485.c ****                     RS485_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/RS485.c ****                     RS485_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/RS485.c ****                 #endif /* End RS485_RXBUFFERSIZE > RS485_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/RS485.c ****             #endif /* End RS485_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/RS485.c ****         #else /* RS485_RXHW_ADDRESS_ENABLED */
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 25


 835:Generated_Source\PSoC4/RS485.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/RS485.c ****             {
 837:Generated_Source\PSoC4/RS485.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/RS485.c ****             }
 839:Generated_Source\PSoC4/RS485.c ****         #endif /* End RS485_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/RS485.c ****     }
 528              		.loc 1 840 0
 529              		@ sp needed
 530 0000 7047     		bx	lr
 531              		.cfi_endproc
 532              	.LFE13:
 533              		.size	RS485_SetRxAddressMode, .-RS485_SetRxAddressMode
 534 0002 C046     		.section	.text.RS485_SetRxAddress1,"ax",%progbits
 535              		.align	2
 536              		.global	RS485_SetRxAddress1
 537              		.code	16
 538              		.thumb_func
 539              		.type	RS485_SetRxAddress1, %function
 540              	RS485_SetRxAddress1:
 541              	.LFB14:
 841:Generated_Source\PSoC4/RS485.c **** 
 842:Generated_Source\PSoC4/RS485.c **** 
 843:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SetRxAddress1
 845:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/RS485.c ****     *
 847:Generated_Source\PSoC4/RS485.c ****     * Summary:
 848:Generated_Source\PSoC4/RS485.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/RS485.c ****     *
 850:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 851:Generated_Source\PSoC4/RS485.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/RS485.c ****     *
 853:Generated_Source\PSoC4/RS485.c ****     * Return:
 854:Generated_Source\PSoC4/RS485.c ****     *  None.
 855:Generated_Source\PSoC4/RS485.c ****     *
 856:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/RS485.c ****     void RS485_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/RS485.c ****     {
 542              		.loc 1 858 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547              	.LVL28:
 859:Generated_Source\PSoC4/RS485.c ****         RS485_RXADDRESS1_REG = address;
 548              		.loc 1 859 0
 549 0000 014B     		ldr	r3, .L42
 550 0002 1870     		strb	r0, [r3]
 860:Generated_Source\PSoC4/RS485.c ****     }
 551              		.loc 1 860 0
 552              		@ sp needed
 553 0004 7047     		bx	lr
 554              	.L43:
 555 0006 C046     		.align	2
 556              	.L42:
 557 0008 22000F40 		.word	1074724898
 558              		.cfi_endproc
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 26


 559              	.LFE14:
 560              		.size	RS485_SetRxAddress1, .-RS485_SetRxAddress1
 561              		.section	.text.RS485_SetRxAddress2,"ax",%progbits
 562              		.align	2
 563              		.global	RS485_SetRxAddress2
 564              		.code	16
 565              		.thumb_func
 566              		.type	RS485_SetRxAddress2, %function
 567              	RS485_SetRxAddress2:
 568              	.LFB15:
 861:Generated_Source\PSoC4/RS485.c **** 
 862:Generated_Source\PSoC4/RS485.c **** 
 863:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SetRxAddress2
 865:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/RS485.c ****     *
 867:Generated_Source\PSoC4/RS485.c ****     * Summary:
 868:Generated_Source\PSoC4/RS485.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/RS485.c ****     *
 870:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 871:Generated_Source\PSoC4/RS485.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/RS485.c ****     *
 873:Generated_Source\PSoC4/RS485.c ****     * Return:
 874:Generated_Source\PSoC4/RS485.c ****     *  None.
 875:Generated_Source\PSoC4/RS485.c ****     *
 876:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/RS485.c ****     void RS485_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/RS485.c ****     {
 569              		.loc 1 878 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574              	.LVL29:
 879:Generated_Source\PSoC4/RS485.c ****         RS485_RXADDRESS2_REG = address;
 575              		.loc 1 879 0
 576 0000 014B     		ldr	r3, .L45
 577 0002 1870     		strb	r0, [r3]
 880:Generated_Source\PSoC4/RS485.c ****     }
 578              		.loc 1 880 0
 579              		@ sp needed
 580 0004 7047     		bx	lr
 581              	.L46:
 582 0006 C046     		.align	2
 583              	.L45:
 584 0008 32000F40 		.word	1074724914
 585              		.cfi_endproc
 586              	.LFE15:
 587              		.size	RS485_SetRxAddress2, .-RS485_SetRxAddress2
 588              		.section	.text.RS485_SetTxInterruptMode,"ax",%progbits
 589              		.align	2
 590              		.global	RS485_SetTxInterruptMode
 591              		.code	16
 592              		.thumb_func
 593              		.type	RS485_SetTxInterruptMode, %function
 594              	RS485_SetTxInterruptMode:
 595              	.LFB16:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 27


 881:Generated_Source\PSoC4/RS485.c **** 
 882:Generated_Source\PSoC4/RS485.c **** #endif  /* RS485_RX_ENABLED || RS485_HD_ENABLED*/
 883:Generated_Source\PSoC4/RS485.c **** 
 884:Generated_Source\PSoC4/RS485.c **** 
 885:Generated_Source\PSoC4/RS485.c **** #if( (RS485_TX_ENABLED) || (RS485_HD_ENABLED) )
 886:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 887:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SetTxInterruptMode
 888:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 889:Generated_Source\PSoC4/RS485.c ****     *
 890:Generated_Source\PSoC4/RS485.c ****     * Summary:
 891:Generated_Source\PSoC4/RS485.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC4/RS485.c ****     *  interrupt.
 893:Generated_Source\PSoC4/RS485.c ****     *
 894:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 895:Generated_Source\PSoC4/RS485.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC4/RS485.c ****     *   RS485_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC4/RS485.c ****     *   RS485_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC4/RS485.c ****     *   RS485_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC4/RS485.c ****     *   RS485_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC4/RS485.c ****     *
 901:Generated_Source\PSoC4/RS485.c ****     * Return:
 902:Generated_Source\PSoC4/RS485.c ****     *  None.
 903:Generated_Source\PSoC4/RS485.c ****     *
 904:Generated_Source\PSoC4/RS485.c ****     * Theory:
 905:Generated_Source\PSoC4/RS485.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC4/RS485.c ****     *
 907:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 908:Generated_Source\PSoC4/RS485.c ****     void RS485_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC4/RS485.c ****     {
 596              		.loc 1 909 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601              	.LVL30:
 910:Generated_Source\PSoC4/RS485.c ****         RS485_TXSTATUS_MASK_REG = intSrc;
 602              		.loc 1 910 0
 603 0000 014B     		ldr	r3, .L48
 604 0002 1870     		strb	r0, [r3]
 911:Generated_Source\PSoC4/RS485.c ****     }
 605              		.loc 1 911 0
 606              		@ sp needed
 607 0004 7047     		bx	lr
 608              	.L49:
 609 0006 C046     		.align	2
 610              	.L48:
 611 0008 81000F40 		.word	1074724993
 612              		.cfi_endproc
 613              	.LFE16:
 614              		.size	RS485_SetTxInterruptMode, .-RS485_SetTxInterruptMode
 615              		.section	.text.RS485_WriteTxData,"ax",%progbits
 616              		.align	2
 617              		.global	RS485_WriteTxData
 618              		.code	16
 619              		.thumb_func
 620              		.type	RS485_WriteTxData, %function
 621              	RS485_WriteTxData:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 28


 622              	.LFB17:
 912:Generated_Source\PSoC4/RS485.c **** 
 913:Generated_Source\PSoC4/RS485.c **** 
 914:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 915:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_WriteTxData
 916:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 917:Generated_Source\PSoC4/RS485.c ****     *
 918:Generated_Source\PSoC4/RS485.c ****     * Summary:
 919:Generated_Source\PSoC4/RS485.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC4/RS485.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC4/RS485.c ****     *  separately.
 922:Generated_Source\PSoC4/RS485.c ****     *
 923:Generated_Source\PSoC4/RS485.c ****     * Parameters:
 924:Generated_Source\PSoC4/RS485.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC4/RS485.c ****     *
 926:Generated_Source\PSoC4/RS485.c ****     * Return:
 927:Generated_Source\PSoC4/RS485.c ****     * None.
 928:Generated_Source\PSoC4/RS485.c ****     *
 929:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
 930:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC4/RS485.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC4/RS485.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC4/RS485.c ****     *  RS485_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC4/RS485.c ****     *    initialized.
 937:Generated_Source\PSoC4/RS485.c ****     *
 938:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
 939:Generated_Source\PSoC4/RS485.c ****     *  No.
 940:Generated_Source\PSoC4/RS485.c ****     *
 941:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
 942:Generated_Source\PSoC4/RS485.c ****     void RS485_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC4/RS485.c ****     {
 623              		.loc 1 943 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628              	.LVL31:
 944:Generated_Source\PSoC4/RS485.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC4/RS485.c ****         if(RS485_initVar != 0u)
 629              		.loc 1 945 0
 630 0000 034B     		ldr	r3, .L52
 631 0002 1B78     		ldrb	r3, [r3]
 632 0004 002B     		cmp	r3, #0
 633 0006 01D0     		beq	.L50
 946:Generated_Source\PSoC4/RS485.c ****         {
 947:Generated_Source\PSoC4/RS485.c ****         #if (RS485_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC4/RS485.c **** 
 949:Generated_Source\PSoC4/RS485.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC4/RS485.c ****             RS485_DisableTxInt();
 951:Generated_Source\PSoC4/RS485.c **** 
 952:Generated_Source\PSoC4/RS485.c ****             if( (RS485_txBufferRead == RS485_txBufferWrite) &&
 953:Generated_Source\PSoC4/RS485.c ****                 ((RS485_TXSTATUS_REG & RS485_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC4/RS485.c ****             {
 955:Generated_Source\PSoC4/RS485.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC4/RS485.c ****                 RS485_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 29


 957:Generated_Source\PSoC4/RS485.c ****             }
 958:Generated_Source\PSoC4/RS485.c ****             else
 959:Generated_Source\PSoC4/RS485.c ****             {
 960:Generated_Source\PSoC4/RS485.c ****                 if(RS485_txBufferWrite >= RS485_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC4/RS485.c ****                 {
 962:Generated_Source\PSoC4/RS485.c ****                     RS485_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/RS485.c ****                 }
 964:Generated_Source\PSoC4/RS485.c **** 
 965:Generated_Source\PSoC4/RS485.c ****                 RS485_txBuffer[RS485_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC4/RS485.c **** 
 967:Generated_Source\PSoC4/RS485.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC4/RS485.c ****                 RS485_txBufferWrite++;
 969:Generated_Source\PSoC4/RS485.c ****             }
 970:Generated_Source\PSoC4/RS485.c **** 
 971:Generated_Source\PSoC4/RS485.c ****             RS485_EnableTxInt();
 972:Generated_Source\PSoC4/RS485.c **** 
 973:Generated_Source\PSoC4/RS485.c ****         #else
 974:Generated_Source\PSoC4/RS485.c **** 
 975:Generated_Source\PSoC4/RS485.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC4/RS485.c ****             RS485_TXDATA_REG = txDataByte;
 634              		.loc 1 976 0
 635 0008 024B     		ldr	r3, .L52+4
 636 000a 1870     		strb	r0, [r3]
 637              	.L50:
 977:Generated_Source\PSoC4/RS485.c **** 
 978:Generated_Source\PSoC4/RS485.c ****         #endif /*(RS485_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC4/RS485.c ****         }
 980:Generated_Source\PSoC4/RS485.c ****     }
 638              		.loc 1 980 0
 639              		@ sp needed
 640 000c 7047     		bx	lr
 641              	.L53:
 642 000e C046     		.align	2
 643              	.L52:
 644 0010 00000000 		.word	.LANCHOR0
 645 0014 41000F40 		.word	1074724929
 646              		.cfi_endproc
 647              	.LFE17:
 648              		.size	RS485_WriteTxData, .-RS485_WriteTxData
 649              		.section	.text.RS485_ReadTxStatus,"ax",%progbits
 650              		.align	2
 651              		.global	RS485_ReadTxStatus
 652              		.code	16
 653              		.thumb_func
 654              		.type	RS485_ReadTxStatus, %function
 655              	RS485_ReadTxStatus:
 656              	.LFB18:
 981:Generated_Source\PSoC4/RS485.c **** 
 982:Generated_Source\PSoC4/RS485.c **** 
 983:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
 984:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_ReadTxStatus
 985:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
 986:Generated_Source\PSoC4/RS485.c ****     *
 987:Generated_Source\PSoC4/RS485.c ****     * Summary:
 988:Generated_Source\PSoC4/RS485.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC4/RS485.c ****     *
 990:Generated_Source\PSoC4/RS485.c ****     * Parameters:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 30


 991:Generated_Source\PSoC4/RS485.c ****     *  None.
 992:Generated_Source\PSoC4/RS485.c ****     *
 993:Generated_Source\PSoC4/RS485.c ****     * Return:
 994:Generated_Source\PSoC4/RS485.c ****     *  Contents of the status register
 995:Generated_Source\PSoC4/RS485.c ****     *
 996:Generated_Source\PSoC4/RS485.c ****     * Theory:
 997:Generated_Source\PSoC4/RS485.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC4/RS485.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC4/RS485.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC4/RS485.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC4/RS485.c ****     *
1002:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_ReadTxStatus(void) 
1004:Generated_Source\PSoC4/RS485.c ****     {
 657              		.loc 1 1004 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              		@ link register save eliminated.
1005:Generated_Source\PSoC4/RS485.c ****         return(RS485_TXSTATUS_REG);
 662              		.loc 1 1005 0
 663 0000 014B     		ldr	r3, .L55
 664 0002 1878     		ldrb	r0, [r3]
 665 0004 C0B2     		uxtb	r0, r0
1006:Generated_Source\PSoC4/RS485.c ****     }
 666              		.loc 1 1006 0
 667              		@ sp needed
 668 0006 7047     		bx	lr
 669              	.L56:
 670              		.align	2
 671              	.L55:
 672 0008 61000F40 		.word	1074724961
 673              		.cfi_endproc
 674              	.LFE18:
 675              		.size	RS485_ReadTxStatus, .-RS485_ReadTxStatus
 676              		.section	.text.RS485_PutChar,"ax",%progbits
 677              		.align	2
 678              		.global	RS485_PutChar
 679              		.code	16
 680              		.thumb_func
 681              		.type	RS485_PutChar, %function
 682              	RS485_PutChar:
 683              	.LFB19:
1007:Generated_Source\PSoC4/RS485.c **** 
1008:Generated_Source\PSoC4/RS485.c **** 
1009:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_PutChar
1011:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/RS485.c ****     *
1013:Generated_Source\PSoC4/RS485.c ****     * Summary:
1014:Generated_Source\PSoC4/RS485.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC4/RS485.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC4/RS485.c ****     *  hold the data.
1017:Generated_Source\PSoC4/RS485.c ****     *
1018:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1019:Generated_Source\PSoC4/RS485.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC4/RS485.c ****     *
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 31


1021:Generated_Source\PSoC4/RS485.c ****     * Return:
1022:Generated_Source\PSoC4/RS485.c ****     *  None.
1023:Generated_Source\PSoC4/RS485.c ****     *
1024:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1025:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC4/RS485.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC4/RS485.c ****     *     saved to buffer.
1029:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC4/RS485.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC4/RS485.c ****     *  RS485_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC4/RS485.c ****     *     initialized.
1033:Generated_Source\PSoC4/RS485.c ****     *
1034:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1035:Generated_Source\PSoC4/RS485.c ****     *  No.
1036:Generated_Source\PSoC4/RS485.c ****     *
1037:Generated_Source\PSoC4/RS485.c ****     * Theory:
1038:Generated_Source\PSoC4/RS485.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC4/RS485.c ****     *
1040:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1041:Generated_Source\PSoC4/RS485.c ****     void RS485_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC4/RS485.c ****     {
 684              		.loc 1 1042 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LVL32:
 690              	.L58:
1043:Generated_Source\PSoC4/RS485.c ****     #if (RS485_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC4/RS485.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC4/RS485.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC4/RS485.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC4/RS485.c ****         */
1048:Generated_Source\PSoC4/RS485.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC4/RS485.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC4/RS485.c **** 
1051:Generated_Source\PSoC4/RS485.c ****         do
1052:Generated_Source\PSoC4/RS485.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC4/RS485.c **** 
1054:Generated_Source\PSoC4/RS485.c ****         #if ((RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC4/RS485.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC4/RS485.c ****             RS485_DisableTxInt();
1057:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC4/RS485.c **** 
1059:Generated_Source\PSoC4/RS485.c ****             locTxBufferWrite = RS485_txBufferWrite;
1060:Generated_Source\PSoC4/RS485.c ****             locTxBufferRead  = RS485_txBufferRead;
1061:Generated_Source\PSoC4/RS485.c **** 
1062:Generated_Source\PSoC4/RS485.c ****         #if ((RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC4/RS485.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC4/RS485.c ****             RS485_EnableTxInt();
1065:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC4/RS485.c ****         }
1067:Generated_Source\PSoC4/RS485.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC4/RS485.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC4/RS485.c ****                                 (uint8)(RS485_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC4/RS485.c **** 
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 32


1071:Generated_Source\PSoC4/RS485.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC4/RS485.c ****             ((RS485_TXSTATUS_REG & RS485_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC4/RS485.c ****         {
1074:Generated_Source\PSoC4/RS485.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC4/RS485.c ****             RS485_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC4/RS485.c ****         }
1077:Generated_Source\PSoC4/RS485.c ****         else
1078:Generated_Source\PSoC4/RS485.c ****         {
1079:Generated_Source\PSoC4/RS485.c ****             if(locTxBufferWrite >= RS485_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC4/RS485.c ****             {
1081:Generated_Source\PSoC4/RS485.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC4/RS485.c ****             }
1083:Generated_Source\PSoC4/RS485.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC4/RS485.c ****             RS485_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC4/RS485.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC4/RS485.c **** 
1087:Generated_Source\PSoC4/RS485.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC4/RS485.c ****         #if ((RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC4/RS485.c ****             RS485_DisableTxInt();
1090:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC4/RS485.c **** 
1092:Generated_Source\PSoC4/RS485.c ****             RS485_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC4/RS485.c **** 
1094:Generated_Source\PSoC4/RS485.c ****         #if ((RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC4/RS485.c ****             RS485_EnableTxInt();
1096:Generated_Source\PSoC4/RS485.c ****         #endif /* (RS485_TX_BUFFER_SIZE > RS485_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC4/RS485.c **** 
1098:Generated_Source\PSoC4/RS485.c ****             if(0u != (RS485_TXSTATUS_REG & RS485_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC4/RS485.c ****             {
1100:Generated_Source\PSoC4/RS485.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC4/RS485.c ****                 RS485_SetPendingTxInt();
1102:Generated_Source\PSoC4/RS485.c ****             }
1103:Generated_Source\PSoC4/RS485.c ****         }
1104:Generated_Source\PSoC4/RS485.c **** 
1105:Generated_Source\PSoC4/RS485.c ****     #else
1106:Generated_Source\PSoC4/RS485.c **** 
1107:Generated_Source\PSoC4/RS485.c ****         while((RS485_TXSTATUS_REG & RS485_TX_STS_FIFO_FULL) != 0u)
 691              		.loc 1 1107 0 discriminator 1
 692 0000 034B     		ldr	r3, .L59
 693 0002 1B78     		ldrb	r3, [r3]
 694 0004 5B07     		lsls	r3, r3, #29
 695 0006 FBD4     		bmi	.L58
1108:Generated_Source\PSoC4/RS485.c ****         {
1109:Generated_Source\PSoC4/RS485.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC4/RS485.c ****         }
1111:Generated_Source\PSoC4/RS485.c **** 
1112:Generated_Source\PSoC4/RS485.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC4/RS485.c ****         RS485_TXDATA_REG = txDataByte;
 696              		.loc 1 1113 0
 697 0008 024B     		ldr	r3, .L59+4
 698 000a 1870     		strb	r0, [r3]
1114:Generated_Source\PSoC4/RS485.c **** 
1115:Generated_Source\PSoC4/RS485.c ****     #endif /* RS485_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC4/RS485.c ****     }
 699              		.loc 1 1116 0
 700              		@ sp needed
 701 000c 7047     		bx	lr
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 33


 702              	.L60:
 703 000e C046     		.align	2
 704              	.L59:
 705 0010 61000F40 		.word	1074724961
 706 0014 41000F40 		.word	1074724929
 707              		.cfi_endproc
 708              	.LFE19:
 709              		.size	RS485_PutChar, .-RS485_PutChar
 710              		.section	.text.RS485_PutString,"ax",%progbits
 711              		.align	2
 712              		.global	RS485_PutString
 713              		.code	16
 714              		.thumb_func
 715              		.type	RS485_PutString, %function
 716              	RS485_PutString:
 717              	.LFB20:
1117:Generated_Source\PSoC4/RS485.c **** 
1118:Generated_Source\PSoC4/RS485.c **** 
1119:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1120:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_PutString
1121:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1122:Generated_Source\PSoC4/RS485.c ****     *
1123:Generated_Source\PSoC4/RS485.c ****     * Summary:
1124:Generated_Source\PSoC4/RS485.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC4/RS485.c ****     *
1126:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1127:Generated_Source\PSoC4/RS485.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC4/RS485.c ****     *
1129:Generated_Source\PSoC4/RS485.c ****     * Return:
1130:Generated_Source\PSoC4/RS485.c ****     *  None.
1131:Generated_Source\PSoC4/RS485.c ****     *
1132:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1133:Generated_Source\PSoC4/RS485.c ****     *  RS485_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC4/RS485.c ****     *     initialized.
1135:Generated_Source\PSoC4/RS485.c ****     *
1136:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1137:Generated_Source\PSoC4/RS485.c ****     *  No.
1138:Generated_Source\PSoC4/RS485.c ****     *
1139:Generated_Source\PSoC4/RS485.c ****     * Theory:
1140:Generated_Source\PSoC4/RS485.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC4/RS485.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC4/RS485.c ****     *  TX buffer.
1143:Generated_Source\PSoC4/RS485.c ****     *
1144:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1145:Generated_Source\PSoC4/RS485.c ****     void RS485_PutString(const char8 string[]) 
1146:Generated_Source\PSoC4/RS485.c ****     {
 718              		.loc 1 1146 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              	.LVL33:
 723 0000 70B5     		push	{r4, r5, r6, lr}
 724              		.cfi_def_cfa_offset 16
 725              		.cfi_offset 4, -16
 726              		.cfi_offset 5, -12
 727              		.cfi_offset 6, -8
 728              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 34


 729 0002 0500     		movs	r5, r0
 730              	.LVL34:
1147:Generated_Source\PSoC4/RS485.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC4/RS485.c **** 
1149:Generated_Source\PSoC4/RS485.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC4/RS485.c ****         if(RS485_initVar != 0u)
 731              		.loc 1 1150 0
 732 0004 074B     		ldr	r3, .L66
 733 0006 1B78     		ldrb	r3, [r3]
 734 0008 002B     		cmp	r3, #0
 735 000a 05D1     		bne	.L65
 736 000c 08E0     		b	.L61
 737              	.LVL35:
 738              	.L64:
1151:Generated_Source\PSoC4/RS485.c ****         {
1152:Generated_Source\PSoC4/RS485.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC4/RS485.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC4/RS485.c ****             {
1155:Generated_Source\PSoC4/RS485.c ****                 RS485_PutChar((uint8)string[bufIndex]);
 739              		.loc 1 1155 0
 740 000e FFF7FEFF 		bl	RS485_PutChar
 741              	.LVL36:
1156:Generated_Source\PSoC4/RS485.c ****                 bufIndex++;
 742              		.loc 1 1156 0
 743 0012 0134     		adds	r4, r4, #1
 744              	.LVL37:
 745 0014 A4B2     		uxth	r4, r4
 746              	.LVL38:
 747 0016 00E0     		b	.L62
 748              	.LVL39:
 749              	.L65:
 750 0018 0024     		movs	r4, #0
 751              	.LVL40:
 752              	.L62:
1153:Generated_Source\PSoC4/RS485.c ****             {
 753              		.loc 1 1153 0
 754 001a 285D     		ldrb	r0, [r5, r4]
 755 001c 0028     		cmp	r0, #0
 756 001e F6D1     		bne	.L64
 757              	.LVL41:
 758              	.L61:
1157:Generated_Source\PSoC4/RS485.c ****             }
1158:Generated_Source\PSoC4/RS485.c ****         }
1159:Generated_Source\PSoC4/RS485.c ****     }
 759              		.loc 1 1159 0
 760              		@ sp needed
 761              	.LVL42:
 762 0020 70BD     		pop	{r4, r5, r6, pc}
 763              	.L67:
 764 0022 C046     		.align	2
 765              	.L66:
 766 0024 00000000 		.word	.LANCHOR0
 767              		.cfi_endproc
 768              	.LFE20:
 769              		.size	RS485_PutString, .-RS485_PutString
 770              		.section	.text.RS485_PutArray,"ax",%progbits
 771              		.align	2
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 35


 772              		.global	RS485_PutArray
 773              		.code	16
 774              		.thumb_func
 775              		.type	RS485_PutArray, %function
 776              	RS485_PutArray:
 777              	.LFB21:
1160:Generated_Source\PSoC4/RS485.c **** 
1161:Generated_Source\PSoC4/RS485.c **** 
1162:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1163:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_PutArray
1164:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1165:Generated_Source\PSoC4/RS485.c ****     *
1166:Generated_Source\PSoC4/RS485.c ****     * Summary:
1167:Generated_Source\PSoC4/RS485.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC4/RS485.c ****     *  transmission.
1169:Generated_Source\PSoC4/RS485.c ****     *
1170:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1171:Generated_Source\PSoC4/RS485.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC4/RS485.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC4/RS485.c ****     *             Size parameter.
1174:Generated_Source\PSoC4/RS485.c ****     *
1175:Generated_Source\PSoC4/RS485.c ****     * Return:
1176:Generated_Source\PSoC4/RS485.c ****     *  None.
1177:Generated_Source\PSoC4/RS485.c ****     *
1178:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1179:Generated_Source\PSoC4/RS485.c ****     *  RS485_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC4/RS485.c ****     *     initialized.
1181:Generated_Source\PSoC4/RS485.c ****     *
1182:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1183:Generated_Source\PSoC4/RS485.c ****     *  No.
1184:Generated_Source\PSoC4/RS485.c ****     *
1185:Generated_Source\PSoC4/RS485.c ****     * Theory:
1186:Generated_Source\PSoC4/RS485.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC4/RS485.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC4/RS485.c ****     *  TX buffer.
1189:Generated_Source\PSoC4/RS485.c ****     *
1190:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1191:Generated_Source\PSoC4/RS485.c ****     void RS485_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC4/RS485.c ****                                                                     
1193:Generated_Source\PSoC4/RS485.c ****     {
 778              		.loc 1 1193 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              	.LVL43:
 783 0000 70B5     		push	{r4, r5, r6, lr}
 784              		.cfi_def_cfa_offset 16
 785              		.cfi_offset 4, -16
 786              		.cfi_offset 5, -12
 787              		.cfi_offset 6, -8
 788              		.cfi_offset 14, -4
 789 0002 0600     		movs	r6, r0
 790 0004 0D00     		movs	r5, r1
 791              	.LVL44:
1194:Generated_Source\PSoC4/RS485.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC4/RS485.c **** 
1196:Generated_Source\PSoC4/RS485.c ****         /* If not Initialized then skip this function */
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 36


1197:Generated_Source\PSoC4/RS485.c ****         if(RS485_initVar != 0u)
 792              		.loc 1 1197 0
 793 0006 074B     		ldr	r3, .L73
 794 0008 1B78     		ldrb	r3, [r3]
 795 000a 002B     		cmp	r3, #0
 796 000c 06D1     		bne	.L72
 797 000e 08E0     		b	.L68
 798              	.LVL45:
 799              	.L71:
1198:Generated_Source\PSoC4/RS485.c ****         {
1199:Generated_Source\PSoC4/RS485.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC4/RS485.c ****             {
1201:Generated_Source\PSoC4/RS485.c ****                 RS485_PutChar(string[bufIndex]);
 800              		.loc 1 1201 0
 801 0010 305D     		ldrb	r0, [r6, r4]
 802 0012 FFF7FEFF 		bl	RS485_PutChar
 803              	.LVL46:
1202:Generated_Source\PSoC4/RS485.c ****                 bufIndex++;
 804              		.loc 1 1202 0
 805 0016 0134     		adds	r4, r4, #1
 806              	.LVL47:
 807 0018 E4B2     		uxtb	r4, r4
 808              	.LVL48:
 809 001a 00E0     		b	.L69
 810              	.LVL49:
 811              	.L72:
 812 001c 0024     		movs	r4, #0
 813              	.LVL50:
 814              	.L69:
1199:Generated_Source\PSoC4/RS485.c ****             {
 815              		.loc 1 1199 0
 816 001e AC42     		cmp	r4, r5
 817 0020 F6D3     		bcc	.L71
 818              	.LVL51:
 819              	.L68:
1203:Generated_Source\PSoC4/RS485.c ****             }
1204:Generated_Source\PSoC4/RS485.c ****         }
1205:Generated_Source\PSoC4/RS485.c ****     }
 820              		.loc 1 1205 0
 821              		@ sp needed
 822              	.LVL52:
 823 0022 70BD     		pop	{r4, r5, r6, pc}
 824              	.L74:
 825              		.align	2
 826              	.L73:
 827 0024 00000000 		.word	.LANCHOR0
 828              		.cfi_endproc
 829              	.LFE21:
 830              		.size	RS485_PutArray, .-RS485_PutArray
 831              		.section	.text.RS485_PutCRLF,"ax",%progbits
 832              		.align	2
 833              		.global	RS485_PutCRLF
 834              		.code	16
 835              		.thumb_func
 836              		.type	RS485_PutCRLF, %function
 837              	RS485_PutCRLF:
 838              	.LFB22:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 37


1206:Generated_Source\PSoC4/RS485.c **** 
1207:Generated_Source\PSoC4/RS485.c **** 
1208:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1209:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_PutCRLF
1210:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1211:Generated_Source\PSoC4/RS485.c ****     *
1212:Generated_Source\PSoC4/RS485.c ****     * Summary:
1213:Generated_Source\PSoC4/RS485.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC4/RS485.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC4/RS485.c ****     *
1216:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1217:Generated_Source\PSoC4/RS485.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC4/RS485.c ****     *
1219:Generated_Source\PSoC4/RS485.c ****     * Return:
1220:Generated_Source\PSoC4/RS485.c ****     *  None.
1221:Generated_Source\PSoC4/RS485.c ****     *
1222:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1223:Generated_Source\PSoC4/RS485.c ****     *  RS485_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC4/RS485.c ****     *     initialized.
1225:Generated_Source\PSoC4/RS485.c ****     *
1226:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1227:Generated_Source\PSoC4/RS485.c ****     *  No.
1228:Generated_Source\PSoC4/RS485.c ****     *
1229:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1230:Generated_Source\PSoC4/RS485.c ****     void RS485_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC4/RS485.c ****     {
 839              		.loc 1 1231 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL53:
 844 0000 10B5     		push	{r4, lr}
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 4, -8
 847              		.cfi_offset 14, -4
1232:Generated_Source\PSoC4/RS485.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC4/RS485.c ****         if(RS485_initVar != 0u)
 848              		.loc 1 1233 0
 849 0002 064B     		ldr	r3, .L77
 850 0004 1B78     		ldrb	r3, [r3]
 851 0006 002B     		cmp	r3, #0
 852 0008 07D0     		beq	.L75
1234:Generated_Source\PSoC4/RS485.c ****         {
1235:Generated_Source\PSoC4/RS485.c ****             RS485_PutChar(txDataByte);
 853              		.loc 1 1235 0
 854 000a FFF7FEFF 		bl	RS485_PutChar
 855              	.LVL54:
1236:Generated_Source\PSoC4/RS485.c ****             RS485_PutChar(0x0Du);
 856              		.loc 1 1236 0
 857 000e 0D20     		movs	r0, #13
 858 0010 FFF7FEFF 		bl	RS485_PutChar
 859              	.LVL55:
1237:Generated_Source\PSoC4/RS485.c ****             RS485_PutChar(0x0Au);
 860              		.loc 1 1237 0
 861 0014 0A20     		movs	r0, #10
 862 0016 FFF7FEFF 		bl	RS485_PutChar
 863              	.LVL56:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 38


 864              	.L75:
1238:Generated_Source\PSoC4/RS485.c ****         }
1239:Generated_Source\PSoC4/RS485.c ****     }
 865              		.loc 1 1239 0
 866              		@ sp needed
 867 001a 10BD     		pop	{r4, pc}
 868              	.L78:
 869              		.align	2
 870              	.L77:
 871 001c 00000000 		.word	.LANCHOR0
 872              		.cfi_endproc
 873              	.LFE22:
 874              		.size	RS485_PutCRLF, .-RS485_PutCRLF
 875              		.section	.text.RS485_GetTxBufferSize,"ax",%progbits
 876              		.align	2
 877              		.global	RS485_GetTxBufferSize
 878              		.code	16
 879              		.thumb_func
 880              		.type	RS485_GetTxBufferSize, %function
 881              	RS485_GetTxBufferSize:
 882              	.LFB23:
1240:Generated_Source\PSoC4/RS485.c **** 
1241:Generated_Source\PSoC4/RS485.c **** 
1242:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1243:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_GetTxBufferSize
1244:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1245:Generated_Source\PSoC4/RS485.c ****     *
1246:Generated_Source\PSoC4/RS485.c ****     * Summary:
1247:Generated_Source\PSoC4/RS485.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC4/RS485.c ****     *  transmitted.
1249:Generated_Source\PSoC4/RS485.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC4/RS485.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC4/RS485.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC4/RS485.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC4/RS485.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC4/RS485.c ****     *
1255:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1256:Generated_Source\PSoC4/RS485.c ****     *  None.
1257:Generated_Source\PSoC4/RS485.c ****     *
1258:Generated_Source\PSoC4/RS485.c ****     * Return:
1259:Generated_Source\PSoC4/RS485.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC4/RS485.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC4/RS485.c ****     *
1262:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1263:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC4/RS485.c ****     *
1266:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1267:Generated_Source\PSoC4/RS485.c ****     *  No.
1268:Generated_Source\PSoC4/RS485.c ****     *
1269:Generated_Source\PSoC4/RS485.c ****     * Theory:
1270:Generated_Source\PSoC4/RS485.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC4/RS485.c ****     *
1272:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1273:Generated_Source\PSoC4/RS485.c ****     uint8 RS485_GetTxBufferSize(void)
1274:Generated_Source\PSoC4/RS485.c ****                                                             
1275:Generated_Source\PSoC4/RS485.c ****     {
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 39


 883              		.loc 1 1275 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
1276:Generated_Source\PSoC4/RS485.c ****         uint8 size;
1277:Generated_Source\PSoC4/RS485.c **** 
1278:Generated_Source\PSoC4/RS485.c ****     #if (RS485_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC4/RS485.c **** 
1280:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC4/RS485.c ****         RS485_DisableTxInt();
1282:Generated_Source\PSoC4/RS485.c **** 
1283:Generated_Source\PSoC4/RS485.c ****         if(RS485_txBufferRead == RS485_txBufferWrite)
1284:Generated_Source\PSoC4/RS485.c ****         {
1285:Generated_Source\PSoC4/RS485.c ****             size = 0u;
1286:Generated_Source\PSoC4/RS485.c ****         }
1287:Generated_Source\PSoC4/RS485.c ****         else if(RS485_txBufferRead < RS485_txBufferWrite)
1288:Generated_Source\PSoC4/RS485.c ****         {
1289:Generated_Source\PSoC4/RS485.c ****             size = (RS485_txBufferWrite - RS485_txBufferRead);
1290:Generated_Source\PSoC4/RS485.c ****         }
1291:Generated_Source\PSoC4/RS485.c ****         else
1292:Generated_Source\PSoC4/RS485.c ****         {
1293:Generated_Source\PSoC4/RS485.c ****             size = (RS485_TX_BUFFER_SIZE - RS485_txBufferRead) +
1294:Generated_Source\PSoC4/RS485.c ****                     RS485_txBufferWrite;
1295:Generated_Source\PSoC4/RS485.c ****         }
1296:Generated_Source\PSoC4/RS485.c **** 
1297:Generated_Source\PSoC4/RS485.c ****         RS485_EnableTxInt();
1298:Generated_Source\PSoC4/RS485.c **** 
1299:Generated_Source\PSoC4/RS485.c ****     #else
1300:Generated_Source\PSoC4/RS485.c **** 
1301:Generated_Source\PSoC4/RS485.c ****         size = RS485_TXSTATUS_REG;
 888              		.loc 1 1301 0
 889 0000 064B     		ldr	r3, .L83
 890 0002 1B78     		ldrb	r3, [r3]
 891 0004 DBB2     		uxtb	r3, r3
 892              	.LVL57:
1302:Generated_Source\PSoC4/RS485.c **** 
1303:Generated_Source\PSoC4/RS485.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC4/RS485.c ****         if((size & RS485_TX_STS_FIFO_FULL) != 0u)
 893              		.loc 1 1304 0
 894 0006 5A07     		lsls	r2, r3, #29
 895 0008 03D4     		bmi	.L81
1305:Generated_Source\PSoC4/RS485.c ****         {
1306:Generated_Source\PSoC4/RS485.c ****             size = RS485_FIFO_LENGTH;
1307:Generated_Source\PSoC4/RS485.c ****         }
1308:Generated_Source\PSoC4/RS485.c ****         else if((size & RS485_TX_STS_FIFO_EMPTY) != 0u)
 896              		.loc 1 1308 0
 897 000a 9B07     		lsls	r3, r3, #30
 898 000c 03D5     		bpl	.L82
 899              	.LVL58:
1309:Generated_Source\PSoC4/RS485.c ****         {
1310:Generated_Source\PSoC4/RS485.c ****             size = 0u;
 900              		.loc 1 1310 0
 901 000e 0020     		movs	r0, #0
 902 0010 02E0     		b	.L80
 903              	.LVL59:
 904              	.L81:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 40


1306:Generated_Source\PSoC4/RS485.c ****         }
 905              		.loc 1 1306 0
 906 0012 0420     		movs	r0, #4
 907 0014 00E0     		b	.L80
 908              	.LVL60:
 909              	.L82:
1311:Generated_Source\PSoC4/RS485.c ****         }
1312:Generated_Source\PSoC4/RS485.c ****         else
1313:Generated_Source\PSoC4/RS485.c ****         {
1314:Generated_Source\PSoC4/RS485.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC4/RS485.c ****             size = 1u;
 910              		.loc 1 1315 0
 911 0016 0120     		movs	r0, #1
 912              	.L80:
 913              	.LVL61:
1316:Generated_Source\PSoC4/RS485.c ****         }
1317:Generated_Source\PSoC4/RS485.c **** 
1318:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC4/RS485.c **** 
1320:Generated_Source\PSoC4/RS485.c ****     return(size);
1321:Generated_Source\PSoC4/RS485.c ****     }
 914              		.loc 1 1321 0
 915              		@ sp needed
 916 0018 7047     		bx	lr
 917              	.L84:
 918 001a C046     		.align	2
 919              	.L83:
 920 001c 61000F40 		.word	1074724961
 921              		.cfi_endproc
 922              	.LFE23:
 923              		.size	RS485_GetTxBufferSize, .-RS485_GetTxBufferSize
 924              		.section	.text.RS485_ClearTxBuffer,"ax",%progbits
 925              		.align	2
 926              		.global	RS485_ClearTxBuffer
 927              		.code	16
 928              		.thumb_func
 929              		.type	RS485_ClearTxBuffer, %function
 930              	RS485_ClearTxBuffer:
 931              	.LFB24:
1322:Generated_Source\PSoC4/RS485.c **** 
1323:Generated_Source\PSoC4/RS485.c **** 
1324:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1325:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_ClearTxBuffer
1326:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1327:Generated_Source\PSoC4/RS485.c ****     *
1328:Generated_Source\PSoC4/RS485.c ****     * Summary:
1329:Generated_Source\PSoC4/RS485.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC4/RS485.c ****     *
1331:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1332:Generated_Source\PSoC4/RS485.c ****     *  None.
1333:Generated_Source\PSoC4/RS485.c ****     *
1334:Generated_Source\PSoC4/RS485.c ****     * Return:
1335:Generated_Source\PSoC4/RS485.c ****     *  None.
1336:Generated_Source\PSoC4/RS485.c ****     *
1337:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1338:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC4/RS485.c ****     *  RS485_txBufferRead - cleared to zero.
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 41


1340:Generated_Source\PSoC4/RS485.c ****     *
1341:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1342:Generated_Source\PSoC4/RS485.c ****     *  No.
1343:Generated_Source\PSoC4/RS485.c ****     *
1344:Generated_Source\PSoC4/RS485.c ****     * Theory:
1345:Generated_Source\PSoC4/RS485.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC4/RS485.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC4/RS485.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC4/RS485.c ****     *
1349:Generated_Source\PSoC4/RS485.c ****     * Side Effects:
1350:Generated_Source\PSoC4/RS485.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC4/RS485.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC4/RS485.c ****     *
1353:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1354:Generated_Source\PSoC4/RS485.c ****     void RS485_ClearTxBuffer(void) 
1355:Generated_Source\PSoC4/RS485.c ****     {
 932              		.loc 1 1355 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 0000 10B5     		push	{r4, lr}
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 4, -8
 939              		.cfi_offset 14, -4
1356:Generated_Source\PSoC4/RS485.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC4/RS485.c **** 
1358:Generated_Source\PSoC4/RS485.c ****         enableInterrupts = CyEnterCriticalSection();
 940              		.loc 1 1358 0
 941 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 942              	.LVL62:
1359:Generated_Source\PSoC4/RS485.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC4/RS485.c ****         RS485_TXDATA_AUX_CTL_REG |= (uint8)  RS485_TX_FIFO_CLR;
 943              		.loc 1 1360 0
 944 0006 064A     		ldr	r2, .L86
 945 0008 1178     		ldrb	r1, [r2]
 946 000a 0123     		movs	r3, #1
 947 000c 0B43     		orrs	r3, r1
 948 000e DBB2     		uxtb	r3, r3
 949 0010 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC4/RS485.c ****         RS485_TXDATA_AUX_CTL_REG &= (uint8) ~RS485_TX_FIFO_CLR;
 950              		.loc 1 1361 0
 951 0012 1378     		ldrb	r3, [r2]
 952 0014 0121     		movs	r1, #1
 953 0016 8B43     		bics	r3, r1
 954 0018 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC4/RS485.c ****         CyExitCriticalSection(enableInterrupts);
 955              		.loc 1 1362 0
 956 001a FFF7FEFF 		bl	CyExitCriticalSection
 957              	.LVL63:
1363:Generated_Source\PSoC4/RS485.c **** 
1364:Generated_Source\PSoC4/RS485.c ****     #if (RS485_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC4/RS485.c **** 
1366:Generated_Source\PSoC4/RS485.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC4/RS485.c ****         RS485_DisableTxInt();
1368:Generated_Source\PSoC4/RS485.c **** 
1369:Generated_Source\PSoC4/RS485.c ****         RS485_txBufferRead = 0u;
1370:Generated_Source\PSoC4/RS485.c ****         RS485_txBufferWrite = 0u;
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 42


1371:Generated_Source\PSoC4/RS485.c **** 
1372:Generated_Source\PSoC4/RS485.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC4/RS485.c ****         RS485_EnableTxInt();
1374:Generated_Source\PSoC4/RS485.c **** 
1375:Generated_Source\PSoC4/RS485.c ****     #endif /* (RS485_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC4/RS485.c ****     }
 958              		.loc 1 1376 0
 959              		@ sp needed
 960 001e 10BD     		pop	{r4, pc}
 961              	.L87:
 962              		.align	2
 963              	.L86:
 964 0020 91000F40 		.word	1074725009
 965              		.cfi_endproc
 966              	.LFE24:
 967              		.size	RS485_ClearTxBuffer, .-RS485_ClearTxBuffer
 968              		.section	.text.RS485_SendBreak,"ax",%progbits
 969              		.align	2
 970              		.global	RS485_SendBreak
 971              		.code	16
 972              		.thumb_func
 973              		.type	RS485_SendBreak, %function
 974              	RS485_SendBreak:
 975              	.LFB25:
1377:Generated_Source\PSoC4/RS485.c **** 
1378:Generated_Source\PSoC4/RS485.c **** 
1379:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1380:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SendBreak
1381:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1382:Generated_Source\PSoC4/RS485.c ****     *
1383:Generated_Source\PSoC4/RS485.c ****     * Summary:
1384:Generated_Source\PSoC4/RS485.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC4/RS485.c ****     *
1386:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1387:Generated_Source\PSoC4/RS485.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC4/RS485.c ****     *   RS485_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC4/RS485.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC4/RS485.c ****     *   RS485_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC4/RS485.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC4/RS485.c ****     *   RS485_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC4/RS485.c ****     *       then return.
1394:Generated_Source\PSoC4/RS485.c ****     *   RS485_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC4/RS485.c ****     *      RS485_SEND_BREAK and RS485_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC4/RS485.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC4/RS485.c ****     *
1398:Generated_Source\PSoC4/RS485.c ****     * Return:
1399:Generated_Source\PSoC4/RS485.c ****     *  None.
1400:Generated_Source\PSoC4/RS485.c ****     *
1401:Generated_Source\PSoC4/RS485.c ****     * Global Variables:
1402:Generated_Source\PSoC4/RS485.c ****     *  RS485_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC4/RS485.c ****     *     initialized.
1404:Generated_Source\PSoC4/RS485.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC4/RS485.c ****     *
1406:Generated_Source\PSoC4/RS485.c ****     * Reentrant:
1407:Generated_Source\PSoC4/RS485.c ****     *  No.
1408:Generated_Source\PSoC4/RS485.c ****     *
1409:Generated_Source\PSoC4/RS485.c ****     * Theory:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 43


1410:Generated_Source\PSoC4/RS485.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC4/RS485.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC4/RS485.c ****     *  operation.
1413:Generated_Source\PSoC4/RS485.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC4/RS485.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC4/RS485.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC4/RS485.c ****     *     complete.
1417:Generated_Source\PSoC4/RS485.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC4/RS485.c ****     *     operation
1419:Generated_Source\PSoC4/RS485.c ****     *     Example for this case:
1420:Generated_Source\PSoC4/RS485.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC4/RS485.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC4/RS485.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC4/RS485.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC4/RS485.c ****     *     complete break operation.
1425:Generated_Source\PSoC4/RS485.c ****     *     Example for this case:
1426:Generated_Source\PSoC4/RS485.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC4/RS485.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC4/RS485.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC4/RS485.c ****     *     When interrupt appear with RS485_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC4/RS485.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC4/RS485.c ****     *
1432:Generated_Source\PSoC4/RS485.c ****     * Side Effects:
1433:Generated_Source\PSoC4/RS485.c ****     *  The RS485_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC4/RS485.c ****     *  break signal.
1435:Generated_Source\PSoC4/RS485.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC4/RS485.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC4/RS485.c ****     *  communication can continue.
1438:Generated_Source\PSoC4/RS485.c ****     *
1439:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1440:Generated_Source\PSoC4/RS485.c ****     void RS485_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC4/RS485.c ****     {
 976              		.loc 1 1441 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 0, uses_anonymous_args = 0
 980              		@ link register save eliminated.
 981              	.LVL64:
1442:Generated_Source\PSoC4/RS485.c **** 
1443:Generated_Source\PSoC4/RS485.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC4/RS485.c ****         if(RS485_initVar != 0u)
 982              		.loc 1 1444 0
 983 0000 134B     		ldr	r3, .L95
 984 0002 1B78     		ldrb	r3, [r3]
 985 0004 002B     		cmp	r3, #0
 986 0006 21D0     		beq	.L88
 987              	.LBB2:
1445:Generated_Source\PSoC4/RS485.c ****         {
1446:Generated_Source\PSoC4/RS485.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC4/RS485.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC4/RS485.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC4/RS485.c **** 
1450:Generated_Source\PSoC4/RS485.c ****         #if(RS485_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC4/RS485.c **** 
1452:Generated_Source\PSoC4/RS485.c ****             if( (retMode == RS485_SEND_BREAK) ||
1453:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC4/RS485.c ****             {
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 44


1455:Generated_Source\PSoC4/RS485.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC4/RS485.c ****                 RS485_WriteControlRegister(RS485_ReadControlRegister() |
1457:Generated_Source\PSoC4/RS485.c ****                                                       RS485_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC4/RS485.c ****                 /* Send zeros */
1459:Generated_Source\PSoC4/RS485.c ****                 RS485_TXDATA_REG = 0u;
1460:Generated_Source\PSoC4/RS485.c **** 
1461:Generated_Source\PSoC4/RS485.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC4/RS485.c ****                 {
1463:Generated_Source\PSoC4/RS485.c ****                     tmpStat = RS485_TXSTATUS_REG;
1464:Generated_Source\PSoC4/RS485.c ****                 }
1465:Generated_Source\PSoC4/RS485.c ****                 while((tmpStat & RS485_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC4/RS485.c ****             }
1467:Generated_Source\PSoC4/RS485.c **** 
1468:Generated_Source\PSoC4/RS485.c ****             if( (retMode == RS485_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC4/RS485.c ****             {
1471:Generated_Source\PSoC4/RS485.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC4/RS485.c ****                 {
1473:Generated_Source\PSoC4/RS485.c ****                     tmpStat = RS485_TXSTATUS_REG;
1474:Generated_Source\PSoC4/RS485.c ****                 }
1475:Generated_Source\PSoC4/RS485.c ****                 while(((uint8)~tmpStat & RS485_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC4/RS485.c ****             }
1477:Generated_Source\PSoC4/RS485.c **** 
1478:Generated_Source\PSoC4/RS485.c ****             if( (retMode == RS485_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_REINIT) ||
1480:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC4/RS485.c ****             {
1482:Generated_Source\PSoC4/RS485.c ****                 RS485_WriteControlRegister(RS485_ReadControlRegister() &
1483:Generated_Source\PSoC4/RS485.c ****                                               (uint8)~RS485_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC4/RS485.c ****             }
1485:Generated_Source\PSoC4/RS485.c **** 
1486:Generated_Source\PSoC4/RS485.c ****         #else /* RS485_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC4/RS485.c **** 
1488:Generated_Source\PSoC4/RS485.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC4/RS485.c **** 
1490:Generated_Source\PSoC4/RS485.c ****             if( (retMode == RS485_SEND_BREAK) ||
 988              		.loc 1 1490 0
 989 0008 0028     		cmp	r0, #0
 990 000a 01D0     		beq	.L90
 991              		.loc 1 1490 0 is_stmt 0 discriminator 1
 992 000c 0328     		cmp	r0, #3
 993 000e 0CD1     		bne	.L91
 994              	.L90:
1491:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC4/RS485.c ****             {
1493:Generated_Source\PSoC4/RS485.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC4/RS485.c ****                 #if( (RS485_PARITY_TYPE != RS485__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC4/RS485.c ****                                     (RS485_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC4/RS485.c ****                     RS485_WriteControlRegister(RS485_ReadControlRegister() |
1497:Generated_Source\PSoC4/RS485.c ****                                                           RS485_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC4/RS485.c ****                 #endif /* End RS485_PARITY_TYPE != RS485__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC4/RS485.c **** 
1500:Generated_Source\PSoC4/RS485.c ****                 #if(RS485_TXCLKGEN_DP)
1501:Generated_Source\PSoC4/RS485.c ****                     txPeriod = RS485_TXBITCLKTX_COMPLETE_REG;
 995              		.loc 1 1501 0 is_stmt 1
 996 0010 104B     		ldr	r3, .L95+4
 997 0012 1978     		ldrb	r1, [r3]
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 45


 998 0014 0E4A     		ldr	r2, .L95
 999 0016 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC4/RS485.c ****                     RS485_TXBITCLKTX_COMPLETE_REG = RS485_TXBITCTR_BREAKBITS;
 1000              		.loc 1 1502 0
 1001 0018 6722     		movs	r2, #103
 1002 001a 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC4/RS485.c ****                 #else
1504:Generated_Source\PSoC4/RS485.c ****                     txPeriod = RS485_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC4/RS485.c ****                     RS485_TXBITCTR_PERIOD_REG = RS485_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC4/RS485.c ****                 #endif /* End RS485_TXCLKGEN_DP */
1507:Generated_Source\PSoC4/RS485.c **** 
1508:Generated_Source\PSoC4/RS485.c ****                 /* Send zeros */
1509:Generated_Source\PSoC4/RS485.c ****                 RS485_TXDATA_REG = 0u;
 1003              		.loc 1 1509 0
 1004 001c 0022     		movs	r2, #0
 1005 001e 0E4B     		ldr	r3, .L95+8
 1006 0020 1A70     		strb	r2, [r3]
 1007              	.L92:
1510:Generated_Source\PSoC4/RS485.c **** 
1511:Generated_Source\PSoC4/RS485.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC4/RS485.c ****                 {
1513:Generated_Source\PSoC4/RS485.c ****                     tmpStat = RS485_TXSTATUS_REG;
 1008              		.loc 1 1513 0 discriminator 1
 1009 0022 0E4B     		ldr	r3, .L95+12
 1010 0024 1B78     		ldrb	r3, [r3]
 1011              	.LVL65:
1514:Generated_Source\PSoC4/RS485.c ****                 }
1515:Generated_Source\PSoC4/RS485.c ****                 while((tmpStat & RS485_TX_STS_FIFO_EMPTY) != 0u);
 1012              		.loc 1 1515 0 discriminator 1
 1013 0026 9B07     		lsls	r3, r3, #30
 1014 0028 FBD4     		bmi	.L92
 1015              	.LVL66:
 1016              	.L91:
1516:Generated_Source\PSoC4/RS485.c ****             }
1517:Generated_Source\PSoC4/RS485.c **** 
1518:Generated_Source\PSoC4/RS485.c ****             if( (retMode == RS485_WAIT_FOR_COMPLETE_REINIT) ||
 1017              		.loc 1 1518 0
 1018 002a 0128     		cmp	r0, #1
 1019 002c 01D0     		beq	.L93
 1020              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1021 002e 0328     		cmp	r0, #3
 1022 0030 04D1     		bne	.L94
 1023              	.L93:
1519:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC4/RS485.c ****             {
1521:Generated_Source\PSoC4/RS485.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC4/RS485.c ****                 {
1523:Generated_Source\PSoC4/RS485.c ****                     tmpStat = RS485_TXSTATUS_REG;
 1024              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1025 0032 0A4B     		ldr	r3, .L95+12
 1026 0034 1A78     		ldrb	r2, [r3]
 1027              	.LVL67:
1524:Generated_Source\PSoC4/RS485.c ****                 }
1525:Generated_Source\PSoC4/RS485.c ****                 while(((uint8)~tmpStat & RS485_TX_STS_COMPLETE) != 0u);
 1028              		.loc 1 1525 0 discriminator 1
 1029 0036 0123     		movs	r3, #1
 1030 0038 9343     		bics	r3, r2
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 46


 1031 003a FAD1     		bne	.L93
 1032              	.LVL68:
 1033              	.L94:
1526:Generated_Source\PSoC4/RS485.c ****             }
1527:Generated_Source\PSoC4/RS485.c **** 
1528:Generated_Source\PSoC4/RS485.c ****             if( (retMode == RS485_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_REINIT) ||
 1034              		.loc 1 1529 0
 1035 003c 0138     		subs	r0, r0, #1
 1036              	.LVL69:
 1037 003e C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_REINIT) ||
 1038              		.loc 1 1528 0
 1039 0040 0228     		cmp	r0, #2
 1040 0042 03D8     		bhi	.L88
1530:Generated_Source\PSoC4/RS485.c ****                 (retMode == RS485_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC4/RS485.c ****             {
1532:Generated_Source\PSoC4/RS485.c **** 
1533:Generated_Source\PSoC4/RS485.c ****             #if(RS485_TXCLKGEN_DP)
1534:Generated_Source\PSoC4/RS485.c ****                 RS485_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1041              		.loc 1 1534 0
 1042 0044 024B     		ldr	r3, .L95
 1043 0046 5A78     		ldrb	r2, [r3, #1]
 1044 0048 024B     		ldr	r3, .L95+4
 1045 004a 1A70     		strb	r2, [r3]
 1046              	.L88:
 1047              	.LBE2:
1535:Generated_Source\PSoC4/RS485.c ****             #else
1536:Generated_Source\PSoC4/RS485.c ****                 RS485_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC4/RS485.c ****             #endif /* End RS485_TXCLKGEN_DP */
1538:Generated_Source\PSoC4/RS485.c **** 
1539:Generated_Source\PSoC4/RS485.c ****             #if( (RS485_PARITY_TYPE != RS485__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC4/RS485.c ****                  (RS485_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC4/RS485.c ****                 RS485_WriteControlRegister(RS485_ReadControlRegister() &
1542:Generated_Source\PSoC4/RS485.c ****                                                       (uint8) ~RS485_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC4/RS485.c ****             #endif /* End RS485_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC4/RS485.c ****             }
1545:Generated_Source\PSoC4/RS485.c ****         #endif    /* End RS485_HD_ENABLED */
1546:Generated_Source\PSoC4/RS485.c ****         }
1547:Generated_Source\PSoC4/RS485.c ****     }
 1048              		.loc 1 1547 0
 1049              		@ sp needed
 1050 004c 7047     		bx	lr
 1051              	.L96:
 1052 004e C046     		.align	2
 1053              	.L95:
 1054 0050 00000000 		.word	.LANCHOR0
 1055 0054 30000F40 		.word	1074724912
 1056 0058 41000F40 		.word	1074724929
 1057 005c 61000F40 		.word	1074724961
 1058              		.cfi_endproc
 1059              	.LFE25:
 1060              		.size	RS485_SendBreak, .-RS485_SendBreak
 1061              		.section	.text.RS485_SetTxAddressMode,"ax",%progbits
 1062              		.align	2
 1063              		.global	RS485_SetTxAddressMode
 1064              		.code	16
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 47


 1065              		.thumb_func
 1066              		.type	RS485_SetTxAddressMode, %function
 1067              	RS485_SetTxAddressMode:
 1068              	.LFB26:
1548:Generated_Source\PSoC4/RS485.c **** 
1549:Generated_Source\PSoC4/RS485.c **** 
1550:Generated_Source\PSoC4/RS485.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/RS485.c ****     * Function Name: RS485_SetTxAddressMode
1552:Generated_Source\PSoC4/RS485.c ****     ********************************************************************************
1553:Generated_Source\PSoC4/RS485.c ****     *
1554:Generated_Source\PSoC4/RS485.c ****     * Summary:
1555:Generated_Source\PSoC4/RS485.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC4/RS485.c ****     *
1557:Generated_Source\PSoC4/RS485.c ****     * Parameters:
1558:Generated_Source\PSoC4/RS485.c ****     *  addressMode: 
1559:Generated_Source\PSoC4/RS485.c ****     *       RS485_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC4/RS485.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC4/RS485.c ****     *       RS485_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC4/RS485.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC4/RS485.c ****     *
1564:Generated_Source\PSoC4/RS485.c ****     * Return:
1565:Generated_Source\PSoC4/RS485.c ****     *  None.
1566:Generated_Source\PSoC4/RS485.c ****     *
1567:Generated_Source\PSoC4/RS485.c ****     * Side Effects:
1568:Generated_Source\PSoC4/RS485.c ****     *  This function sets and clears RS485_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC4/RS485.c ****     *  register.
1570:Generated_Source\PSoC4/RS485.c ****     *
1571:Generated_Source\PSoC4/RS485.c ****     *******************************************************************************/
1572:Generated_Source\PSoC4/RS485.c ****     void RS485_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC4/RS485.c ****     {
 1069              		.loc 1 1573 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074              	.LVL70:
1574:Generated_Source\PSoC4/RS485.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC4/RS485.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC4/RS485.c ****         {
1577:Generated_Source\PSoC4/RS485.c ****         #if( RS485_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC4/RS485.c ****             RS485_WriteControlRegister(RS485_ReadControlRegister() |
1579:Generated_Source\PSoC4/RS485.c ****                                                   RS485_CTRL_MARK);
1580:Generated_Source\PSoC4/RS485.c ****         #endif /* End RS485_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC4/RS485.c ****         }
1582:Generated_Source\PSoC4/RS485.c ****         else
1583:Generated_Source\PSoC4/RS485.c ****         {
1584:Generated_Source\PSoC4/RS485.c ****         #if( RS485_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC4/RS485.c ****             RS485_WriteControlRegister(RS485_ReadControlRegister() &
1586:Generated_Source\PSoC4/RS485.c ****                                                   (uint8) ~RS485_CTRL_MARK);
1587:Generated_Source\PSoC4/RS485.c ****         #endif /* End RS485_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC4/RS485.c ****         }
1589:Generated_Source\PSoC4/RS485.c ****     }
 1075              		.loc 1 1589 0
 1076              		@ sp needed
 1077 0000 7047     		bx	lr
 1078              		.cfi_endproc
 1079              	.LFE26:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 48


 1080              		.size	RS485_SetTxAddressMode, .-RS485_SetTxAddressMode
 1081              		.global	RS485_initVar
 1082 0002 C046     		.bss
 1083              		.set	.LANCHOR0,. + 0
 1084              		.type	RS485_initVar, %object
 1085              		.size	RS485_initVar, 1
 1086              	RS485_initVar:
 1087 0000 00       		.space	1
 1088              		.type	txPeriod.4983, %object
 1089              		.size	txPeriod.4983, 1
 1090              	txPeriod.4983:
 1091 0001 00       		.space	1
 1092              		.text
 1093              	.Letext0:
 1094              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1095              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1096              		.file 4 "Generated_Source\\PSoC4\\RS485_IntClock.h"
 1097              		.section	.debug_info,"",%progbits
 1098              	.Ldebug_info0:
 1099 0000 06060000 		.4byte	0x606
 1100 0004 0400     		.2byte	0x4
 1101 0006 00000000 		.4byte	.Ldebug_abbrev0
 1102 000a 04       		.byte	0x4
 1103 000b 01       		.uleb128 0x1
 1104 000c 68000000 		.4byte	.LASF64
 1105 0010 0C       		.byte	0xc
 1106 0011 41010000 		.4byte	.LASF65
 1107 0015 2C020000 		.4byte	.LASF66
 1108 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1109 001d 00000000 		.4byte	0
 1110 0021 00000000 		.4byte	.Ldebug_line0
 1111 0025 02       		.uleb128 0x2
 1112 0026 01       		.byte	0x1
 1113 0027 06       		.byte	0x6
 1114 0028 2C010000 		.4byte	.LASF0
 1115 002c 02       		.uleb128 0x2
 1116 002d 01       		.byte	0x1
 1117 002e 08       		.byte	0x8
 1118 002f 8F030000 		.4byte	.LASF1
 1119 0033 02       		.uleb128 0x2
 1120 0034 02       		.byte	0x2
 1121 0035 05       		.byte	0x5
 1122 0036 CC030000 		.4byte	.LASF2
 1123 003a 02       		.uleb128 0x2
 1124 003b 02       		.byte	0x2
 1125 003c 07       		.byte	0x7
 1126 003d 19020000 		.4byte	.LASF3
 1127 0041 02       		.uleb128 0x2
 1128 0042 04       		.byte	0x4
 1129 0043 05       		.byte	0x5
 1130 0044 60010000 		.4byte	.LASF4
 1131 0048 02       		.uleb128 0x2
 1132 0049 04       		.byte	0x4
 1133 004a 07       		.byte	0x7
 1134 004b F4010000 		.4byte	.LASF5
 1135 004f 02       		.uleb128 0x2
 1136 0050 08       		.byte	0x8
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 49


 1137 0051 05       		.byte	0x5
 1138 0052 1E010000 		.4byte	.LASF6
 1139 0056 02       		.uleb128 0x2
 1140 0057 08       		.byte	0x8
 1141 0058 07       		.byte	0x7
 1142 0059 F6000000 		.4byte	.LASF7
 1143 005d 03       		.uleb128 0x3
 1144 005e 04       		.byte	0x4
 1145 005f 05       		.byte	0x5
 1146 0060 696E7400 		.ascii	"int\000"
 1147 0064 02       		.uleb128 0x2
 1148 0065 04       		.byte	0x4
 1149 0066 07       		.byte	0x7
 1150 0067 D3010000 		.4byte	.LASF8
 1151 006b 04       		.uleb128 0x4
 1152 006c 69010000 		.4byte	.LASF9
 1153 0070 02       		.byte	0x2
 1154 0071 E401     		.2byte	0x1e4
 1155 0073 2C000000 		.4byte	0x2c
 1156 0077 04       		.uleb128 0x4
 1157 0078 13000000 		.4byte	.LASF10
 1158 007c 02       		.byte	0x2
 1159 007d E501     		.2byte	0x1e5
 1160 007f 3A000000 		.4byte	0x3a
 1161 0083 02       		.uleb128 0x2
 1162 0084 04       		.byte	0x4
 1163 0085 04       		.byte	0x4
 1164 0086 5A030000 		.4byte	.LASF11
 1165 008a 02       		.uleb128 0x2
 1166 008b 08       		.byte	0x8
 1167 008c 04       		.byte	0x4
 1168 008d 6F010000 		.4byte	.LASF12
 1169 0091 04       		.uleb128 0x4
 1170 0092 44040000 		.4byte	.LASF13
 1171 0096 02       		.byte	0x2
 1172 0097 F501     		.2byte	0x1f5
 1173 0099 9D000000 		.4byte	0x9d
 1174 009d 02       		.uleb128 0x2
 1175 009e 01       		.byte	0x1
 1176 009f 08       		.byte	0x8
 1177 00a0 3F040000 		.4byte	.LASF14
 1178 00a4 04       		.uleb128 0x4
 1179 00a5 7E030000 		.4byte	.LASF15
 1180 00a9 02       		.byte	0x2
 1181 00aa 8E02     		.2byte	0x28e
 1182 00ac B0000000 		.4byte	0xb0
 1183 00b0 05       		.uleb128 0x5
 1184 00b1 6B000000 		.4byte	0x6b
 1185 00b5 02       		.uleb128 0x2
 1186 00b6 08       		.byte	0x8
 1187 00b7 04       		.byte	0x4
 1188 00b8 2B030000 		.4byte	.LASF16
 1189 00bc 02       		.uleb128 0x2
 1190 00bd 04       		.byte	0x4
 1191 00be 07       		.byte	0x7
 1192 00bf 22030000 		.4byte	.LASF17
 1193 00c3 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 50


 1194 00c4 C0010000 		.4byte	.LASF67
 1195 00c8 01       		.byte	0x1
 1196 00c9 6A       		.byte	0x6a
 1197 00ca 00000000 		.4byte	.LFB1
 1198 00ce 34000000 		.4byte	.LFE1-.LFB1
 1199 00d2 01       		.uleb128 0x1
 1200 00d3 9C       		.byte	0x9c
 1201 00d4 07       		.uleb128 0x7
 1202 00d5 75040000 		.4byte	.LASF18
 1203 00d9 01       		.byte	0x1
 1204 00da B7       		.byte	0xb7
 1205 00db 00000000 		.4byte	.LFB2
 1206 00df 44000000 		.4byte	.LFE2-.LFB2
 1207 00e3 01       		.uleb128 0x1
 1208 00e4 9C       		.byte	0x9c
 1209 00e5 1B010000 		.4byte	0x11b
 1210 00e9 08       		.uleb128 0x8
 1211 00ea 0D010000 		.4byte	.LASF21
 1212 00ee 01       		.byte	0x1
 1213 00ef B9       		.byte	0xb9
 1214 00f0 6B000000 		.4byte	0x6b
 1215 00f4 00000000 		.4byte	.LLST0
 1216 00f8 09       		.uleb128 0x9
 1217 00f9 06000000 		.4byte	.LVL0
 1218 00fd DD050000 		.4byte	0x5dd
 1219 0101 09       		.uleb128 0x9
 1220 0102 2E000000 		.4byte	.LVL2
 1221 0106 E8050000 		.4byte	0x5e8
 1222 010a 0A       		.uleb128 0xa
 1223 010b 34000000 		.4byte	.LVL3
 1224 010f F3050000 		.4byte	0x5f3
 1225 0113 0B       		.uleb128 0xb
 1226 0114 01       		.uleb128 0x1
 1227 0115 50       		.byte	0x50
 1228 0116 02       		.uleb128 0x2
 1229 0117 74       		.byte	0x74
 1230 0118 00       		.sleb128 0
 1231 0119 00       		.byte	0
 1232 011a 00       		.byte	0
 1233 011b 07       		.uleb128 0x7
 1234 011c 83030000 		.4byte	.LASF19
 1235 0120 01       		.byte	0x1
 1236 0121 4C       		.byte	0x4c
 1237 0122 00000000 		.4byte	.LFB0
 1238 0126 20000000 		.4byte	.LFE0-.LFB0
 1239 012a 01       		.uleb128 0x1
 1240 012b 9C       		.byte	0x9c
 1241 012c 43010000 		.4byte	0x143
 1242 0130 09       		.uleb128 0x9
 1243 0131 0E000000 		.4byte	.LVL5
 1244 0135 C3000000 		.4byte	0xc3
 1245 0139 09       		.uleb128 0x9
 1246 013a 18000000 		.4byte	.LVL6
 1247 013e D4000000 		.4byte	0xd4
 1248 0142 00       		.byte	0
 1249 0143 07       		.uleb128 0x7
 1250 0144 89040000 		.4byte	.LASF20
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 51


 1251 0148 01       		.byte	0x1
 1252 0149 F0       		.byte	0xf0
 1253 014a 00000000 		.4byte	.LFB3
 1254 014e 3C000000 		.4byte	.LFE3-.LFB3
 1255 0152 01       		.uleb128 0x1
 1256 0153 9C       		.byte	0x9c
 1257 0154 8A010000 		.4byte	0x18a
 1258 0158 08       		.uleb128 0x8
 1259 0159 0D010000 		.4byte	.LASF21
 1260 015d 01       		.byte	0x1
 1261 015e F2       		.byte	0xf2
 1262 015f 6B000000 		.4byte	0x6b
 1263 0163 13000000 		.4byte	.LLST1
 1264 0167 09       		.uleb128 0x9
 1265 0168 06000000 		.4byte	.LVL7
 1266 016c DD050000 		.4byte	0x5dd
 1267 0170 09       		.uleb128 0x9
 1268 0171 16000000 		.4byte	.LVL9
 1269 0175 FE050000 		.4byte	0x5fe
 1270 0179 0A       		.uleb128 0xa
 1271 017a 2E000000 		.4byte	.LVL10
 1272 017e F3050000 		.4byte	0x5f3
 1273 0182 0B       		.uleb128 0xb
 1274 0183 01       		.uleb128 0x1
 1275 0184 50       		.byte	0x50
 1276 0185 02       		.uleb128 0x2
 1277 0186 74       		.byte	0x74
 1278 0187 00       		.sleb128 0
 1279 0188 00       		.byte	0
 1280 0189 00       		.byte	0
 1281 018a 0C       		.uleb128 0xc
 1282 018b 37030000 		.4byte	.LASF44
 1283 018f 01       		.byte	0x1
 1284 0190 2701     		.2byte	0x127
 1285 0192 6B000000 		.4byte	0x6b
 1286 0196 00000000 		.4byte	.LFB4
 1287 019a 04000000 		.4byte	.LFE4-.LFB4
 1288 019e 01       		.uleb128 0x1
 1289 019f 9C       		.byte	0x9c
 1290 01a0 0D       		.uleb128 0xd
 1291 01a1 4A040000 		.4byte	.LASF22
 1292 01a5 01       		.byte	0x1
 1293 01a6 3F01     		.2byte	0x13f
 1294 01a8 00000000 		.4byte	.LFB5
 1295 01ac 02000000 		.4byte	.LFE5-.LFB5
 1296 01b0 01       		.uleb128 0x1
 1297 01b1 9C       		.byte	0x9c
 1298 01b2 C5010000 		.4byte	0x1c5
 1299 01b6 0E       		.uleb128 0xe
 1300 01b7 99010000 		.4byte	.LASF24
 1301 01bb 01       		.byte	0x1
 1302 01bc 3F01     		.2byte	0x13f
 1303 01be 6B000000 		.4byte	0x6b
 1304 01c2 01       		.uleb128 0x1
 1305 01c3 50       		.byte	0x50
 1306 01c4 00       		.byte	0
 1307 01c5 0D       		.uleb128 0xd
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 52


 1308 01c6 9D030000 		.4byte	.LASF23
 1309 01ca 01       		.byte	0x1
 1310 01cb 6701     		.2byte	0x167
 1311 01cd 00000000 		.4byte	.LFB6
 1312 01d1 0C000000 		.4byte	.LFE6-.LFB6
 1313 01d5 01       		.uleb128 0x1
 1314 01d6 9C       		.byte	0x9c
 1315 01d7 EA010000 		.4byte	0x1ea
 1316 01db 0E       		.uleb128 0xe
 1317 01dc D7020000 		.4byte	.LASF25
 1318 01e0 01       		.byte	0x1
 1319 01e1 6701     		.2byte	0x167
 1320 01e3 6B000000 		.4byte	0x6b
 1321 01e7 01       		.uleb128 0x1
 1322 01e8 50       		.byte	0x50
 1323 01e9 00       		.byte	0
 1324 01ea 0F       		.uleb128 0xf
 1325 01eb AF010000 		.4byte	.LASF27
 1326 01ef 01       		.byte	0x1
 1327 01f0 8801     		.2byte	0x188
 1328 01f2 6B000000 		.4byte	0x6b
 1329 01f6 00000000 		.4byte	.LFB7
 1330 01fa 0C000000 		.4byte	.LFE7-.LFB7
 1331 01fe 01       		.uleb128 0x1
 1332 01ff 9C       		.byte	0x9c
 1333 0200 13020000 		.4byte	0x213
 1334 0204 10       		.uleb128 0x10
 1335 0205 1C040000 		.4byte	.LASF26
 1336 0209 01       		.byte	0x1
 1337 020a 8A01     		.2byte	0x18a
 1338 020c 6B000000 		.4byte	0x6b
 1339 0210 01       		.uleb128 0x1
 1340 0211 50       		.byte	0x50
 1341 0212 00       		.byte	0
 1342 0213 0F       		.uleb128 0xf
 1343 0214 00000000 		.4byte	.LASF28
 1344 0218 01       		.byte	0x1
 1345 0219 E501     		.2byte	0x1e5
 1346 021b 6B000000 		.4byte	0x6b
 1347 021f 00000000 		.4byte	.LFB8
 1348 0223 10000000 		.4byte	.LFE8-.LFB8
 1349 0227 01       		.uleb128 0x1
 1350 0228 9C       		.byte	0x9c
 1351 0229 3C020000 		.4byte	0x23c
 1352 022d 10       		.uleb128 0x10
 1353 022e 82040000 		.4byte	.LASF29
 1354 0232 01       		.byte	0x1
 1355 0233 E701     		.2byte	0x1e7
 1356 0235 6B000000 		.4byte	0x6b
 1357 0239 01       		.uleb128 0x1
 1358 023a 50       		.byte	0x50
 1359 023b 00       		.byte	0
 1360 023c 0F       		.uleb128 0xf
 1361 023d 06020000 		.4byte	.LASF30
 1362 0241 01       		.byte	0x1
 1363 0242 1402     		.2byte	0x214
 1364 0244 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 53


 1365 0248 00000000 		.4byte	.LFB9
 1366 024c 28000000 		.4byte	.LFE9-.LFB9
 1367 0250 01       		.uleb128 0x1
 1368 0251 9C       		.byte	0x9c
 1369 0252 75020000 		.4byte	0x275
 1370 0256 11       		.uleb128 0x11
 1371 0257 1C040000 		.4byte	.LASF26
 1372 025b 01       		.byte	0x1
 1373 025c 1602     		.2byte	0x216
 1374 025e 6B000000 		.4byte	0x6b
 1375 0262 26000000 		.4byte	.LLST2
 1376 0266 10       		.uleb128 0x10
 1377 0267 51030000 		.4byte	.LASF31
 1378 026b 01       		.byte	0x1
 1379 026c 1702     		.2byte	0x217
 1380 026e 6B000000 		.4byte	0x6b
 1381 0272 01       		.uleb128 0x1
 1382 0273 53       		.byte	0x53
 1383 0274 00       		.byte	0
 1384 0275 0F       		.uleb128 0xf
 1385 0276 23040000 		.4byte	.LASF32
 1386 027a 01       		.byte	0x1
 1387 027b 7A02     		.2byte	0x27a
 1388 027d 77000000 		.4byte	0x77
 1389 0281 00000000 		.4byte	.LFB10
 1390 0285 12000000 		.4byte	.LFE10-.LFB10
 1391 0289 01       		.uleb128 0x1
 1392 028a 9C       		.byte	0x9c
 1393 028b A2020000 		.4byte	0x2a2
 1394 028f 09       		.uleb128 0x9
 1395 0290 06000000 		.4byte	.LVL22
 1396 0294 13020000 		.4byte	0x213
 1397 0298 09       		.uleb128 0x9
 1398 0299 0C000000 		.4byte	.LVL23
 1399 029d EA010000 		.4byte	0x1ea
 1400 02a1 00       		.byte	0
 1401 02a2 0F       		.uleb128 0xf
 1402 02a3 B6030000 		.4byte	.LASF33
 1403 02a7 01       		.byte	0x1
 1404 02a8 AB02     		.2byte	0x2ab
 1405 02aa 6B000000 		.4byte	0x6b
 1406 02ae 00000000 		.4byte	.LFB11
 1407 02b2 14000000 		.4byte	.LFE11-.LFB11
 1408 02b6 01       		.uleb128 0x1
 1409 02b7 9C       		.byte	0x9c
 1410 02b8 CB020000 		.4byte	0x2cb
 1411 02bc 10       		.uleb128 0x10
 1412 02bd 14020000 		.4byte	.LASF34
 1413 02c1 01       		.byte	0x1
 1414 02c2 AE02     		.2byte	0x2ae
 1415 02c4 6B000000 		.4byte	0x6b
 1416 02c8 01       		.uleb128 0x1
 1417 02c9 50       		.byte	0x50
 1418 02ca 00       		.byte	0
 1419 02cb 0D       		.uleb128 0xd
 1420 02cc E0010000 		.4byte	.LASF35
 1421 02d0 01       		.byte	0x1
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 54


 1422 02d1 F502     		.2byte	0x2f5
 1423 02d3 00000000 		.4byte	.LFB12
 1424 02d7 24000000 		.4byte	.LFE12-.LFB12
 1425 02db 01       		.uleb128 0x1
 1426 02dc 9C       		.byte	0x9c
 1427 02dd 04030000 		.4byte	0x304
 1428 02e1 11       		.uleb128 0x11
 1429 02e2 0D010000 		.4byte	.LASF21
 1430 02e6 01       		.byte	0x1
 1431 02e7 F702     		.2byte	0x2f7
 1432 02e9 6B000000 		.4byte	0x6b
 1433 02ed 5C000000 		.4byte	.LLST3
 1434 02f1 09       		.uleb128 0x9
 1435 02f2 06000000 		.4byte	.LVL25
 1436 02f6 DD050000 		.4byte	0x5dd
 1437 02fa 09       		.uleb128 0x9
 1438 02fb 1E000000 		.4byte	.LVL26
 1439 02ff F3050000 		.4byte	0x5f3
 1440 0303 00       		.byte	0
 1441 0304 0D       		.uleb128 0xd
 1442 0305 82010000 		.4byte	.LASF36
 1443 0309 01       		.byte	0x1
 1444 030a 2D03     		.2byte	0x32d
 1445 030c 00000000 		.4byte	.LFB13
 1446 0310 02000000 		.4byte	.LFE13-.LFB13
 1447 0314 01       		.uleb128 0x1
 1448 0315 9C       		.byte	0x9c
 1449 0316 29030000 		.4byte	0x329
 1450 031a 0E       		.uleb128 0xe
 1451 031b 76010000 		.4byte	.LASF37
 1452 031f 01       		.byte	0x1
 1453 0320 2D03     		.2byte	0x32d
 1454 0322 6B000000 		.4byte	0x6b
 1455 0326 01       		.uleb128 0x1
 1456 0327 50       		.byte	0x50
 1457 0328 00       		.byte	0
 1458 0329 0D       		.uleb128 0xd
 1459 032a D6030000 		.4byte	.LASF38
 1460 032e 01       		.byte	0x1
 1461 032f 5903     		.2byte	0x359
 1462 0331 00000000 		.4byte	.LFB14
 1463 0335 0C000000 		.4byte	.LFE14-.LFB14
 1464 0339 01       		.uleb128 0x1
 1465 033a 9C       		.byte	0x9c
 1466 033b 4E030000 		.4byte	0x34e
 1467 033f 0E       		.uleb128 0xe
 1468 0340 94040000 		.4byte	.LASF39
 1469 0344 01       		.byte	0x1
 1470 0345 5903     		.2byte	0x359
 1471 0347 6B000000 		.4byte	0x6b
 1472 034b 01       		.uleb128 0x1
 1473 034c 50       		.byte	0x50
 1474 034d 00       		.byte	0
 1475 034e 0D       		.uleb128 0xd
 1476 034f EA030000 		.4byte	.LASF40
 1477 0353 01       		.byte	0x1
 1478 0354 6D03     		.2byte	0x36d
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 55


 1479 0356 00000000 		.4byte	.LFB15
 1480 035a 0C000000 		.4byte	.LFE15-.LFB15
 1481 035e 01       		.uleb128 0x1
 1482 035f 9C       		.byte	0x9c
 1483 0360 73030000 		.4byte	0x373
 1484 0364 0E       		.uleb128 0xe
 1485 0365 94040000 		.4byte	.LASF39
 1486 0369 01       		.byte	0x1
 1487 036a 6D03     		.2byte	0x36d
 1488 036c 6B000000 		.4byte	0x6b
 1489 0370 01       		.uleb128 0x1
 1490 0371 50       		.byte	0x50
 1491 0372 00       		.byte	0
 1492 0373 0D       		.uleb128 0xd
 1493 0374 9C040000 		.4byte	.LASF41
 1494 0378 01       		.byte	0x1
 1495 0379 8C03     		.2byte	0x38c
 1496 037b 00000000 		.4byte	.LFB16
 1497 037f 0C000000 		.4byte	.LFE16-.LFB16
 1498 0383 01       		.uleb128 0x1
 1499 0384 9C       		.byte	0x9c
 1500 0385 98030000 		.4byte	0x398
 1501 0389 0E       		.uleb128 0xe
 1502 038a D7020000 		.4byte	.LASF25
 1503 038e 01       		.byte	0x1
 1504 038f 8C03     		.2byte	0x38c
 1505 0391 6B000000 		.4byte	0x6b
 1506 0395 01       		.uleb128 0x1
 1507 0396 50       		.byte	0x50
 1508 0397 00       		.byte	0
 1509 0398 0D       		.uleb128 0xd
 1510 0399 F4020000 		.4byte	.LASF42
 1511 039d 01       		.byte	0x1
 1512 039e AE03     		.2byte	0x3ae
 1513 03a0 00000000 		.4byte	.LFB17
 1514 03a4 18000000 		.4byte	.LFE17-.LFB17
 1515 03a8 01       		.uleb128 0x1
 1516 03a9 9C       		.byte	0x9c
 1517 03aa BD030000 		.4byte	0x3bd
 1518 03ae 0E       		.uleb128 0xe
 1519 03af 30000000 		.4byte	.LASF43
 1520 03b3 01       		.byte	0x1
 1521 03b4 AE03     		.2byte	0x3ae
 1522 03b6 6B000000 		.4byte	0x6b
 1523 03ba 01       		.uleb128 0x1
 1524 03bb 50       		.byte	0x50
 1525 03bc 00       		.byte	0
 1526 03bd 0C       		.uleb128 0xc
 1527 03be A4020000 		.4byte	.LASF45
 1528 03c2 01       		.byte	0x1
 1529 03c3 EB03     		.2byte	0x3eb
 1530 03c5 6B000000 		.4byte	0x6b
 1531 03c9 00000000 		.4byte	.LFB18
 1532 03cd 0C000000 		.4byte	.LFE18-.LFB18
 1533 03d1 01       		.uleb128 0x1
 1534 03d2 9C       		.byte	0x9c
 1535 03d3 0D       		.uleb128 0xd
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 56


 1536 03d4 60030000 		.4byte	.LASF46
 1537 03d8 01       		.byte	0x1
 1538 03d9 1104     		.2byte	0x411
 1539 03db 00000000 		.4byte	.LFB19
 1540 03df 18000000 		.4byte	.LFE19-.LFB19
 1541 03e3 01       		.uleb128 0x1
 1542 03e4 9C       		.byte	0x9c
 1543 03e5 F8030000 		.4byte	0x3f8
 1544 03e9 0E       		.uleb128 0xe
 1545 03ea 30000000 		.4byte	.LASF43
 1546 03ee 01       		.byte	0x1
 1547 03ef 1104     		.2byte	0x411
 1548 03f1 6B000000 		.4byte	0x6b
 1549 03f5 01       		.uleb128 0x1
 1550 03f6 50       		.byte	0x50
 1551 03f7 00       		.byte	0
 1552 03f8 0D       		.uleb128 0xd
 1553 03f9 65040000 		.4byte	.LASF47
 1554 03fd 01       		.byte	0x1
 1555 03fe 7904     		.2byte	0x479
 1556 0400 00000000 		.4byte	.LFB20
 1557 0404 28000000 		.4byte	.LFE20-.LFB20
 1558 0408 01       		.uleb128 0x1
 1559 0409 9C       		.byte	0x9c
 1560 040a 38040000 		.4byte	0x438
 1561 040e 12       		.uleb128 0x12
 1562 040f 4A000000 		.4byte	.LASF48
 1563 0413 01       		.byte	0x1
 1564 0414 7904     		.2byte	0x479
 1565 0416 38040000 		.4byte	0x438
 1566 041a 6F000000 		.4byte	.LLST4
 1567 041e 11       		.uleb128 0x11
 1568 041f B7020000 		.4byte	.LASF49
 1569 0423 01       		.byte	0x1
 1570 0424 7B04     		.2byte	0x47b
 1571 0426 77000000 		.4byte	0x77
 1572 042a B1000000 		.4byte	.LLST5
 1573 042e 09       		.uleb128 0x9
 1574 042f 12000000 		.4byte	.LVL36
 1575 0433 D3030000 		.4byte	0x3d3
 1576 0437 00       		.byte	0
 1577 0438 13       		.uleb128 0x13
 1578 0439 04       		.byte	0x4
 1579 043a 3E040000 		.4byte	0x43e
 1580 043e 14       		.uleb128 0x14
 1581 043f 91000000 		.4byte	0x91
 1582 0443 0D       		.uleb128 0xd
 1583 0444 3B000000 		.4byte	.LASF50
 1584 0448 01       		.byte	0x1
 1585 0449 A704     		.2byte	0x4a7
 1586 044b 00000000 		.4byte	.LFB21
 1587 044f 28000000 		.4byte	.LFE21-.LFB21
 1588 0453 01       		.uleb128 0x1
 1589 0454 9C       		.byte	0x9c
 1590 0455 93040000 		.4byte	0x493
 1591 0459 12       		.uleb128 0x12
 1592 045a 4A000000 		.4byte	.LASF48
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 57


 1593 045e 01       		.byte	0x1
 1594 045f A704     		.2byte	0x4a7
 1595 0461 93040000 		.4byte	0x493
 1596 0465 F2000000 		.4byte	.LLST6
 1597 0469 12       		.uleb128 0x12
 1598 046a FE030000 		.4byte	.LASF51
 1599 046e 01       		.byte	0x1
 1600 046f A704     		.2byte	0x4a7
 1601 0471 6B000000 		.4byte	0x6b
 1602 0475 34010000 		.4byte	.LLST7
 1603 0479 11       		.uleb128 0x11
 1604 047a B7020000 		.4byte	.LASF49
 1605 047e 01       		.byte	0x1
 1606 047f AA04     		.2byte	0x4aa
 1607 0481 6B000000 		.4byte	0x6b
 1608 0485 6E010000 		.4byte	.LLST8
 1609 0489 09       		.uleb128 0x9
 1610 048a 16000000 		.4byte	.LVL46
 1611 048e D3030000 		.4byte	0x3d3
 1612 0492 00       		.byte	0
 1613 0493 13       		.uleb128 0x13
 1614 0494 04       		.byte	0x4
 1615 0495 99040000 		.4byte	0x499
 1616 0499 14       		.uleb128 0x14
 1617 049a 6B000000 		.4byte	0x6b
 1618 049e 0D       		.uleb128 0xd
 1619 049f 31040000 		.4byte	.LASF52
 1620 04a3 01       		.byte	0x1
 1621 04a4 CE04     		.2byte	0x4ce
 1622 04a6 00000000 		.4byte	.LFB22
 1623 04aa 20000000 		.4byte	.LFE22-.LFB22
 1624 04ae 01       		.uleb128 0x1
 1625 04af 9C       		.byte	0x9c
 1626 04b0 F0040000 		.4byte	0x4f0
 1627 04b4 12       		.uleb128 0x12
 1628 04b5 30000000 		.4byte	.LASF43
 1629 04b9 01       		.byte	0x1
 1630 04ba CE04     		.2byte	0x4ce
 1631 04bc 6B000000 		.4byte	0x6b
 1632 04c0 AF010000 		.4byte	.LLST9
 1633 04c4 09       		.uleb128 0x9
 1634 04c5 0E000000 		.4byte	.LVL54
 1635 04c9 D3030000 		.4byte	0x3d3
 1636 04cd 15       		.uleb128 0x15
 1637 04ce 14000000 		.4byte	.LVL55
 1638 04d2 D3030000 		.4byte	0x3d3
 1639 04d6 E0040000 		.4byte	0x4e0
 1640 04da 0B       		.uleb128 0xb
 1641 04db 01       		.uleb128 0x1
 1642 04dc 50       		.byte	0x50
 1643 04dd 01       		.uleb128 0x1
 1644 04de 3D       		.byte	0x3d
 1645 04df 00       		.byte	0
 1646 04e0 0A       		.uleb128 0xa
 1647 04e1 1A000000 		.4byte	.LVL56
 1648 04e5 D3030000 		.4byte	0x3d3
 1649 04e9 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 58


 1650 04ea 01       		.uleb128 0x1
 1651 04eb 50       		.byte	0x50
 1652 04ec 01       		.uleb128 0x1
 1653 04ed 3A       		.byte	0x3a
 1654 04ee 00       		.byte	0
 1655 04ef 00       		.byte	0
 1656 04f0 0F       		.uleb128 0xf
 1657 04f1 DE020000 		.4byte	.LASF53
 1658 04f5 01       		.byte	0x1
 1659 04f6 F904     		.2byte	0x4f9
 1660 04f8 6B000000 		.4byte	0x6b
 1661 04fc 00000000 		.4byte	.LFB23
 1662 0500 20000000 		.4byte	.LFE23-.LFB23
 1663 0504 01       		.uleb128 0x1
 1664 0505 9C       		.byte	0x9c
 1665 0506 1B050000 		.4byte	0x51b
 1666 050a 11       		.uleb128 0x11
 1667 050b 14020000 		.4byte	.LASF34
 1668 050f 01       		.byte	0x1
 1669 0510 FC04     		.2byte	0x4fc
 1670 0512 6B000000 		.4byte	0x6b
 1671 0516 D0010000 		.4byte	.LLST10
 1672 051a 00       		.byte	0
 1673 051b 0D       		.uleb128 0xd
 1674 051c 0E030000 		.4byte	.LASF54
 1675 0520 01       		.byte	0x1
 1676 0521 4A05     		.2byte	0x54a
 1677 0523 00000000 		.4byte	.LFB24
 1678 0527 24000000 		.4byte	.LFE24-.LFB24
 1679 052b 01       		.uleb128 0x1
 1680 052c 9C       		.byte	0x9c
 1681 052d 54050000 		.4byte	0x554
 1682 0531 11       		.uleb128 0x11
 1683 0532 0D010000 		.4byte	.LASF21
 1684 0536 01       		.byte	0x1
 1685 0537 4C05     		.2byte	0x54c
 1686 0539 6B000000 		.4byte	0x6b
 1687 053d F9010000 		.4byte	.LLST11
 1688 0541 09       		.uleb128 0x9
 1689 0542 06000000 		.4byte	.LVL62
 1690 0546 DD050000 		.4byte	0x5dd
 1691 054a 09       		.uleb128 0x9
 1692 054b 1E000000 		.4byte	.LVL63
 1693 054f F3050000 		.4byte	0x5f3
 1694 0553 00       		.byte	0
 1695 0554 0D       		.uleb128 0xd
 1696 0555 6E030000 		.4byte	.LASF55
 1697 0559 01       		.byte	0x1
 1698 055a A005     		.2byte	0x5a0
 1699 055c 00000000 		.4byte	.LFB25
 1700 0560 60000000 		.4byte	.LFE25-.LFB25
 1701 0564 01       		.uleb128 0x1
 1702 0565 9C       		.byte	0x9c
 1703 0566 A7050000 		.4byte	0x5a7
 1704 056a 12       		.uleb128 0x12
 1705 056b CB010000 		.4byte	.LASF56
 1706 056f 01       		.byte	0x1
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 59


 1707 0570 A005     		.2byte	0x5a0
 1708 0572 6B000000 		.4byte	0x6b
 1709 0576 0C020000 		.4byte	.LLST12
 1710 057a 16       		.uleb128 0x16
 1711 057b 08000000 		.4byte	.LBB2
 1712 057f 44000000 		.4byte	.LBE2-.LBB2
 1713 0583 11       		.uleb128 0x11
 1714 0584 06030000 		.4byte	.LASF57
 1715 0588 01       		.byte	0x1
 1716 0589 A805     		.2byte	0x5a8
 1717 058b 6B000000 		.4byte	0x6b
 1718 058f 2D020000 		.4byte	.LLST13
 1719 0593 10       		.uleb128 0x10
 1720 0594 38010000 		.4byte	.LASF58
 1721 0598 01       		.byte	0x1
 1722 0599 D005     		.2byte	0x5d0
 1723 059b 6B000000 		.4byte	0x6b
 1724 059f 05       		.uleb128 0x5
 1725 05a0 03       		.byte	0x3
 1726 05a1 01000000 		.4byte	txPeriod.4983
 1727 05a5 00       		.byte	0
 1728 05a6 00       		.byte	0
 1729 05a7 0D       		.uleb128 0xd
 1730 05a8 51000000 		.4byte	.LASF59
 1731 05ac 01       		.byte	0x1
 1732 05ad 2406     		.2byte	0x624
 1733 05af 00000000 		.4byte	.LFB26
 1734 05b3 02000000 		.4byte	.LFE26-.LFB26
 1735 05b7 01       		.uleb128 0x1
 1736 05b8 9C       		.byte	0x9c
 1737 05b9 CC050000 		.4byte	0x5cc
 1738 05bd 0E       		.uleb128 0xe
 1739 05be 76010000 		.4byte	.LASF37
 1740 05c2 01       		.byte	0x1
 1741 05c3 2406     		.2byte	0x624
 1742 05c5 6B000000 		.4byte	0x6b
 1743 05c9 01       		.uleb128 0x1
 1744 05ca 50       		.byte	0x50
 1745 05cb 00       		.byte	0
 1746 05cc 17       		.uleb128 0x17
 1747 05cd A1010000 		.4byte	.LASF68
 1748 05d1 01       		.byte	0x1
 1749 05d2 1B       		.byte	0x1b
 1750 05d3 6B000000 		.4byte	0x6b
 1751 05d7 05       		.uleb128 0x5
 1752 05d8 03       		.byte	0x3
 1753 05d9 00000000 		.4byte	RS485_initVar
 1754 05dd 18       		.uleb128 0x18
 1755 05de C0020000 		.4byte	.LASF60
 1756 05e2 C0020000 		.4byte	.LASF60
 1757 05e6 03       		.byte	0x3
 1758 05e7 E5       		.byte	0xe5
 1759 05e8 18       		.uleb128 0x18
 1760 05e9 B5040000 		.4byte	.LASF61
 1761 05ed B5040000 		.4byte	.LASF61
 1762 05f1 04       		.byte	0x4
 1763 05f2 23       		.byte	0x23
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 60


 1764 05f3 18       		.uleb128 0x18
 1765 05f4 1A000000 		.4byte	.LASF62
 1766 05f8 1A000000 		.4byte	.LASF62
 1767 05fc 03       		.byte	0x3
 1768 05fd E6       		.byte	0xe6
 1769 05fe 18       		.uleb128 0x18
 1770 05ff 08040000 		.4byte	.LASF63
 1771 0603 08040000 		.4byte	.LASF63
 1772 0607 04       		.byte	0x4
 1773 0608 27       		.byte	0x27
 1774 0609 00       		.byte	0
 1775              		.section	.debug_abbrev,"",%progbits
 1776              	.Ldebug_abbrev0:
 1777 0000 01       		.uleb128 0x1
 1778 0001 11       		.uleb128 0x11
 1779 0002 01       		.byte	0x1
 1780 0003 25       		.uleb128 0x25
 1781 0004 0E       		.uleb128 0xe
 1782 0005 13       		.uleb128 0x13
 1783 0006 0B       		.uleb128 0xb
 1784 0007 03       		.uleb128 0x3
 1785 0008 0E       		.uleb128 0xe
 1786 0009 1B       		.uleb128 0x1b
 1787 000a 0E       		.uleb128 0xe
 1788 000b 55       		.uleb128 0x55
 1789 000c 17       		.uleb128 0x17
 1790 000d 11       		.uleb128 0x11
 1791 000e 01       		.uleb128 0x1
 1792 000f 10       		.uleb128 0x10
 1793 0010 17       		.uleb128 0x17
 1794 0011 00       		.byte	0
 1795 0012 00       		.byte	0
 1796 0013 02       		.uleb128 0x2
 1797 0014 24       		.uleb128 0x24
 1798 0015 00       		.byte	0
 1799 0016 0B       		.uleb128 0xb
 1800 0017 0B       		.uleb128 0xb
 1801 0018 3E       		.uleb128 0x3e
 1802 0019 0B       		.uleb128 0xb
 1803 001a 03       		.uleb128 0x3
 1804 001b 0E       		.uleb128 0xe
 1805 001c 00       		.byte	0
 1806 001d 00       		.byte	0
 1807 001e 03       		.uleb128 0x3
 1808 001f 24       		.uleb128 0x24
 1809 0020 00       		.byte	0
 1810 0021 0B       		.uleb128 0xb
 1811 0022 0B       		.uleb128 0xb
 1812 0023 3E       		.uleb128 0x3e
 1813 0024 0B       		.uleb128 0xb
 1814 0025 03       		.uleb128 0x3
 1815 0026 08       		.uleb128 0x8
 1816 0027 00       		.byte	0
 1817 0028 00       		.byte	0
 1818 0029 04       		.uleb128 0x4
 1819 002a 16       		.uleb128 0x16
 1820 002b 00       		.byte	0
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 61


 1821 002c 03       		.uleb128 0x3
 1822 002d 0E       		.uleb128 0xe
 1823 002e 3A       		.uleb128 0x3a
 1824 002f 0B       		.uleb128 0xb
 1825 0030 3B       		.uleb128 0x3b
 1826 0031 05       		.uleb128 0x5
 1827 0032 49       		.uleb128 0x49
 1828 0033 13       		.uleb128 0x13
 1829 0034 00       		.byte	0
 1830 0035 00       		.byte	0
 1831 0036 05       		.uleb128 0x5
 1832 0037 35       		.uleb128 0x35
 1833 0038 00       		.byte	0
 1834 0039 49       		.uleb128 0x49
 1835 003a 13       		.uleb128 0x13
 1836 003b 00       		.byte	0
 1837 003c 00       		.byte	0
 1838 003d 06       		.uleb128 0x6
 1839 003e 2E       		.uleb128 0x2e
 1840 003f 00       		.byte	0
 1841 0040 3F       		.uleb128 0x3f
 1842 0041 19       		.uleb128 0x19
 1843 0042 03       		.uleb128 0x3
 1844 0043 0E       		.uleb128 0xe
 1845 0044 3A       		.uleb128 0x3a
 1846 0045 0B       		.uleb128 0xb
 1847 0046 3B       		.uleb128 0x3b
 1848 0047 0B       		.uleb128 0xb
 1849 0048 27       		.uleb128 0x27
 1850 0049 19       		.uleb128 0x19
 1851 004a 11       		.uleb128 0x11
 1852 004b 01       		.uleb128 0x1
 1853 004c 12       		.uleb128 0x12
 1854 004d 06       		.uleb128 0x6
 1855 004e 40       		.uleb128 0x40
 1856 004f 18       		.uleb128 0x18
 1857 0050 9742     		.uleb128 0x2117
 1858 0052 19       		.uleb128 0x19
 1859 0053 00       		.byte	0
 1860 0054 00       		.byte	0
 1861 0055 07       		.uleb128 0x7
 1862 0056 2E       		.uleb128 0x2e
 1863 0057 01       		.byte	0x1
 1864 0058 3F       		.uleb128 0x3f
 1865 0059 19       		.uleb128 0x19
 1866 005a 03       		.uleb128 0x3
 1867 005b 0E       		.uleb128 0xe
 1868 005c 3A       		.uleb128 0x3a
 1869 005d 0B       		.uleb128 0xb
 1870 005e 3B       		.uleb128 0x3b
 1871 005f 0B       		.uleb128 0xb
 1872 0060 27       		.uleb128 0x27
 1873 0061 19       		.uleb128 0x19
 1874 0062 11       		.uleb128 0x11
 1875 0063 01       		.uleb128 0x1
 1876 0064 12       		.uleb128 0x12
 1877 0065 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 62


 1878 0066 40       		.uleb128 0x40
 1879 0067 18       		.uleb128 0x18
 1880 0068 9742     		.uleb128 0x2117
 1881 006a 19       		.uleb128 0x19
 1882 006b 01       		.uleb128 0x1
 1883 006c 13       		.uleb128 0x13
 1884 006d 00       		.byte	0
 1885 006e 00       		.byte	0
 1886 006f 08       		.uleb128 0x8
 1887 0070 34       		.uleb128 0x34
 1888 0071 00       		.byte	0
 1889 0072 03       		.uleb128 0x3
 1890 0073 0E       		.uleb128 0xe
 1891 0074 3A       		.uleb128 0x3a
 1892 0075 0B       		.uleb128 0xb
 1893 0076 3B       		.uleb128 0x3b
 1894 0077 0B       		.uleb128 0xb
 1895 0078 49       		.uleb128 0x49
 1896 0079 13       		.uleb128 0x13
 1897 007a 02       		.uleb128 0x2
 1898 007b 17       		.uleb128 0x17
 1899 007c 00       		.byte	0
 1900 007d 00       		.byte	0
 1901 007e 09       		.uleb128 0x9
 1902 007f 898201   		.uleb128 0x4109
 1903 0082 00       		.byte	0
 1904 0083 11       		.uleb128 0x11
 1905 0084 01       		.uleb128 0x1
 1906 0085 31       		.uleb128 0x31
 1907 0086 13       		.uleb128 0x13
 1908 0087 00       		.byte	0
 1909 0088 00       		.byte	0
 1910 0089 0A       		.uleb128 0xa
 1911 008a 898201   		.uleb128 0x4109
 1912 008d 01       		.byte	0x1
 1913 008e 11       		.uleb128 0x11
 1914 008f 01       		.uleb128 0x1
 1915 0090 31       		.uleb128 0x31
 1916 0091 13       		.uleb128 0x13
 1917 0092 00       		.byte	0
 1918 0093 00       		.byte	0
 1919 0094 0B       		.uleb128 0xb
 1920 0095 8A8201   		.uleb128 0x410a
 1921 0098 00       		.byte	0
 1922 0099 02       		.uleb128 0x2
 1923 009a 18       		.uleb128 0x18
 1924 009b 9142     		.uleb128 0x2111
 1925 009d 18       		.uleb128 0x18
 1926 009e 00       		.byte	0
 1927 009f 00       		.byte	0
 1928 00a0 0C       		.uleb128 0xc
 1929 00a1 2E       		.uleb128 0x2e
 1930 00a2 00       		.byte	0
 1931 00a3 3F       		.uleb128 0x3f
 1932 00a4 19       		.uleb128 0x19
 1933 00a5 03       		.uleb128 0x3
 1934 00a6 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 63


 1935 00a7 3A       		.uleb128 0x3a
 1936 00a8 0B       		.uleb128 0xb
 1937 00a9 3B       		.uleb128 0x3b
 1938 00aa 05       		.uleb128 0x5
 1939 00ab 27       		.uleb128 0x27
 1940 00ac 19       		.uleb128 0x19
 1941 00ad 49       		.uleb128 0x49
 1942 00ae 13       		.uleb128 0x13
 1943 00af 11       		.uleb128 0x11
 1944 00b0 01       		.uleb128 0x1
 1945 00b1 12       		.uleb128 0x12
 1946 00b2 06       		.uleb128 0x6
 1947 00b3 40       		.uleb128 0x40
 1948 00b4 18       		.uleb128 0x18
 1949 00b5 9742     		.uleb128 0x2117
 1950 00b7 19       		.uleb128 0x19
 1951 00b8 00       		.byte	0
 1952 00b9 00       		.byte	0
 1953 00ba 0D       		.uleb128 0xd
 1954 00bb 2E       		.uleb128 0x2e
 1955 00bc 01       		.byte	0x1
 1956 00bd 3F       		.uleb128 0x3f
 1957 00be 19       		.uleb128 0x19
 1958 00bf 03       		.uleb128 0x3
 1959 00c0 0E       		.uleb128 0xe
 1960 00c1 3A       		.uleb128 0x3a
 1961 00c2 0B       		.uleb128 0xb
 1962 00c3 3B       		.uleb128 0x3b
 1963 00c4 05       		.uleb128 0x5
 1964 00c5 27       		.uleb128 0x27
 1965 00c6 19       		.uleb128 0x19
 1966 00c7 11       		.uleb128 0x11
 1967 00c8 01       		.uleb128 0x1
 1968 00c9 12       		.uleb128 0x12
 1969 00ca 06       		.uleb128 0x6
 1970 00cb 40       		.uleb128 0x40
 1971 00cc 18       		.uleb128 0x18
 1972 00cd 9742     		.uleb128 0x2117
 1973 00cf 19       		.uleb128 0x19
 1974 00d0 01       		.uleb128 0x1
 1975 00d1 13       		.uleb128 0x13
 1976 00d2 00       		.byte	0
 1977 00d3 00       		.byte	0
 1978 00d4 0E       		.uleb128 0xe
 1979 00d5 05       		.uleb128 0x5
 1980 00d6 00       		.byte	0
 1981 00d7 03       		.uleb128 0x3
 1982 00d8 0E       		.uleb128 0xe
 1983 00d9 3A       		.uleb128 0x3a
 1984 00da 0B       		.uleb128 0xb
 1985 00db 3B       		.uleb128 0x3b
 1986 00dc 05       		.uleb128 0x5
 1987 00dd 49       		.uleb128 0x49
 1988 00de 13       		.uleb128 0x13
 1989 00df 02       		.uleb128 0x2
 1990 00e0 18       		.uleb128 0x18
 1991 00e1 00       		.byte	0
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 64


 1992 00e2 00       		.byte	0
 1993 00e3 0F       		.uleb128 0xf
 1994 00e4 2E       		.uleb128 0x2e
 1995 00e5 01       		.byte	0x1
 1996 00e6 3F       		.uleb128 0x3f
 1997 00e7 19       		.uleb128 0x19
 1998 00e8 03       		.uleb128 0x3
 1999 00e9 0E       		.uleb128 0xe
 2000 00ea 3A       		.uleb128 0x3a
 2001 00eb 0B       		.uleb128 0xb
 2002 00ec 3B       		.uleb128 0x3b
 2003 00ed 05       		.uleb128 0x5
 2004 00ee 27       		.uleb128 0x27
 2005 00ef 19       		.uleb128 0x19
 2006 00f0 49       		.uleb128 0x49
 2007 00f1 13       		.uleb128 0x13
 2008 00f2 11       		.uleb128 0x11
 2009 00f3 01       		.uleb128 0x1
 2010 00f4 12       		.uleb128 0x12
 2011 00f5 06       		.uleb128 0x6
 2012 00f6 40       		.uleb128 0x40
 2013 00f7 18       		.uleb128 0x18
 2014 00f8 9742     		.uleb128 0x2117
 2015 00fa 19       		.uleb128 0x19
 2016 00fb 01       		.uleb128 0x1
 2017 00fc 13       		.uleb128 0x13
 2018 00fd 00       		.byte	0
 2019 00fe 00       		.byte	0
 2020 00ff 10       		.uleb128 0x10
 2021 0100 34       		.uleb128 0x34
 2022 0101 00       		.byte	0
 2023 0102 03       		.uleb128 0x3
 2024 0103 0E       		.uleb128 0xe
 2025 0104 3A       		.uleb128 0x3a
 2026 0105 0B       		.uleb128 0xb
 2027 0106 3B       		.uleb128 0x3b
 2028 0107 05       		.uleb128 0x5
 2029 0108 49       		.uleb128 0x49
 2030 0109 13       		.uleb128 0x13
 2031 010a 02       		.uleb128 0x2
 2032 010b 18       		.uleb128 0x18
 2033 010c 00       		.byte	0
 2034 010d 00       		.byte	0
 2035 010e 11       		.uleb128 0x11
 2036 010f 34       		.uleb128 0x34
 2037 0110 00       		.byte	0
 2038 0111 03       		.uleb128 0x3
 2039 0112 0E       		.uleb128 0xe
 2040 0113 3A       		.uleb128 0x3a
 2041 0114 0B       		.uleb128 0xb
 2042 0115 3B       		.uleb128 0x3b
 2043 0116 05       		.uleb128 0x5
 2044 0117 49       		.uleb128 0x49
 2045 0118 13       		.uleb128 0x13
 2046 0119 02       		.uleb128 0x2
 2047 011a 17       		.uleb128 0x17
 2048 011b 00       		.byte	0
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 65


 2049 011c 00       		.byte	0
 2050 011d 12       		.uleb128 0x12
 2051 011e 05       		.uleb128 0x5
 2052 011f 00       		.byte	0
 2053 0120 03       		.uleb128 0x3
 2054 0121 0E       		.uleb128 0xe
 2055 0122 3A       		.uleb128 0x3a
 2056 0123 0B       		.uleb128 0xb
 2057 0124 3B       		.uleb128 0x3b
 2058 0125 05       		.uleb128 0x5
 2059 0126 49       		.uleb128 0x49
 2060 0127 13       		.uleb128 0x13
 2061 0128 02       		.uleb128 0x2
 2062 0129 17       		.uleb128 0x17
 2063 012a 00       		.byte	0
 2064 012b 00       		.byte	0
 2065 012c 13       		.uleb128 0x13
 2066 012d 0F       		.uleb128 0xf
 2067 012e 00       		.byte	0
 2068 012f 0B       		.uleb128 0xb
 2069 0130 0B       		.uleb128 0xb
 2070 0131 49       		.uleb128 0x49
 2071 0132 13       		.uleb128 0x13
 2072 0133 00       		.byte	0
 2073 0134 00       		.byte	0
 2074 0135 14       		.uleb128 0x14
 2075 0136 26       		.uleb128 0x26
 2076 0137 00       		.byte	0
 2077 0138 49       		.uleb128 0x49
 2078 0139 13       		.uleb128 0x13
 2079 013a 00       		.byte	0
 2080 013b 00       		.byte	0
 2081 013c 15       		.uleb128 0x15
 2082 013d 898201   		.uleb128 0x4109
 2083 0140 01       		.byte	0x1
 2084 0141 11       		.uleb128 0x11
 2085 0142 01       		.uleb128 0x1
 2086 0143 31       		.uleb128 0x31
 2087 0144 13       		.uleb128 0x13
 2088 0145 01       		.uleb128 0x1
 2089 0146 13       		.uleb128 0x13
 2090 0147 00       		.byte	0
 2091 0148 00       		.byte	0
 2092 0149 16       		.uleb128 0x16
 2093 014a 0B       		.uleb128 0xb
 2094 014b 01       		.byte	0x1
 2095 014c 11       		.uleb128 0x11
 2096 014d 01       		.uleb128 0x1
 2097 014e 12       		.uleb128 0x12
 2098 014f 06       		.uleb128 0x6
 2099 0150 00       		.byte	0
 2100 0151 00       		.byte	0
 2101 0152 17       		.uleb128 0x17
 2102 0153 34       		.uleb128 0x34
 2103 0154 00       		.byte	0
 2104 0155 03       		.uleb128 0x3
 2105 0156 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 66


 2106 0157 3A       		.uleb128 0x3a
 2107 0158 0B       		.uleb128 0xb
 2108 0159 3B       		.uleb128 0x3b
 2109 015a 0B       		.uleb128 0xb
 2110 015b 49       		.uleb128 0x49
 2111 015c 13       		.uleb128 0x13
 2112 015d 3F       		.uleb128 0x3f
 2113 015e 19       		.uleb128 0x19
 2114 015f 02       		.uleb128 0x2
 2115 0160 18       		.uleb128 0x18
 2116 0161 00       		.byte	0
 2117 0162 00       		.byte	0
 2118 0163 18       		.uleb128 0x18
 2119 0164 2E       		.uleb128 0x2e
 2120 0165 00       		.byte	0
 2121 0166 3F       		.uleb128 0x3f
 2122 0167 19       		.uleb128 0x19
 2123 0168 3C       		.uleb128 0x3c
 2124 0169 19       		.uleb128 0x19
 2125 016a 6E       		.uleb128 0x6e
 2126 016b 0E       		.uleb128 0xe
 2127 016c 03       		.uleb128 0x3
 2128 016d 0E       		.uleb128 0xe
 2129 016e 3A       		.uleb128 0x3a
 2130 016f 0B       		.uleb128 0xb
 2131 0170 3B       		.uleb128 0x3b
 2132 0171 0B       		.uleb128 0xb
 2133 0172 00       		.byte	0
 2134 0173 00       		.byte	0
 2135 0174 00       		.byte	0
 2136              		.section	.debug_loc,"",%progbits
 2137              	.Ldebug_loc0:
 2138              	.LLST0:
 2139 0000 08000000 		.4byte	.LVL1
 2140 0004 34000000 		.4byte	.LVL4
 2141 0008 0100     		.2byte	0x1
 2142 000a 54       		.byte	0x54
 2143 000b 00000000 		.4byte	0
 2144 000f 00000000 		.4byte	0
 2145              	.LLST1:
 2146 0013 08000000 		.4byte	.LVL8
 2147 0017 2E000000 		.4byte	.LVL11
 2148 001b 0100     		.2byte	0x1
 2149 001d 54       		.byte	0x54
 2150 001e 00000000 		.4byte	0
 2151 0022 00000000 		.4byte	0
 2152              	.LLST2:
 2153 0026 00000000 		.4byte	.LVL16
 2154 002a 10000000 		.4byte	.LVL18
 2155 002e 0200     		.2byte	0x2
 2156 0030 30       		.byte	0x30
 2157 0031 9F       		.byte	0x9f
 2158 0032 10000000 		.4byte	.LVL18
 2159 0036 18000000 		.4byte	.LVL19
 2160 003a 0100     		.2byte	0x1
 2161 003c 50       		.byte	0x50
 2162 003d 18000000 		.4byte	.LVL19
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 67


 2163 0041 1C000000 		.4byte	.LVL20
 2164 0045 0200     		.2byte	0x2
 2165 0047 30       		.byte	0x30
 2166 0048 9F       		.byte	0x9f
 2167 0049 1C000000 		.4byte	.LVL20
 2168 004d 28000000 		.4byte	.LFE9
 2169 0051 0100     		.2byte	0x1
 2170 0053 50       		.byte	0x50
 2171 0054 00000000 		.4byte	0
 2172 0058 00000000 		.4byte	0
 2173              	.LLST3:
 2174 005c 06000000 		.4byte	.LVL25
 2175 0060 1D000000 		.4byte	.LVL26-1
 2176 0064 0100     		.2byte	0x1
 2177 0066 50       		.byte	0x50
 2178 0067 00000000 		.4byte	0
 2179 006b 00000000 		.4byte	0
 2180              	.LLST4:
 2181 006f 00000000 		.4byte	.LVL33
 2182 0073 0E000000 		.4byte	.LVL35
 2183 0077 0100     		.2byte	0x1
 2184 0079 50       		.byte	0x50
 2185 007a 0E000000 		.4byte	.LVL35
 2186 007e 18000000 		.4byte	.LVL39
 2187 0082 0100     		.2byte	0x1
 2188 0084 55       		.byte	0x55
 2189 0085 18000000 		.4byte	.LVL39
 2190 0089 1A000000 		.4byte	.LVL40
 2191 008d 0100     		.2byte	0x1
 2192 008f 50       		.byte	0x50
 2193 0090 1A000000 		.4byte	.LVL40
 2194 0094 20000000 		.4byte	.LVL42
 2195 0098 0100     		.2byte	0x1
 2196 009a 55       		.byte	0x55
 2197 009b 20000000 		.4byte	.LVL42
 2198 009f 28000000 		.4byte	.LFE20
 2199 00a3 0400     		.2byte	0x4
 2200 00a5 F3       		.byte	0xf3
 2201 00a6 01       		.uleb128 0x1
 2202 00a7 50       		.byte	0x50
 2203 00a8 9F       		.byte	0x9f
 2204 00a9 00000000 		.4byte	0
 2205 00ad 00000000 		.4byte	0
 2206              	.LLST5:
 2207 00b1 04000000 		.4byte	.LVL34
 2208 00b5 0E000000 		.4byte	.LVL35
 2209 00b9 0200     		.2byte	0x2
 2210 00bb 30       		.byte	0x30
 2211 00bc 9F       		.byte	0x9f
 2212 00bd 0E000000 		.4byte	.LVL35
 2213 00c1 14000000 		.4byte	.LVL37
 2214 00c5 0100     		.2byte	0x1
 2215 00c7 54       		.byte	0x54
 2216 00c8 16000000 		.4byte	.LVL38
 2217 00cc 18000000 		.4byte	.LVL39
 2218 00d0 0100     		.2byte	0x1
 2219 00d2 54       		.byte	0x54
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 68


 2220 00d3 18000000 		.4byte	.LVL39
 2221 00d7 1A000000 		.4byte	.LVL40
 2222 00db 0200     		.2byte	0x2
 2223 00dd 30       		.byte	0x30
 2224 00de 9F       		.byte	0x9f
 2225 00df 1A000000 		.4byte	.LVL40
 2226 00e3 20000000 		.4byte	.LVL41
 2227 00e7 0100     		.2byte	0x1
 2228 00e9 54       		.byte	0x54
 2229 00ea 00000000 		.4byte	0
 2230 00ee 00000000 		.4byte	0
 2231              	.LLST6:
 2232 00f2 00000000 		.4byte	.LVL43
 2233 00f6 10000000 		.4byte	.LVL45
 2234 00fa 0100     		.2byte	0x1
 2235 00fc 50       		.byte	0x50
 2236 00fd 10000000 		.4byte	.LVL45
 2237 0101 1C000000 		.4byte	.LVL49
 2238 0105 0100     		.2byte	0x1
 2239 0107 56       		.byte	0x56
 2240 0108 1C000000 		.4byte	.LVL49
 2241 010c 1E000000 		.4byte	.LVL50
 2242 0110 0100     		.2byte	0x1
 2243 0112 50       		.byte	0x50
 2244 0113 1E000000 		.4byte	.LVL50
 2245 0117 22000000 		.4byte	.LVL52
 2246 011b 0100     		.2byte	0x1
 2247 011d 56       		.byte	0x56
 2248 011e 22000000 		.4byte	.LVL52
 2249 0122 28000000 		.4byte	.LFE21
 2250 0126 0400     		.2byte	0x4
 2251 0128 F3       		.byte	0xf3
 2252 0129 01       		.uleb128 0x1
 2253 012a 50       		.byte	0x50
 2254 012b 9F       		.byte	0x9f
 2255 012c 00000000 		.4byte	0
 2256 0130 00000000 		.4byte	0
 2257              	.LLST7:
 2258 0134 00000000 		.4byte	.LVL43
 2259 0138 10000000 		.4byte	.LVL45
 2260 013c 0100     		.2byte	0x1
 2261 013e 51       		.byte	0x51
 2262 013f 10000000 		.4byte	.LVL45
 2263 0143 1C000000 		.4byte	.LVL49
 2264 0147 0400     		.2byte	0x4
 2265 0149 F3       		.byte	0xf3
 2266 014a 01       		.uleb128 0x1
 2267 014b 51       		.byte	0x51
 2268 014c 9F       		.byte	0x9f
 2269 014d 1C000000 		.4byte	.LVL49
 2270 0151 1E000000 		.4byte	.LVL50
 2271 0155 0100     		.2byte	0x1
 2272 0157 51       		.byte	0x51
 2273 0158 1E000000 		.4byte	.LVL50
 2274 015c 28000000 		.4byte	.LFE21
 2275 0160 0400     		.2byte	0x4
 2276 0162 F3       		.byte	0xf3
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 69


 2277 0163 01       		.uleb128 0x1
 2278 0164 51       		.byte	0x51
 2279 0165 9F       		.byte	0x9f
 2280 0166 00000000 		.4byte	0
 2281 016a 00000000 		.4byte	0
 2282              	.LLST8:
 2283 016e 06000000 		.4byte	.LVL44
 2284 0172 10000000 		.4byte	.LVL45
 2285 0176 0200     		.2byte	0x2
 2286 0178 30       		.byte	0x30
 2287 0179 9F       		.byte	0x9f
 2288 017a 10000000 		.4byte	.LVL45
 2289 017e 18000000 		.4byte	.LVL47
 2290 0182 0100     		.2byte	0x1
 2291 0184 54       		.byte	0x54
 2292 0185 1A000000 		.4byte	.LVL48
 2293 0189 1C000000 		.4byte	.LVL49
 2294 018d 0100     		.2byte	0x1
 2295 018f 54       		.byte	0x54
 2296 0190 1C000000 		.4byte	.LVL49
 2297 0194 1E000000 		.4byte	.LVL50
 2298 0198 0200     		.2byte	0x2
 2299 019a 30       		.byte	0x30
 2300 019b 9F       		.byte	0x9f
 2301 019c 1E000000 		.4byte	.LVL50
 2302 01a0 22000000 		.4byte	.LVL51
 2303 01a4 0100     		.2byte	0x1
 2304 01a6 54       		.byte	0x54
 2305 01a7 00000000 		.4byte	0
 2306 01ab 00000000 		.4byte	0
 2307              	.LLST9:
 2308 01af 00000000 		.4byte	.LVL53
 2309 01b3 0D000000 		.4byte	.LVL54-1
 2310 01b7 0100     		.2byte	0x1
 2311 01b9 50       		.byte	0x50
 2312 01ba 0D000000 		.4byte	.LVL54-1
 2313 01be 20000000 		.4byte	.LFE22
 2314 01c2 0400     		.2byte	0x4
 2315 01c4 F3       		.byte	0xf3
 2316 01c5 01       		.uleb128 0x1
 2317 01c6 50       		.byte	0x50
 2318 01c7 9F       		.byte	0x9f
 2319 01c8 00000000 		.4byte	0
 2320 01cc 00000000 		.4byte	0
 2321              	.LLST10:
 2322 01d0 06000000 		.4byte	.LVL57
 2323 01d4 0E000000 		.4byte	.LVL58
 2324 01d8 0100     		.2byte	0x1
 2325 01da 53       		.byte	0x53
 2326 01db 12000000 		.4byte	.LVL59
 2327 01df 16000000 		.4byte	.LVL60
 2328 01e3 0100     		.2byte	0x1
 2329 01e5 53       		.byte	0x53
 2330 01e6 18000000 		.4byte	.LVL61
 2331 01ea 20000000 		.4byte	.LFE23
 2332 01ee 0100     		.2byte	0x1
 2333 01f0 50       		.byte	0x50
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 70


 2334 01f1 00000000 		.4byte	0
 2335 01f5 00000000 		.4byte	0
 2336              	.LLST11:
 2337 01f9 06000000 		.4byte	.LVL62
 2338 01fd 1D000000 		.4byte	.LVL63-1
 2339 0201 0100     		.2byte	0x1
 2340 0203 50       		.byte	0x50
 2341 0204 00000000 		.4byte	0
 2342 0208 00000000 		.4byte	0
 2343              	.LLST12:
 2344 020c 00000000 		.4byte	.LVL64
 2345 0210 3E000000 		.4byte	.LVL69
 2346 0214 0100     		.2byte	0x1
 2347 0216 50       		.byte	0x50
 2348 0217 3E000000 		.4byte	.LVL69
 2349 021b 60000000 		.4byte	.LFE25
 2350 021f 0400     		.2byte	0x4
 2351 0221 F3       		.byte	0xf3
 2352 0222 01       		.uleb128 0x1
 2353 0223 50       		.byte	0x50
 2354 0224 9F       		.byte	0x9f
 2355 0225 00000000 		.4byte	0
 2356 0229 00000000 		.4byte	0
 2357              	.LLST13:
 2358 022d 26000000 		.4byte	.LVL65
 2359 0231 2A000000 		.4byte	.LVL66
 2360 0235 0100     		.2byte	0x1
 2361 0237 53       		.byte	0x53
 2362 0238 36000000 		.4byte	.LVL67
 2363 023c 3C000000 		.4byte	.LVL68
 2364 0240 0100     		.2byte	0x1
 2365 0242 52       		.byte	0x52
 2366 0243 00000000 		.4byte	0
 2367 0247 00000000 		.4byte	0
 2368              		.section	.debug_aranges,"",%progbits
 2369 0000 EC000000 		.4byte	0xec
 2370 0004 0200     		.2byte	0x2
 2371 0006 00000000 		.4byte	.Ldebug_info0
 2372 000a 04       		.byte	0x4
 2373 000b 00       		.byte	0
 2374 000c 0000     		.2byte	0
 2375 000e 0000     		.2byte	0
 2376 0010 00000000 		.4byte	.LFB1
 2377 0014 34000000 		.4byte	.LFE1-.LFB1
 2378 0018 00000000 		.4byte	.LFB2
 2379 001c 44000000 		.4byte	.LFE2-.LFB2
 2380 0020 00000000 		.4byte	.LFB0
 2381 0024 20000000 		.4byte	.LFE0-.LFB0
 2382 0028 00000000 		.4byte	.LFB3
 2383 002c 3C000000 		.4byte	.LFE3-.LFB3
 2384 0030 00000000 		.4byte	.LFB4
 2385 0034 04000000 		.4byte	.LFE4-.LFB4
 2386 0038 00000000 		.4byte	.LFB5
 2387 003c 02000000 		.4byte	.LFE5-.LFB5
 2388 0040 00000000 		.4byte	.LFB6
 2389 0044 0C000000 		.4byte	.LFE6-.LFB6
 2390 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 71


 2391 004c 0C000000 		.4byte	.LFE7-.LFB7
 2392 0050 00000000 		.4byte	.LFB8
 2393 0054 10000000 		.4byte	.LFE8-.LFB8
 2394 0058 00000000 		.4byte	.LFB9
 2395 005c 28000000 		.4byte	.LFE9-.LFB9
 2396 0060 00000000 		.4byte	.LFB10
 2397 0064 12000000 		.4byte	.LFE10-.LFB10
 2398 0068 00000000 		.4byte	.LFB11
 2399 006c 14000000 		.4byte	.LFE11-.LFB11
 2400 0070 00000000 		.4byte	.LFB12
 2401 0074 24000000 		.4byte	.LFE12-.LFB12
 2402 0078 00000000 		.4byte	.LFB13
 2403 007c 02000000 		.4byte	.LFE13-.LFB13
 2404 0080 00000000 		.4byte	.LFB14
 2405 0084 0C000000 		.4byte	.LFE14-.LFB14
 2406 0088 00000000 		.4byte	.LFB15
 2407 008c 0C000000 		.4byte	.LFE15-.LFB15
 2408 0090 00000000 		.4byte	.LFB16
 2409 0094 0C000000 		.4byte	.LFE16-.LFB16
 2410 0098 00000000 		.4byte	.LFB17
 2411 009c 18000000 		.4byte	.LFE17-.LFB17
 2412 00a0 00000000 		.4byte	.LFB18
 2413 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2414 00a8 00000000 		.4byte	.LFB19
 2415 00ac 18000000 		.4byte	.LFE19-.LFB19
 2416 00b0 00000000 		.4byte	.LFB20
 2417 00b4 28000000 		.4byte	.LFE20-.LFB20
 2418 00b8 00000000 		.4byte	.LFB21
 2419 00bc 28000000 		.4byte	.LFE21-.LFB21
 2420 00c0 00000000 		.4byte	.LFB22
 2421 00c4 20000000 		.4byte	.LFE22-.LFB22
 2422 00c8 00000000 		.4byte	.LFB23
 2423 00cc 20000000 		.4byte	.LFE23-.LFB23
 2424 00d0 00000000 		.4byte	.LFB24
 2425 00d4 24000000 		.4byte	.LFE24-.LFB24
 2426 00d8 00000000 		.4byte	.LFB25
 2427 00dc 60000000 		.4byte	.LFE25-.LFB25
 2428 00e0 00000000 		.4byte	.LFB26
 2429 00e4 02000000 		.4byte	.LFE26-.LFB26
 2430 00e8 00000000 		.4byte	0
 2431 00ec 00000000 		.4byte	0
 2432              		.section	.debug_ranges,"",%progbits
 2433              	.Ldebug_ranges0:
 2434 0000 00000000 		.4byte	.LFB1
 2435 0004 34000000 		.4byte	.LFE1
 2436 0008 00000000 		.4byte	.LFB2
 2437 000c 44000000 		.4byte	.LFE2
 2438 0010 00000000 		.4byte	.LFB0
 2439 0014 20000000 		.4byte	.LFE0
 2440 0018 00000000 		.4byte	.LFB3
 2441 001c 3C000000 		.4byte	.LFE3
 2442 0020 00000000 		.4byte	.LFB4
 2443 0024 04000000 		.4byte	.LFE4
 2444 0028 00000000 		.4byte	.LFB5
 2445 002c 02000000 		.4byte	.LFE5
 2446 0030 00000000 		.4byte	.LFB6
 2447 0034 0C000000 		.4byte	.LFE6
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 72


 2448 0038 00000000 		.4byte	.LFB7
 2449 003c 0C000000 		.4byte	.LFE7
 2450 0040 00000000 		.4byte	.LFB8
 2451 0044 10000000 		.4byte	.LFE8
 2452 0048 00000000 		.4byte	.LFB9
 2453 004c 28000000 		.4byte	.LFE9
 2454 0050 00000000 		.4byte	.LFB10
 2455 0054 12000000 		.4byte	.LFE10
 2456 0058 00000000 		.4byte	.LFB11
 2457 005c 14000000 		.4byte	.LFE11
 2458 0060 00000000 		.4byte	.LFB12
 2459 0064 24000000 		.4byte	.LFE12
 2460 0068 00000000 		.4byte	.LFB13
 2461 006c 02000000 		.4byte	.LFE13
 2462 0070 00000000 		.4byte	.LFB14
 2463 0074 0C000000 		.4byte	.LFE14
 2464 0078 00000000 		.4byte	.LFB15
 2465 007c 0C000000 		.4byte	.LFE15
 2466 0080 00000000 		.4byte	.LFB16
 2467 0084 0C000000 		.4byte	.LFE16
 2468 0088 00000000 		.4byte	.LFB17
 2469 008c 18000000 		.4byte	.LFE17
 2470 0090 00000000 		.4byte	.LFB18
 2471 0094 0C000000 		.4byte	.LFE18
 2472 0098 00000000 		.4byte	.LFB19
 2473 009c 18000000 		.4byte	.LFE19
 2474 00a0 00000000 		.4byte	.LFB20
 2475 00a4 28000000 		.4byte	.LFE20
 2476 00a8 00000000 		.4byte	.LFB21
 2477 00ac 28000000 		.4byte	.LFE21
 2478 00b0 00000000 		.4byte	.LFB22
 2479 00b4 20000000 		.4byte	.LFE22
 2480 00b8 00000000 		.4byte	.LFB23
 2481 00bc 20000000 		.4byte	.LFE23
 2482 00c0 00000000 		.4byte	.LFB24
 2483 00c4 24000000 		.4byte	.LFE24
 2484 00c8 00000000 		.4byte	.LFB25
 2485 00cc 60000000 		.4byte	.LFE25
 2486 00d0 00000000 		.4byte	.LFB26
 2487 00d4 02000000 		.4byte	.LFE26
 2488 00d8 00000000 		.4byte	0
 2489 00dc 00000000 		.4byte	0
 2490              		.section	.debug_line,"",%progbits
 2491              	.Ldebug_line0:
 2492 0000 DC020000 		.section	.debug_str,"MS",%progbits,1
 2492      02006100 
 2492      00000201 
 2492      FB0E0D00 
 2492      01010101 
 2493              	.LASF28:
 2494 0000 52533438 		.ascii	"RS485_ReadRxStatus\000"
 2494      355F5265 
 2494      61645278 
 2494      53746174 
 2494      757300
 2495              	.LASF10:
 2496 0013 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 73


 2496      313600
 2497              	.LASF62:
 2498 001a 43794578 		.ascii	"CyExitCriticalSection\000"
 2498      69744372 
 2498      69746963 
 2498      616C5365 
 2498      6374696F 
 2499              	.LASF43:
 2500 0030 74784461 		.ascii	"txDataByte\000"
 2500      74614279 
 2500      746500
 2501              	.LASF50:
 2502 003b 52533438 		.ascii	"RS485_PutArray\000"
 2502      355F5075 
 2502      74417272 
 2502      617900
 2503              	.LASF48:
 2504 004a 73747269 		.ascii	"string\000"
 2504      6E6700
 2505              	.LASF59:
 2506 0051 52533438 		.ascii	"RS485_SetTxAddressMode\000"
 2506      355F5365 
 2506      74547841 
 2506      64647265 
 2506      73734D6F 
 2507              	.LASF64:
 2508 0068 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2508      43313120 
 2508      352E342E 
 2508      31203230 
 2508      31363036 
 2509 009b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2509      20726576 
 2509      6973696F 
 2509      6E203233 
 2509      37373135 
 2510 00ce 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2510      66756E63 
 2510      74696F6E 
 2510      2D736563 
 2510      74696F6E 
 2511              	.LASF7:
 2512 00f6 6C6F6E67 		.ascii	"long long unsigned int\000"
 2512      206C6F6E 
 2512      6720756E 
 2512      7369676E 
 2512      65642069 
 2513              	.LASF21:
 2514 010d 656E6162 		.ascii	"enableInterrupts\000"
 2514      6C65496E 
 2514      74657272 
 2514      75707473 
 2514      00
 2515              	.LASF6:
 2516 011e 6C6F6E67 		.ascii	"long long int\000"
 2516      206C6F6E 
 2516      6720696E 
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 74


 2516      7400
 2517              	.LASF0:
 2518 012c 7369676E 		.ascii	"signed char\000"
 2518      65642063 
 2518      68617200 
 2519              	.LASF58:
 2520 0138 74785065 		.ascii	"txPeriod\000"
 2520      72696F64 
 2520      00
 2521              	.LASF65:
 2522 0141 47656E65 		.ascii	"Generated_Source\\PSoC4\\RS485.c\000"
 2522      72617465 
 2522      645F536F 
 2522      75726365 
 2522      5C50536F 
 2523              	.LASF4:
 2524 0160 6C6F6E67 		.ascii	"long int\000"
 2524      20696E74 
 2524      00
 2525              	.LASF9:
 2526 0169 75696E74 		.ascii	"uint8\000"
 2526      3800
 2527              	.LASF12:
 2528 016f 646F7562 		.ascii	"double\000"
 2528      6C6500
 2529              	.LASF37:
 2530 0176 61646472 		.ascii	"addressMode\000"
 2530      6573734D 
 2530      6F646500 
 2531              	.LASF36:
 2532 0182 52533438 		.ascii	"RS485_SetRxAddressMode\000"
 2532      355F5365 
 2532      74527841 
 2532      64647265 
 2532      73734D6F 
 2533              	.LASF24:
 2534 0199 636F6E74 		.ascii	"control\000"
 2534      726F6C00 
 2535              	.LASF68:
 2536 01a1 52533438 		.ascii	"RS485_initVar\000"
 2536      355F696E 
 2536      69745661 
 2536      7200
 2537              	.LASF27:
 2538 01af 52533438 		.ascii	"RS485_ReadRxData\000"
 2538      355F5265 
 2538      61645278 
 2538      44617461 
 2538      00
 2539              	.LASF67:
 2540 01c0 52533438 		.ascii	"RS485_Init\000"
 2540      355F496E 
 2540      697400
 2541              	.LASF56:
 2542 01cb 7265744D 		.ascii	"retMode\000"
 2542      6F646500 
 2543              	.LASF8:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 75


 2544 01d3 756E7369 		.ascii	"unsigned int\000"
 2544      676E6564 
 2544      20696E74 
 2544      00
 2545              	.LASF35:
 2546 01e0 52533438 		.ascii	"RS485_ClearRxBuffer\000"
 2546      355F436C 
 2546      65617252 
 2546      78427566 
 2546      66657200 
 2547              	.LASF5:
 2548 01f4 6C6F6E67 		.ascii	"long unsigned int\000"
 2548      20756E73 
 2548      69676E65 
 2548      6420696E 
 2548      7400
 2549              	.LASF30:
 2550 0206 52533438 		.ascii	"RS485_GetChar\000"
 2550      355F4765 
 2550      74436861 
 2550      7200
 2551              	.LASF34:
 2552 0214 73697A65 		.ascii	"size\000"
 2552      00
 2553              	.LASF3:
 2554 0219 73686F72 		.ascii	"short unsigned int\000"
 2554      7420756E 
 2554      7369676E 
 2554      65642069 
 2554      6E7400
 2555              	.LASF66:
 2556 022c 433A5C55 		.ascii	"C:\\Users\\Luke Young\\Documents\\06_Projects\\PSOC"
 2556      73657273 
 2556      5C4C756B 
 2556      6520596F 
 2556      756E675C 
 2557 025a 5F4C6962 		.ascii	"_Librays\\Modbus_RTU_PSOC4\\example_projects\\Basic"
 2557      72617973 
 2557      5C4D6F64 
 2557      6275735F 
 2557      5254555F 
 2558 028a 5F315F4D 		.ascii	"_1_Modbus_RTU_PSOC4.cydsn\000"
 2558      6F646275 
 2558      735F5254 
 2558      555F5053 
 2558      4F43342E 
 2559              	.LASF45:
 2560 02a4 52533438 		.ascii	"RS485_ReadTxStatus\000"
 2560      355F5265 
 2560      61645478 
 2560      53746174 
 2560      757300
 2561              	.LASF49:
 2562 02b7 62756649 		.ascii	"bufIndex\000"
 2562      6E646578 
 2562      00
 2563              	.LASF60:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 76


 2564 02c0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2564      74657243 
 2564      72697469 
 2564      63616C53 
 2564      65637469 
 2565              	.LASF25:
 2566 02d7 696E7453 		.ascii	"intSrc\000"
 2566      726300
 2567              	.LASF53:
 2568 02de 52533438 		.ascii	"RS485_GetTxBufferSize\000"
 2568      355F4765 
 2568      74547842 
 2568      75666665 
 2568      7253697A 
 2569              	.LASF42:
 2570 02f4 52533438 		.ascii	"RS485_WriteTxData\000"
 2570      355F5772 
 2570      69746554 
 2570      78446174 
 2570      6100
 2571              	.LASF57:
 2572 0306 746D7053 		.ascii	"tmpStat\000"
 2572      74617400 
 2573              	.LASF54:
 2574 030e 52533438 		.ascii	"RS485_ClearTxBuffer\000"
 2574      355F436C 
 2574      65617254 
 2574      78427566 
 2574      66657200 
 2575              	.LASF17:
 2576 0322 73697A65 		.ascii	"sizetype\000"
 2576      74797065 
 2576      00
 2577              	.LASF16:
 2578 032b 6C6F6E67 		.ascii	"long double\000"
 2578      20646F75 
 2578      626C6500 
 2579              	.LASF44:
 2580 0337 52533438 		.ascii	"RS485_ReadControlRegister\000"
 2580      355F5265 
 2580      6164436F 
 2580      6E74726F 
 2580      6C526567 
 2581              	.LASF31:
 2582 0351 72785374 		.ascii	"rxStatus\000"
 2582      61747573 
 2582      00
 2583              	.LASF11:
 2584 035a 666C6F61 		.ascii	"float\000"
 2584      7400
 2585              	.LASF46:
 2586 0360 52533438 		.ascii	"RS485_PutChar\000"
 2586      355F5075 
 2586      74436861 
 2586      7200
 2587              	.LASF55:
 2588 036e 52533438 		.ascii	"RS485_SendBreak\000"
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 77


 2588      355F5365 
 2588      6E644272 
 2588      65616B00 
 2589              	.LASF15:
 2590 037e 72656738 		.ascii	"reg8\000"
 2590      00
 2591              	.LASF19:
 2592 0383 52533438 		.ascii	"RS485_Start\000"
 2592      355F5374 
 2592      61727400 
 2593              	.LASF1:
 2594 038f 756E7369 		.ascii	"unsigned char\000"
 2594      676E6564 
 2594      20636861 
 2594      7200
 2595              	.LASF23:
 2596 039d 52533438 		.ascii	"RS485_SetRxInterruptMode\000"
 2596      355F5365 
 2596      74527849 
 2596      6E746572 
 2596      72757074 
 2597              	.LASF33:
 2598 03b6 52533438 		.ascii	"RS485_GetRxBufferSize\000"
 2598      355F4765 
 2598      74527842 
 2598      75666665 
 2598      7253697A 
 2599              	.LASF2:
 2600 03cc 73686F72 		.ascii	"short int\000"
 2600      7420696E 
 2600      7400
 2601              	.LASF38:
 2602 03d6 52533438 		.ascii	"RS485_SetRxAddress1\000"
 2602      355F5365 
 2602      74527841 
 2602      64647265 
 2602      73733100 
 2603              	.LASF40:
 2604 03ea 52533438 		.ascii	"RS485_SetRxAddress2\000"
 2604      355F5365 
 2604      74527841 
 2604      64647265 
 2604      73733200 
 2605              	.LASF51:
 2606 03fe 62797465 		.ascii	"byteCount\000"
 2606      436F756E 
 2606      7400
 2607              	.LASF63:
 2608 0408 52533438 		.ascii	"RS485_IntClock_Stop\000"
 2608      355F496E 
 2608      74436C6F 
 2608      636B5F53 
 2608      746F7000 
 2609              	.LASF26:
 2610 041c 72784461 		.ascii	"rxData\000"
 2610      746100
 2611              	.LASF32:
ARM GAS  C:\Users\LUKEYO~1\AppData\Local\Temp\ccPLIRCd.s 			page 78


 2612 0423 52533438 		.ascii	"RS485_GetByte\000"
 2612      355F4765 
 2612      74427974 
 2612      6500
 2613              	.LASF52:
 2614 0431 52533438 		.ascii	"RS485_PutCRLF\000"
 2614      355F5075 
 2614      7443524C 
 2614      4600
 2615              	.LASF14:
 2616 043f 63686172 		.ascii	"char\000"
 2616      00
 2617              	.LASF13:
 2618 0444 63686172 		.ascii	"char8\000"
 2618      3800
 2619              	.LASF22:
 2620 044a 52533438 		.ascii	"RS485_WriteControlRegister\000"
 2620      355F5772 
 2620      69746543 
 2620      6F6E7472 
 2620      6F6C5265 
 2621              	.LASF47:
 2622 0465 52533438 		.ascii	"RS485_PutString\000"
 2622      355F5075 
 2622      74537472 
 2622      696E6700 
 2623              	.LASF18:
 2624 0475 52533438 		.ascii	"RS485_Enable\000"
 2624      355F456E 
 2624      61626C65 
 2624      00
 2625              	.LASF29:
 2626 0482 73746174 		.ascii	"status\000"
 2626      757300
 2627              	.LASF20:
 2628 0489 52533438 		.ascii	"RS485_Stop\000"
 2628      355F5374 
 2628      6F7000
 2629              	.LASF39:
 2630 0494 61646472 		.ascii	"address\000"
 2630      65737300 
 2631              	.LASF41:
 2632 049c 52533438 		.ascii	"RS485_SetTxInterruptMode\000"
 2632      355F5365 
 2632      74547849 
 2632      6E746572 
 2632      72757074 
 2633              	.LASF61:
 2634 04b5 52533438 		.ascii	"RS485_IntClock_Start\000"
 2634      355F496E 
 2634      74436C6F 
 2634      636B5F53 
 2634      74617274 
 2635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
